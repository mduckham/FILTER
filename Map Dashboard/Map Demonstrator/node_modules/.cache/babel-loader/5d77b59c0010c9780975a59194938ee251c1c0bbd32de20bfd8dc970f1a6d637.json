{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai'; // Import the Google AI SDK\n\n// --- LLM API Setup ---\n// IMPORTANT: Store your API key in an environment variable.\n// Create a .env.local file in your project root and add:\n// REACT_APP_GEMINI_API_KEY='YOUR_API_KEY_HERE'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- Legend Component ---\n// A reusable component to display the map legend.\nconst Legend = ({\n  title,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '2rem',\n      right: '1rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 0.5rem 0',\n        fontWeight: 'bold'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: item.color,\n          width: '18px',\n          height: '18px',\n          display: 'inline-block',\n          marginRight: '0.5rem',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Map Component ---\n// This version uses solid lines for boundary clarity.\n_c = Legend;\nexport default function Map() {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n\n  // State for the new search functionality\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n\n  // State for the dynamically generated description\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n\n  // --- Data for the Legends ---\n  const legendData = {\n    Employment: {\n      title: 'Employment (Total)',\n      items: [{\n        color: '#edf8e9',\n        label: '0 - 500'\n      }, {\n        color: '#c7e9c0',\n        label: '501 - 1000'\n      }, {\n        color: '#a1d99b',\n        label: '1001 - 1500'\n      }, {\n        color: '#74c476',\n        label: '1501 - 2000'\n      }, {\n        color: '#31a354',\n        label: '2001 - 2500'\n      }, {\n        color: '#006d2c',\n        label: '> 2500'\n      }]\n    },\n    Education: {\n      title: 'Education (Total)',\n      items: [{\n        color: '#fee5d9',\n        label: '0 - 250'\n      }, {\n        color: '#fcbba1',\n        label: '251 - 500'\n      }, {\n        color: '#fc9272',\n        label: '501 - 750'\n      }, {\n        color: '#fb6a4a',\n        label: '751 - 1000'\n      }, {\n        color: '#ef3b2c',\n        label: '1001 - 1500'\n      }, {\n        color: '#cb181d',\n        label: '> 1500'\n      }]\n    },\n    'Place of Birth': {\n      title: 'Place of Birth (Total)',\n      items: [{\n        color: '#feedde',\n        label: '0 - 500'\n      }, {\n        color: '#fdd0a2',\n        label: '501 - 1000'\n      }, {\n        color: '#fdae6b',\n        label: '1001 - 1500'\n      }, {\n        color: '#fd8d3c',\n        label: '1501 - 2000'\n      }, {\n        color: '#f16913',\n        label: '2001 - 2500'\n      }, {\n        color: '#d94801',\n        label: '> 2500'\n      }]\n    },\n    Income: {\n      title: 'Income (Total)',\n      items: [{\n        color: '#f2f0f7',\n        label: '0 - 500'\n      }, {\n        color: '#dadaeb',\n        label: '500 - 1000'\n      }, {\n        color: '#bcbddc',\n        label: '1000 - 2000'\n      }, {\n        color: '#9e9ac8',\n        label: '2000 - 3000'\n      }, {\n        color: '#756bb1',\n        label: '3000 - 3500'\n      }, {\n        color: '#54278f',\n        label: '> 3500'\n      }]\n    },\n    Occupation: {\n      title: 'Occupation (Total)',\n      items: [{\n        color: '#f7fbff',\n        label: '0 - 250'\n      }, {\n        color: '#deebf7',\n        label: '251 - 500'\n      }, {\n        color: '#c6dbef',\n        label: '501 - 750'\n      }, {\n        color: '#9ecae1',\n        label: '751 - 1000'\n      }, {\n        color: '#6baed6',\n        label: '1001 - 1500'\n      }, {\n        color: '#4292c6',\n        label: '1501 - 2000'\n      }, {\n        color: '#2171b5',\n        label: '2001 - 2500'\n      }, {\n        color: '#084594',\n        label: '> 2500'\n      }]\n    }\n  };\n\n  // --- Data configuration for each indicator ---\n  const indicatorConfig = {\n    Employment: {\n      path: '/data/employment-fb-sa1.geojson',\n      property: 'employment-VIC_Total'\n    },\n    Education: {\n      path: '/data/education-fb-sa1.geojson',\n      property: 'Education-VIC_Total'\n    },\n    'Place of Birth': {\n      path: '/data/POB-fb-sa1.geojson',\n      property: 'POB-VIC1_Total'\n    },\n    Income: {\n      path: '/data/income-fb-sa1.geojson',\n      property: 'Income-VIC1_Total'\n    },\n    Occupation: {\n      path: '/data/occupation-fb-sa1.geojson',\n      property: 'Occupation-VIC_Total'\n    }\n  };\n\n  // --- Main useEffect for Map Initialization and Layer Ordering ---\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false\n    });\n    map.current.on('error', e => {\n      console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error');\n    });\n    map.current.on('load', () => {\n      var _styleLayers$find;\n      const bounds = [[144.888484, -37.853104], [144.956026, -37.814502]];\n      map.current.fitBounds(bounds, {\n        padding: 20\n      });\n\n      // --- Data Sources ---\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84.geojson'\n      }, {\n        name: 'employment',\n        path: '/data/employment-fb-sa1.geojson'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson'\n      }, {\n        name: 'pob',\n        path: '/data/POB-fb-sa1.geojson'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson'\n      }, {\n        name: 'precincts',\n        path: '/data/fb-precincts-official.geojson'\n      }];\n      sources.forEach(s => {\n        map.current.addSource(`${s.name}-data-source`, {\n          type: 'geojson',\n          data: s.path\n        });\n      });\n      const styleLayers = map.current.getStyle().layers;\n      const firstSymbolId = (_styleLayers$find = styleLayers.find(layer => layer.type === 'symbol')) === null || _styleLayers$find === void 0 ? void 0 : _styleLayers$find.id;\n\n      // --- Indicator Layers (Bottom of our stack) ---\n      const indicatorLayers = [{\n        id: 'employment-layer',\n        indicatorName: 'Employment',\n        source: 'employment-data-source',\n        property: indicatorConfig.Employment.property,\n        colors: legendData.Employment.items.map(i => i.color),\n        stops: [0, 500, 1000, 1500, 2000, 2500]\n      }, {\n        id: 'education-layer',\n        indicatorName: 'Education',\n        source: 'education-data-source',\n        property: indicatorConfig.Education.property,\n        colors: legendData.Education.items.map(i => i.color),\n        stops: [0, 250, 500, 750, 1000, 1500]\n      }, {\n        id: 'pob-layer',\n        indicatorName: 'Place of Birth',\n        source: 'pob-data-source',\n        property: indicatorConfig['Place of Birth'].property,\n        colors: legendData['Place of Birth'].items.map(i => i.color),\n        stops: [0, 500, 1000, 1500, 2000, 2500]\n      }, {\n        id: 'income-layer',\n        indicatorName: 'Income',\n        source: 'income-data-source',\n        property: indicatorConfig.Income.property,\n        colors: legendData.Income.items.map(i => i.color),\n        stops: [0, 500, 1000, 2000, 3000, 3500]\n      }, {\n        id: 'occupation-layer',\n        indicatorName: 'Occupation',\n        source: 'occupation-data-source',\n        property: indicatorConfig.Occupation.property,\n        colors: legendData.Occupation.items.map(i => i.color),\n        stops: [0, 250, 500, 750, 1000, 1500, 2000, 2500]\n      }];\n      indicatorLayers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.7\n          }\n        }, firstSymbolId);\n        map.current.on('click', layer.id, e => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n            new maplibregl.Popup().setLngLat(e.lngLat).setHTML(`<div style=\"font-family: sans-serif; padding: 5px; text-align: left;\"><h4 style=\"margin: 0 0 5px 0; font-weight: bold;\">SA1: ${regionName}</h4><strong>${layer.indicatorName}:</strong> ${formattedValue}</div>`).addTo(map.current);\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => {\n          map.current.getCanvas().style.cursor = 'pointer';\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          map.current.getCanvas().style.cursor = '';\n        });\n      });\n\n      // Add SA1 Outline Layer (Solid Black)\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#000000',\n          // Solid black\n          'line-width': 1.5\n        }\n      }, firstSymbolId);\n\n      // Move Basemap Building Layer\n      if (map.current.getLayer('building')) {\n        map.current.moveLayer('building', firstSymbolId);\n        map.current.setPaintProperty('building', 'fill-color', '#d1d1d1');\n        map.current.setPaintProperty('building', 'fill-opacity', 0.6);\n      }\n\n      // Add Precincts Outline Layer (Solid Red)\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#b22222',\n          // A strong, solid red (Firebrick)\n          'line-width': 2.5\n          // No 'line-dasharray' makes the line solid\n        }\n      }, firstSymbolId);\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // --- useEffect to Toggle Layer Visibility ---\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['employment-layer', 'education-layer', 'pob-layer', 'income-layer', 'occupation-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '')}-layer` : null;\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // --- useEffect to generate description with the Gemini LLM ---\n  useEffect(() => {\n    if (!selectedIndicator) {\n      setDynamicDescription('');\n      return;\n    }\n    const generateLLMDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      const config = indicatorConfig[selectedIndicator];\n      if (!config) {\n        setIsDescriptionLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(config.path);\n        const geojsonData = await response.json();\n        let minFeature = null,\n          maxFeature = null,\n          sum = 0,\n          count = 0;\n        geojsonData.features.forEach(feature => {\n          const value = Number(feature.properties[config.property]);\n          if (!isNaN(value)) {\n            if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n            if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n            sum += value;\n            count++;\n          }\n        });\n        if (count === 0) {\n          setDynamicDescription('No valid data found to generate a description.');\n          setIsDescriptionLoading(false);\n          return;\n        }\n        const average = (sum / count).toFixed(2);\n        const minValue = Number(minFeature.properties[config.property]);\n        const maxValue = Number(maxFeature.properties[config.property]);\n        const minRegion = minFeature.properties['SA1_CODE21'];\n        const maxRegion = maxFeature.properties['SA1_CODE21'];\n        const prompt = `\n          You are a concise data analyst for a public-facing dashboard.\n          Based on the following data for the \"${selectedIndicator}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words).\n          Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\").\n          \n          Key Statistics:\n          - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion})\n          - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion})\n          - Average value across all areas: ${Number(average).toLocaleString()}\n        `;\n        const model = genAI.getGenerativeModel({\n          model: \"gemini-1.5-flash-latest\"\n        });\n        const result = await model.generateContent(prompt);\n        const llmResponse = await result.response;\n        const text = llmResponse.text();\n        setDynamicDescription(text);\n      } catch (error) {\n        console.error(\"Error generating LLM description:\", error);\n        setDynamicDescription('An error occurred while generating the description. Please check your API key and network connection.');\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generateLLMDescription();\n  }, [selectedIndicator]);\n\n  // --- UI Handlers ---\n  const handleSearchClick = () => {\n    setIndicators(['Employment', 'Education', 'Place of Birth', 'Income', 'Occupation']);\n    setShowIndicators(true);\n  };\n  const handleIndicatorSelect = indicator => {\n    setSelectedIndicator(prev => prev === indicator ? null : indicator);\n  };\n\n  // --- Component Render ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem',\n          backgroundColor: 'white',\n          padding: '1rem',\n          borderRadius: '0.5rem',\n          boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n          width: '288px',\n          zIndex: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.125rem',\n            fontWeight: 'bold',\n            marginBottom: '1rem'\n          },\n          children: \"I'm interested in ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value),\n            placeholder: \"e.g., 'jobs' or 'housing'\",\n            style: {\n              padding: '0.5rem',\n              border: '1px solid #D1D5DB',\n              borderRadius: '0.375rem',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearchClick,\n            style: {\n              backgroundColor: '#2563EB',\n              color: 'white',\n              fontWeight: 600,\n              padding: '0.5rem 1rem',\n              borderRadius: '0.375rem',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), showIndicators && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem',\n            paddingTop: '1rem',\n            borderTop: '1px solid #E5E7EB'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 600,\n              color: '#1F2937',\n              marginBottom: '0.5rem'\n            },\n            children: \"Suggested Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '0.5rem'\n            },\n            children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: indicator,\n                name: \"indicator\",\n                checked: selectedIndicator === indicator,\n                onChange: () => handleIndicatorSelect(indicator),\n                style: {\n                  height: '1rem',\n                  width: '1rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: indicator,\n                style: {\n                  marginLeft: '0.75rem',\n                  fontSize: '0.875rem',\n                  color: '#374151'\n                },\n                children: indicator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this)]\n            }, indicator, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), selectedIndicator && legendData[selectedIndicator] && /*#__PURE__*/_jsxDEV(Legend, {\n        title: legendData[selectedIndicator].title,\n        items: legendData[selectedIndicator].items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        backgroundColor: '#f8f9fa',\n        padding: '1.5rem',\n        borderLeft: '1px solid #dee2e6',\n        overflowY: 'auto'\n      },\n      children: selectedIndicator ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: 600,\n            color: '#495057',\n            marginBottom: '0.75rem'\n          },\n          children: selectedIndicator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), isDescriptionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            fontStyle: 'italic'\n          },\n          children: \"\\uD83E\\uDD16 Generating AI description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            lineHeight: 1.6\n          },\n          children: dynamicDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.95rem',\n          color: '#6c757d',\n          fontStyle: 'italic'\n        },\n        children: \"Select an indicator from the panel on the left to see its description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"lHfWYBX/Omf6ibH61MB6lx7bTLc=\");\n_c2 = Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","maplibregl","GoogleGenerativeAI","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","Legend","title","items","style","position","bottom","right","backgroundColor","padding","borderRadius","boxShadow","zIndex","width","children","margin","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","display","alignItems","marginBottom","color","height","marginRight","border","label","_c","Map","_s","mapContainer","searchText","setSearchText","indicators","setIndicators","selectedIndicator","setSelectedIndicator","showIndicators","setShowIndicators","dynamicDescription","setDynamicDescription","isDescriptionLoading","setIsDescriptionLoading","legendData","Employment","Education","Income","Occupation","indicatorConfig","path","property","current","container","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","on","e","console","error","message","_styleLayers$find","bounds","fitBounds","sources","name","forEach","s","addSource","type","data","styleLayers","getStyle","layers","firstSymbolId","find","layer","id","indicatorLayers","indicatorName","source","colors","i","stops","colorStops","flatMap","stop","length","addLayer","layout","visibility","paint","feature","features","regionName","properties","value","formattedValue","isNaN","Number","toLocaleString","Popup","setLngLat","lngLat","setHTML","addTo","getCanvas","cursor","getLayer","moveLayer","setPaintProperty","remove","isStyleLoaded","allLayerIds","selectedLayerId","toLowerCase","replace","layerId","setLayoutProperty","generateLLMDescription","config","response","fetch","geojsonData","json","minFeature","maxFeature","sum","count","average","toFixed","minValue","maxValue","minRegion","maxRegion","prompt","model","getGenerativeModel","result","generateContent","llmResponse","text","handleSearchClick","handleIndicatorSelect","indicator","prev","flex","ref","top","left","fontSize","flexDirection","gap","onChange","target","placeholder","outline","onClick","marginTop","paddingTop","borderTop","checked","htmlFor","marginLeft","borderLeft","overflowY","fontStyle","lineHeight","_c2","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai'; // Import the Google AI SDK\n\n// --- LLM API Setup ---\n// IMPORTANT: Store your API key in an environment variable.\n// Create a .env.local file in your project root and add:\n// REACT_APP_GEMINI_API_KEY='YOUR_API_KEY_HERE'\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n\n// --- Legend Component ---\n// A reusable component to display the map legend.\nconst Legend = ({ title, items }) => {\n  return (\n    <div style={{\n      position: 'absolute',\n      bottom: '2rem',\n      right: '1rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    }}>\n      <h4 style={{ margin: '0 0 0.5rem 0', fontWeight: 'bold' }}>{title}</h4>\n      {items.map((item, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.25rem' }}>\n          <span style={{\n            backgroundColor: item.color,\n            width: '18px',\n            height: '18px',\n            display: 'inline-block',\n            marginRight: '0.5rem',\n            border: '1px solid #ccc'\n          }}></span>\n          <span>{item.label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\n// --- Map Component ---\n// This version uses solid lines for boundary clarity.\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n\n  // State for the new search functionality\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  \n  // State for the dynamically generated description\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n\n  // --- Data for the Legends ---\n  const legendData = {\n    Employment: {\n      title: 'Employment (Total)',\n      items: [ { color: '#edf8e9', label: '0 - 500' }, { color: '#c7e9c0', label: '501 - 1000' }, { color: '#a1d99b', label: '1001 - 1500' }, { color: '#74c476', label: '1501 - 2000' }, { color: '#31a354', label: '2001 - 2500' }, { color: '#006d2c', label: '> 2500' } ]\n    },\n    Education: {\n      title: 'Education (Total)',\n      items: [ { color: '#fee5d9', label: '0 - 250' }, { color: '#fcbba1', label: '251 - 500' }, { color: '#fc9272', label: '501 - 750' }, { color: '#fb6a4a', label: '751 - 1000' }, { color: '#ef3b2c', label: '1001 - 1500' }, { color: '#cb181d', label: '> 1500' } ]\n    },\n    'Place of Birth': {\n      title: 'Place of Birth (Total)',\n      items: [ { color: '#feedde', label: '0 - 500' }, { color: '#fdd0a2', label: '501 - 1000' }, { color: '#fdae6b', label: '1001 - 1500' }, { color: '#fd8d3c', label: '1501 - 2000' }, { color: '#f16913', label: '2001 - 2500' }, { color: '#d94801', label: '> 2500' } ]\n    },\n    Income: {\n        title: 'Income (Total)',\n        items: [ { color: '#f2f0f7', label: '0 - 500' }, { color: '#dadaeb', label: '500 - 1000' }, { color: '#bcbddc', label: '1000 - 2000' }, { color: '#9e9ac8', label: '2000 - 3000' }, { color: '#756bb1', label: '3000 - 3500' }, { color: '#54278f', label: '> 3500' } ]\n    },\n    Occupation: {\n      title: 'Occupation (Total)',\n      items: [ { color: '#f7fbff', label: '0 - 250' }, { color: '#deebf7', label: '251 - 500' }, { color: '#c6dbef', label: '501 - 750' }, { color: '#9ecae1', label: '751 - 1000' }, { color: '#6baed6', label: '1001 - 1500' }, { color: '#4292c6', label: '1501 - 2000' }, { color: '#2171b5', label: '2001 - 2500' }, { color: '#084594', label: '> 2500' } ]\n    }\n  };\n\n  // --- Data configuration for each indicator ---\n  const indicatorConfig = {\n    Employment: { path: '/data/employment-fb-sa1.geojson', property: 'employment-VIC_Total' },\n    Education: { path: '/data/education-fb-sa1.geojson', property: 'Education-VIC_Total' },\n    'Place of Birth': { path: '/data/POB-fb-sa1.geojson', property: 'POB-VIC1_Total' },\n    Income: { path: '/data/income-fb-sa1.geojson', property: 'Income-VIC1_Total' },\n    Occupation: { path: '/data/occupation-fb-sa1.geojson', property: 'Occupation-VIC_Total' }\n  };\n\n\n  // --- Main useEffect for Map Initialization and Layer Ordering ---\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n    });\n\n    map.current.on('error', (e) => {\n        console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error');\n    });\n\n    map.current.on('load', () => {\n      const bounds = [\n        [144.888484, -37.853104],\n        [144.956026, -37.814502 ]\n      ];\n      map.current.fitBounds(bounds, { padding: 20 });\n\n      // --- Data Sources ---\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84.geojson' },\n        { name: 'employment', path: '/data/employment-fb-sa1.geojson' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson' },\n        { name: 'pob', path: '/data/POB-fb-sa1.geojson' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson' },\n        { name: 'precincts', path: '/data/fb-precincts-official.geojson' }\n      ];\n      sources.forEach(s => {\n        map.current.addSource(`${s.name}-data-source`, { type: 'geojson', data: s.path });\n      });\n\n      const styleLayers = map.current.getStyle().layers;\n      const firstSymbolId = styleLayers.find(layer => layer.type === 'symbol')?.id;\n\n      // --- Indicator Layers (Bottom of our stack) ---\n      const indicatorLayers = [\n        { id: 'employment-layer', indicatorName: 'Employment', source: 'employment-data-source', property: indicatorConfig.Employment.property, colors: legendData.Employment.items.map(i => i.color), stops: [0, 500, 1000, 1500, 2000, 2500] },\n        { id: 'education-layer', indicatorName: 'Education', source: 'education-data-source', property: indicatorConfig.Education.property, colors: legendData.Education.items.map(i => i.color), stops: [0, 250, 500, 750, 1000, 1500] },\n        { id: 'pob-layer', indicatorName: 'Place of Birth', source: 'pob-data-source', property: indicatorConfig['Place of Birth'].property, colors: legendData['Place of Birth'].items.map(i => i.color), stops: [0, 500, 1000, 1500, 2000, 2500] },\n        { id: 'income-layer', indicatorName: 'Income', source: 'income-data-source', property: indicatorConfig.Income.property, colors: legendData.Income.items.map(i => i.color), stops: [0, 500, 1000, 2000, 3000, 3500] },\n        { id: 'occupation-layer', indicatorName: 'Occupation', source: 'occupation-data-source', property: indicatorConfig.Occupation.property, colors: legendData.Occupation.items.map(i => i.color), stops: [0, 250, 500, 750, 1000, 1500, 2000, 2500] }\n      ];\n\n      indicatorLayers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: { visibility: 'none' },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.7\n          }\n        }, firstSymbolId);\n\n        map.current.on('click', layer.id, (e) => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n            new maplibregl.Popup()\n              .setLngLat(e.lngLat)\n              .setHTML(`<div style=\"font-family: sans-serif; padding: 5px; text-align: left;\"><h4 style=\"margin: 0 0 5px 0; font-weight: bold;\">SA1: ${regionName}</h4><strong>${layer.indicatorName}:</strong> ${formattedValue}</div>`)\n              .addTo(map.current);\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => { map.current.getCanvas().style.cursor = 'pointer'; });\n        map.current.on('mouseleave', layer.id, () => { map.current.getCanvas().style.cursor = ''; });\n      });\n      \n      // Add SA1 Outline Layer (Solid Black)\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#000000', // Solid black\n          'line-width': 1.5\n        }\n      }, firstSymbolId);\n\n      // Move Basemap Building Layer\n      if (map.current.getLayer('building')) {\n        map.current.moveLayer('building', firstSymbolId);\n        map.current.setPaintProperty('building', 'fill-color', '#d1d1d1');\n        map.current.setPaintProperty('building', 'fill-opacity', 0.6);\n      }\n\n      // Add Precincts Outline Layer (Solid Red)\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n            'line-color': '#b22222', // A strong, solid red (Firebrick)\n            'line-width': 2.5\n            // No 'line-dasharray' makes the line solid\n        }\n    }, firstSymbolId);\n    });\n\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // --- useEffect to Toggle Layer Visibility ---\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n\n    const allLayerIds = ['employment-layer', 'education-layer', 'pob-layer', 'income-layer', 'occupation-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '')}-layer` : null;\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n  \n  // --- useEffect to generate description with the Gemini LLM ---\n  useEffect(() => {\n    if (!selectedIndicator) {\n      setDynamicDescription('');\n      return;\n    }\n\n    const generateLLMDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n\n      const config = indicatorConfig[selectedIndicator];\n      if (!config) {\n        setIsDescriptionLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch(config.path);\n        const geojsonData = await response.json();\n        let minFeature = null, maxFeature = null, sum = 0, count = 0;\n        geojsonData.features.forEach(feature => {\n          const value = Number(feature.properties[config.property]);\n          if (!isNaN(value)) {\n            if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n            if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n            sum += value;\n            count++;\n          }\n        });\n        \n        if (count === 0) {\n            setDynamicDescription('No valid data found to generate a description.');\n            setIsDescriptionLoading(false);\n            return;\n        }\n\n        const average = (sum / count).toFixed(2);\n        const minValue = Number(minFeature.properties[config.property]);\n        const maxValue = Number(maxFeature.properties[config.property]);\n        const minRegion = minFeature.properties['SA1_CODE21'];\n        const maxRegion = maxFeature.properties['SA1_CODE21'];\n\n        const prompt = `\n          You are a concise data analyst for a public-facing dashboard.\n          Based on the following data for the \"${selectedIndicator}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words).\n          Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\").\n          \n          Key Statistics:\n          - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion})\n          - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion})\n          - Average value across all areas: ${Number(average).toLocaleString()}\n        `;\n\n        const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n        const result = await model.generateContent(prompt);\n        const llmResponse = await result.response;\n        const text = llmResponse.text();\n        \n        setDynamicDescription(text);\n\n      } catch (error) {\n        console.error(\"Error generating LLM description:\", error);\n        setDynamicDescription('An error occurred while generating the description. Please check your API key and network connection.');\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n\n    generateLLMDescription();\n  }, [selectedIndicator]);\n\n\n  // --- UI Handlers ---\n  const handleSearchClick = () => {\n    setIndicators(['Employment', 'Education', 'Place of Birth', 'Income', 'Occupation']);\n    setShowIndicators(true);\n  };\n\n  const handleIndicatorSelect = (indicator) => {\n    setSelectedIndicator(prev => (prev === indicator ? null : indicator));\n  };\n\n  // --- Component Render ---\n  return (\n    <div style={{ display: 'flex', width: '100%', height: 'calc(100vh - 78px)' }}>\n      {/* Map container on the left */}\n      <div style={{ position: 'relative', flex: 1 }}>\n        <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n\n        {/* Search Panel */}\n        <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '288px', zIndex: 10 }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', marginBottom: '1rem' }}>I'm interested in ...</h3>\n          \n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n            <input\n              type=\"text\"\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n              placeholder=\"e.g., 'jobs' or 'housing'\"\n              style={{ padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', outline: 'none' }}\n            />\n            <button\n              onClick={handleSearchClick}\n              style={{ backgroundColor: '#2563EB', color: 'white', fontWeight: 600, padding: '0.5rem 1rem', borderRadius: '0.375rem', border: 'none', cursor: 'pointer' }}\n            >\n              Search\n            </button>\n          </div>\n\n          {showIndicators && (\n            <div style={{ marginTop: '1rem', paddingTop: '1rem', borderTop: '1px solid #E5E7EB' }}>\n              <h4 style={{ fontWeight: 600, color: '#1F2937', marginBottom: '0.5rem' }}>Suggested Indicators</h4>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                {indicators.map((indicator) => (\n                  <div key={indicator} style={{ display: 'flex', alignItems: 'center' }}>\n                    <input\n                      type=\"radio\"\n                      id={indicator}\n                      name=\"indicator\"\n                      checked={selectedIndicator === indicator}\n                      onChange={() => handleIndicatorSelect(indicator)}\n                      style={{ height: '1rem', width: '1rem' }}\n                    />\n                    <label htmlFor={indicator} style={{ marginLeft: '0.75rem', fontSize: '0.875rem', color: '#374151' }}>\n                      {indicator}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Conditionally render the Legend */}\n        {selectedIndicator && legendData[selectedIndicator] && (\n          <Legend title={legendData[selectedIndicator].title} items={legendData[selectedIndicator].items} />\n        )}\n      </div>\n\n      {/* Text Explorer Panel on the right */}\n      <div style={{ width: '320px', backgroundColor: '#f8f9fa', padding: '1.5rem', borderLeft: '1px solid #dee2e6', overflowY: 'auto' }}>\n        {selectedIndicator ? (\n          <div>\n            <h4 style={{ fontSize: '1.1rem', fontWeight: 600, color: '#495057', marginBottom: '0.75rem' }}>\n              {selectedIndicator}\n            </h4>\n            {isDescriptionLoading ? (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>\n                🤖 Generating AI description...\n              </p>\n            ) : (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', lineHeight: 1.6 }}>\n                {dynamicDescription}\n              </p>\n            )}\n          </div>\n        ) : (\n          <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>\n            Select an indicator from the panel on the left to see its description.\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,kCAAkC;AACzC,SAASC,kBAAkB,QAAQ,uBAAuB,CAAC,CAAC;;AAE5D;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,IAAIH,kBAAkB,CAACI,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC;;AAG1E;AACA;AACA,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EACnC,oBACEP,OAAA;IAAKQ,KAAK,EAAE;MACVC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,QAAQ;MACtBC,SAAS,EAAE,2BAA2B;MACtCC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,gBACAlB,OAAA;MAAIQ,KAAK,EAAE;QAAEW,MAAM,EAAE,cAAc;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAEZ;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtEjB,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB3B,OAAA;MAAiBQ,KAAK,EAAE;QAAEoB,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAU,CAAE;MAAAZ,QAAA,gBACzFlB,OAAA;QAAMQ,KAAK,EAAE;UACXI,eAAe,EAAEc,IAAI,CAACK,KAAK;UAC3Bd,KAAK,EAAE,MAAM;UACbe,MAAM,EAAE,MAAM;UACdJ,OAAO,EAAE,cAAc;UACvBK,WAAW,EAAE,QAAQ;UACrBC,MAAM,EAAE;QACV;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACVxB,OAAA;QAAAkB,QAAA,EAAOQ,IAAI,CAACS;MAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GATjBG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAGD;AACA;AAAAY,EAAA,GAjCM/B,MAAM;AAkCZ,eAAe,SAASgC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,YAAY,GAAG3C,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM6B,GAAG,GAAG7B,MAAM,CAAC,IAAI,CAAC;;EAExB;EACA,MAAM,CAAC4C,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgD,UAAU,EAAEC,aAAa,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACoD,cAAc,EAAEC,iBAAiB,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAM,CAACsD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACwD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;;EAEvE;EACA,MAAM0D,UAAU,GAAG;IACjBC,UAAU,EAAE;MACV/C,KAAK,EAAE,oBAAoB;MAC3BC,KAAK,EAAE,CAAE;QAAEwB,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAU,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAa,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAS,CAAC;IACvQ,CAAC;IACDmB,SAAS,EAAE;MACThD,KAAK,EAAE,mBAAmB;MAC1BC,KAAK,EAAE,CAAE;QAAEwB,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAU,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAY,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAY,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAa,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAS,CAAC;IACnQ,CAAC;IACD,gBAAgB,EAAE;MAChB7B,KAAK,EAAE,wBAAwB;MAC/BC,KAAK,EAAE,CAAE;QAAEwB,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAU,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAa,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAS,CAAC;IACvQ,CAAC;IACDoB,MAAM,EAAE;MACJjD,KAAK,EAAE,gBAAgB;MACvBC,KAAK,EAAE,CAAE;QAAEwB,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAU,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAa,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAS,CAAC;IACzQ,CAAC;IACDqB,UAAU,EAAE;MACVlD,KAAK,EAAE,oBAAoB;MAC3BC,KAAK,EAAE,CAAE;QAAEwB,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAU,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAY,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAY,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAa,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAc,CAAC,EAAE;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAS,CAAC;IAC3V;EACF,CAAC;;EAED;EACA,MAAMsB,eAAe,GAAG;IACtBJ,UAAU,EAAE;MAAEK,IAAI,EAAE,iCAAiC;MAAEC,QAAQ,EAAE;IAAuB,CAAC;IACzFL,SAAS,EAAE;MAAEI,IAAI,EAAE,gCAAgC;MAAEC,QAAQ,EAAE;IAAsB,CAAC;IACtF,gBAAgB,EAAE;MAAED,IAAI,EAAE,0BAA0B;MAAEC,QAAQ,EAAE;IAAiB,CAAC;IAClFJ,MAAM,EAAE;MAAEG,IAAI,EAAE,6BAA6B;MAAEC,QAAQ,EAAE;IAAoB,CAAC;IAC9EH,UAAU,EAAE;MAAEE,IAAI,EAAE,iCAAiC;MAAEC,QAAQ,EAAE;IAAuB;EAC1F,CAAC;;EAGD;EACAhE,SAAS,CAAC,MAAM;IACd,IAAI8B,GAAG,CAACmC,OAAO,EAAE;IACjB,IAAI,CAACrB,YAAY,CAACqB,OAAO,EAAE;IAE3BnC,GAAG,CAACmC,OAAO,GAAG,IAAI/D,UAAU,CAACwC,GAAG,CAAC;MAC/BwB,SAAS,EAAEtB,YAAY,CAACqB,OAAO;MAC/BpD,KAAK,EAAE,+DAA+D;MACtEsD,UAAU,EAAE,KAAK;MAAEC,OAAO,EAAE,KAAK;MAAEC,UAAU,EAAE,KAAK;MAAEC,OAAO,EAAE,KAAK;MACpEC,QAAQ,EAAE,KAAK;MAAEC,eAAe,EAAE,KAAK;MAAEC,eAAe,EAAE;IAC5D,CAAC,CAAC;IAEF3C,GAAG,CAACmC,OAAO,CAACS,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAK;MAC3BC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,CAAC,CAACE,KAAK,GAAGF,CAAC,CAACE,KAAK,CAACC,OAAO,GAAG,eAAe,CAAC;IACvF,CAAC,CAAC;IAEFhD,GAAG,CAACmC,OAAO,CAACS,EAAE,CAAC,MAAM,EAAE,MAAM;MAAA,IAAAK,iBAAA;MAC3B,MAAMC,MAAM,GAAG,CACb,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,EACxB,CAAC,UAAU,EAAE,CAAC,SAAS,CAAE,CAC1B;MACDlD,GAAG,CAACmC,OAAO,CAACgB,SAAS,CAACD,MAAM,EAAE;QAAE9D,OAAO,EAAE;MAAG,CAAC,CAAC;;MAE9C;MACA,MAAMgE,OAAO,GAAG,CACd;QAAEC,IAAI,EAAE,cAAc;QAAEpB,IAAI,EAAE;MAAkC,CAAC,EACjE;QAAEoB,IAAI,EAAE,YAAY;QAAEpB,IAAI,EAAE;MAAkC,CAAC,EAC/D;QAAEoB,IAAI,EAAE,WAAW;QAAEpB,IAAI,EAAE;MAAiC,CAAC,EAC7D;QAAEoB,IAAI,EAAE,KAAK;QAAEpB,IAAI,EAAE;MAA2B,CAAC,EACjD;QAAEoB,IAAI,EAAE,QAAQ;QAAEpB,IAAI,EAAE;MAA8B,CAAC,EACvD;QAAEoB,IAAI,EAAE,YAAY;QAAEpB,IAAI,EAAE;MAAkC,CAAC,EAC/D;QAAEoB,IAAI,EAAE,WAAW;QAAEpB,IAAI,EAAE;MAAsC,CAAC,CACnE;MACDmB,OAAO,CAACE,OAAO,CAACC,CAAC,IAAI;QACnBvD,GAAG,CAACmC,OAAO,CAACqB,SAAS,CAAC,GAAGD,CAAC,CAACF,IAAI,cAAc,EAAE;UAAEI,IAAI,EAAE,SAAS;UAAEC,IAAI,EAAEH,CAAC,CAACtB;QAAK,CAAC,CAAC;MACnF,CAAC,CAAC;MAEF,MAAM0B,WAAW,GAAG3D,GAAG,CAACmC,OAAO,CAACyB,QAAQ,CAAC,CAAC,CAACC,MAAM;MACjD,MAAMC,aAAa,IAAAb,iBAAA,GAAGU,WAAW,CAACI,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACP,IAAI,KAAK,QAAQ,CAAC,cAAAR,iBAAA,uBAAlDA,iBAAA,CAAoDgB,EAAE;;MAE5E;MACA,MAAMC,eAAe,GAAG,CACtB;QAAED,EAAE,EAAE,kBAAkB;QAAEE,aAAa,EAAE,YAAY;QAAEC,MAAM,EAAE,wBAAwB;QAAElC,QAAQ,EAAEF,eAAe,CAACJ,UAAU,CAACM,QAAQ;QAAEmC,MAAM,EAAE1C,UAAU,CAACC,UAAU,CAAC9C,KAAK,CAACkB,GAAG,CAACsE,CAAC,IAAIA,CAAC,CAAChE,KAAK,CAAC;QAAEiE,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MAAE,CAAC,EACxO;QAAEN,EAAE,EAAE,iBAAiB;QAAEE,aAAa,EAAE,WAAW;QAAEC,MAAM,EAAE,uBAAuB;QAAElC,QAAQ,EAAEF,eAAe,CAACH,SAAS,CAACK,QAAQ;QAAEmC,MAAM,EAAE1C,UAAU,CAACE,SAAS,CAAC/C,KAAK,CAACkB,GAAG,CAACsE,CAAC,IAAIA,CAAC,CAAChE,KAAK,CAAC;QAAEiE,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;MAAE,CAAC,EACjO;QAAEN,EAAE,EAAE,WAAW;QAAEE,aAAa,EAAE,gBAAgB;QAAEC,MAAM,EAAE,iBAAiB;QAAElC,QAAQ,EAAEF,eAAe,CAAC,gBAAgB,CAAC,CAACE,QAAQ;QAAEmC,MAAM,EAAE1C,UAAU,CAAC,gBAAgB,CAAC,CAAC7C,KAAK,CAACkB,GAAG,CAACsE,CAAC,IAAIA,CAAC,CAAChE,KAAK,CAAC;QAAEiE,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MAAE,CAAC,EAC5O;QAAEN,EAAE,EAAE,cAAc;QAAEE,aAAa,EAAE,QAAQ;QAAEC,MAAM,EAAE,oBAAoB;QAAElC,QAAQ,EAAEF,eAAe,CAACF,MAAM,CAACI,QAAQ;QAAEmC,MAAM,EAAE1C,UAAU,CAACG,MAAM,CAAChD,KAAK,CAACkB,GAAG,CAACsE,CAAC,IAAIA,CAAC,CAAChE,KAAK,CAAC;QAAEiE,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MAAE,CAAC,EACpN;QAAEN,EAAE,EAAE,kBAAkB;QAAEE,aAAa,EAAE,YAAY;QAAEC,MAAM,EAAE,wBAAwB;QAAElC,QAAQ,EAAEF,eAAe,CAACD,UAAU,CAACG,QAAQ;QAAEmC,MAAM,EAAE1C,UAAU,CAACI,UAAU,CAACjD,KAAK,CAACkB,GAAG,CAACsE,CAAC,IAAIA,CAAC,CAAChE,KAAK,CAAC;QAAEiE,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MAAE,CAAC,CACnP;MAEDL,eAAe,CAACZ,OAAO,CAACU,KAAK,IAAI;QAC/B,MAAMQ,UAAU,GAAGR,KAAK,CAACO,KAAK,CAACE,OAAO,CAAC,CAACC,IAAI,EAAEJ,CAAC,KAAK,CAACI,IAAI,EAAEV,KAAK,CAACK,MAAM,CAACC,CAAC,CAAC,IAAIN,KAAK,CAACK,MAAM,CAACL,KAAK,CAACK,MAAM,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACrH3E,GAAG,CAACmC,OAAO,CAACyC,QAAQ,CAAC;UACnBX,EAAE,EAAED,KAAK,CAACC,EAAE;UACZR,IAAI,EAAE,MAAM;UACZW,MAAM,EAAEJ,KAAK,CAACI,MAAM;UACpBS,MAAM,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAC;UAC9BC,KAAK,EAAE;YACL,YAAY,EAAE,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,EAAEf,KAAK,CAAC9B,QAAQ,CAAC,CAAC,EAAE,GAAGsC,UAAU,CAAC;YAChG,cAAc,EAAE;UAClB;QACF,CAAC,EAAEV,aAAa,CAAC;QAEjB9D,GAAG,CAACmC,OAAO,CAACS,EAAE,CAAC,OAAO,EAAEoB,KAAK,CAACC,EAAE,EAAGpB,CAAC,IAAK;UACvC,MAAMmC,OAAO,GAAGnC,CAAC,CAACoC,QAAQ,CAAC,CAAC,CAAC;UAC7B,IAAID,OAAO,EAAE;YACX,MAAME,UAAU,GAAGF,OAAO,CAACG,UAAU,CAAC,YAAY,CAAC;YACnD,MAAMC,KAAK,GAAGJ,OAAO,CAACG,UAAU,CAACnB,KAAK,CAAC9B,QAAQ,CAAC;YAChD,MAAMmD,cAAc,GAAG,CAACC,KAAK,CAACF,KAAK,CAAC,GAAGG,MAAM,CAACH,KAAK,CAAC,CAACI,cAAc,CAAC,CAAC,GAAG,KAAK;YAC7E,IAAIpH,UAAU,CAACqH,KAAK,CAAC,CAAC,CACnBC,SAAS,CAAC7C,CAAC,CAAC8C,MAAM,CAAC,CACnBC,OAAO,CAAC,gIAAgIV,UAAU,gBAAgBlB,KAAK,CAACG,aAAa,cAAckB,cAAc,QAAQ,CAAC,CAC1NQ,KAAK,CAAC7F,GAAG,CAACmC,OAAO,CAAC;UACvB;QACF,CAAC,CAAC;QACFnC,GAAG,CAACmC,OAAO,CAACS,EAAE,CAAC,YAAY,EAAEoB,KAAK,CAACC,EAAE,EAAE,MAAM;UAAEjE,GAAG,CAACmC,OAAO,CAAC2D,SAAS,CAAC,CAAC,CAAC/G,KAAK,CAACgH,MAAM,GAAG,SAAS;QAAE,CAAC,CAAC;QACnG/F,GAAG,CAACmC,OAAO,CAACS,EAAE,CAAC,YAAY,EAAEoB,KAAK,CAACC,EAAE,EAAE,MAAM;UAAEjE,GAAG,CAACmC,OAAO,CAAC2D,SAAS,CAAC,CAAC,CAAC/G,KAAK,CAACgH,MAAM,GAAG,EAAE;QAAE,CAAC,CAAC;MAC9F,CAAC,CAAC;;MAEF;MACA/F,GAAG,CAACmC,OAAO,CAACyC,QAAQ,CAAC;QACnBX,EAAE,EAAE,oBAAoB;QACxBR,IAAI,EAAE,MAAM;QACZW,MAAM,EAAE,0BAA0B;QAClCW,KAAK,EAAE;UACL,YAAY,EAAE,SAAS;UAAE;UACzB,YAAY,EAAE;QAChB;MACF,CAAC,EAAEjB,aAAa,CAAC;;MAEjB;MACA,IAAI9D,GAAG,CAACmC,OAAO,CAAC6D,QAAQ,CAAC,UAAU,CAAC,EAAE;QACpChG,GAAG,CAACmC,OAAO,CAAC8D,SAAS,CAAC,UAAU,EAAEnC,aAAa,CAAC;QAChD9D,GAAG,CAACmC,OAAO,CAAC+D,gBAAgB,CAAC,UAAU,EAAE,YAAY,EAAE,SAAS,CAAC;QACjElG,GAAG,CAACmC,OAAO,CAAC+D,gBAAgB,CAAC,UAAU,EAAE,cAAc,EAAE,GAAG,CAAC;MAC/D;;MAEA;MACAlG,GAAG,CAACmC,OAAO,CAACyC,QAAQ,CAAC;QACnBX,EAAE,EAAE,yBAAyB;QAC7BR,IAAI,EAAE,MAAM;QACZW,MAAM,EAAE,uBAAuB;QAC/BW,KAAK,EAAE;UACH,YAAY,EAAE,SAAS;UAAE;UACzB,YAAY,EAAE;UACd;QACJ;MACJ,CAAC,EAAEjB,aAAa,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAI9D,GAAG,CAACmC,OAAO,EAAE;QACfnC,GAAG,CAACmC,OAAO,CAACgE,MAAM,CAAC,CAAC;QACpBnG,GAAG,CAACmC,OAAO,GAAG,IAAI;MACpB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjE,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8B,GAAG,CAACmC,OAAO,IAAI,CAACnC,GAAG,CAACmC,OAAO,CAACiE,aAAa,CAAC,CAAC,EAAE;IAElD,MAAMC,WAAW,GAAG,CAAC,kBAAkB,EAAE,iBAAiB,EAAE,WAAW,EAAE,cAAc,EAAE,kBAAkB,CAAC;IAC5G,MAAMC,eAAe,GAAGnF,iBAAiB,GAAG,GAAGA,iBAAiB,CAACoF,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,GAAG,IAAI;IAE/GH,WAAW,CAAC/C,OAAO,CAACmD,OAAO,IAAI;MAC7B,IAAIzG,GAAG,CAACmC,OAAO,CAAC6D,QAAQ,CAACS,OAAO,CAAC,EAAE;QACjCzG,GAAG,CAACmC,OAAO,CAACuE,iBAAiB,CAACD,OAAO,EAAE,YAAY,EAAEA,OAAO,KAAKH,eAAe,GAAG,SAAS,GAAG,MAAM,CAAC;MACxG;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnF,iBAAiB,CAAC,CAAC;;EAEvB;EACAjD,SAAS,CAAC,MAAM;IACd,IAAI,CAACiD,iBAAiB,EAAE;MACtBK,qBAAqB,CAAC,EAAE,CAAC;MACzB;IACF;IAEA,MAAMmF,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzCjF,uBAAuB,CAAC,IAAI,CAAC;MAC7BF,qBAAqB,CAAC,EAAE,CAAC;MAEzB,MAAMoF,MAAM,GAAG5E,eAAe,CAACb,iBAAiB,CAAC;MACjD,IAAI,CAACyF,MAAM,EAAE;QACXlF,uBAAuB,CAAC,KAAK,CAAC;QAC9B;MACF;MAEA,IAAI;QACF,MAAMmF,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC3E,IAAI,CAAC;QACzC,MAAM8E,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACzC,IAAIC,UAAU,GAAG,IAAI;UAAEC,UAAU,GAAG,IAAI;UAAEC,GAAG,GAAG,CAAC;UAAEC,KAAK,GAAG,CAAC;QAC5DL,WAAW,CAAC9B,QAAQ,CAAC3B,OAAO,CAAC0B,OAAO,IAAI;UACtC,MAAMI,KAAK,GAAGG,MAAM,CAACP,OAAO,CAACG,UAAU,CAACyB,MAAM,CAAC1E,QAAQ,CAAC,CAAC;UACzD,IAAI,CAACoD,KAAK,CAACF,KAAK,CAAC,EAAE;YACjB,IAAI6B,UAAU,KAAK,IAAI,IAAI7B,KAAK,GAAGG,MAAM,CAAC0B,UAAU,CAAC9B,UAAU,CAACyB,MAAM,CAAC1E,QAAQ,CAAC,CAAC,EAAE+E,UAAU,GAAGjC,OAAO;YACvG,IAAIkC,UAAU,KAAK,IAAI,IAAI9B,KAAK,GAAGG,MAAM,CAAC2B,UAAU,CAAC/B,UAAU,CAACyB,MAAM,CAAC1E,QAAQ,CAAC,CAAC,EAAEgF,UAAU,GAAGlC,OAAO;YACvGmC,GAAG,IAAI/B,KAAK;YACZgC,KAAK,EAAE;UACT;QACF,CAAC,CAAC;QAEF,IAAIA,KAAK,KAAK,CAAC,EAAE;UACb5F,qBAAqB,CAAC,gDAAgD,CAAC;UACvEE,uBAAuB,CAAC,KAAK,CAAC;UAC9B;QACJ;QAEA,MAAM2F,OAAO,GAAG,CAACF,GAAG,GAAGC,KAAK,EAAEE,OAAO,CAAC,CAAC,CAAC;QACxC,MAAMC,QAAQ,GAAGhC,MAAM,CAAC0B,UAAU,CAAC9B,UAAU,CAACyB,MAAM,CAAC1E,QAAQ,CAAC,CAAC;QAC/D,MAAMsF,QAAQ,GAAGjC,MAAM,CAAC2B,UAAU,CAAC/B,UAAU,CAACyB,MAAM,CAAC1E,QAAQ,CAAC,CAAC;QAC/D,MAAMuF,SAAS,GAAGR,UAAU,CAAC9B,UAAU,CAAC,YAAY,CAAC;QACrD,MAAMuC,SAAS,GAAGR,UAAU,CAAC/B,UAAU,CAAC,YAAY,CAAC;QAErD,MAAMwC,MAAM,GAAG;AACvB;AACA,iDAAiDxG,iBAAiB;AAClE;AACA;AACA;AACA,6BAA6BqG,QAAQ,CAAChC,cAAc,CAAC,CAAC,iBAAiBkC,SAAS;AAChF,4BAA4BH,QAAQ,CAAC/B,cAAc,CAAC,CAAC,iBAAiBiC,SAAS;AAC/E,8CAA8ClC,MAAM,CAAC8B,OAAO,CAAC,CAAC7B,cAAc,CAAC,CAAC;AAC9E,SAAS;QAED,MAAMoC,KAAK,GAAGpJ,KAAK,CAACqJ,kBAAkB,CAAC;UAAED,KAAK,EAAE;QAA0B,CAAC,CAAC;QAC5E,MAAME,MAAM,GAAG,MAAMF,KAAK,CAACG,eAAe,CAACJ,MAAM,CAAC;QAClD,MAAMK,WAAW,GAAG,MAAMF,MAAM,CAACjB,QAAQ;QACzC,MAAMoB,IAAI,GAAGD,WAAW,CAACC,IAAI,CAAC,CAAC;QAE/BzG,qBAAqB,CAACyG,IAAI,CAAC;MAE7B,CAAC,CAAC,OAAOlF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDvB,qBAAqB,CAAC,uGAAuG,CAAC;MAChI,CAAC,SAAS;QACRE,uBAAuB,CAAC,KAAK,CAAC;MAChC;IACF,CAAC;IAEDiF,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACxF,iBAAiB,CAAC,CAAC;;EAGvB;EACA,MAAM+G,iBAAiB,GAAGA,CAAA,KAAM;IAC9BhH,aAAa,CAAC,CAAC,YAAY,EAAE,WAAW,EAAE,gBAAgB,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;IACpFI,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAM6G,qBAAqB,GAAIC,SAAS,IAAK;IAC3ChH,oBAAoB,CAACiH,IAAI,IAAKA,IAAI,KAAKD,SAAS,GAAG,IAAI,GAAGA,SAAU,CAAC;EACvE,CAAC;;EAED;EACA,oBACE7J,OAAA;IAAKQ,KAAK,EAAE;MAAEoB,OAAO,EAAE,MAAM;MAAEX,KAAK,EAAE,MAAM;MAAEe,MAAM,EAAE;IAAqB,CAAE;IAAAd,QAAA,gBAE3ElB,OAAA;MAAKQ,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEsJ,IAAI,EAAE;MAAE,CAAE;MAAA7I,QAAA,gBAC5ClB,OAAA;QAAKgK,GAAG,EAAEzH,YAAa;QAAC/B,KAAK,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEQ,KAAK,EAAE,MAAM;UAAEe,MAAM,EAAE;QAAO;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG1FxB,OAAA;QAAKQ,KAAK,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEwJ,GAAG,EAAE,MAAM;UAAEC,IAAI,EAAE,MAAM;UAAEtJ,eAAe,EAAE,OAAO;UAAEC,OAAO,EAAE,MAAM;UAAEC,YAAY,EAAE,QAAQ;UAAEC,SAAS,EAAE,2BAA2B;UAAEE,KAAK,EAAE,OAAO;UAAED,MAAM,EAAE;QAAG,CAAE;QAAAE,QAAA,gBACrMlB,OAAA;UAAIQ,KAAK,EAAE;YAAE2J,QAAQ,EAAE,UAAU;YAAE/I,UAAU,EAAE,MAAM;YAAEU,YAAY,EAAE;UAAO,CAAE;UAAAZ,QAAA,EAAC;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEzGxB,OAAA;UAAKQ,KAAK,EAAE;YAAEoB,OAAO,EAAE,MAAM;YAAEwI,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAU,CAAE;UAAAnJ,QAAA,gBACvElB,OAAA;YACEkF,IAAI,EAAC,MAAM;YACX2B,KAAK,EAAErE,UAAW;YAClB8H,QAAQ,EAAGhG,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACiG,MAAM,CAAC1D,KAAK,CAAE;YAC/C2D,WAAW,EAAC,2BAA2B;YACvChK,KAAK,EAAE;cAAEK,OAAO,EAAE,QAAQ;cAAEqB,MAAM,EAAE,mBAAmB;cAAEpB,YAAY,EAAE,UAAU;cAAE2J,OAAO,EAAE;YAAO;UAAE;YAAApJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtG,CAAC,eACFxB,OAAA;YACE0K,OAAO,EAAEf,iBAAkB;YAC3BnJ,KAAK,EAAE;cAAEI,eAAe,EAAE,SAAS;cAAEmB,KAAK,EAAE,OAAO;cAAEX,UAAU,EAAE,GAAG;cAAEP,OAAO,EAAE,aAAa;cAAEC,YAAY,EAAE,UAAU;cAAEoB,MAAM,EAAE,MAAM;cAAEsF,MAAM,EAAE;YAAU,CAAE;YAAAtG,QAAA,EAC7J;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAELsB,cAAc,iBACb9C,OAAA;UAAKQ,KAAK,EAAE;YAAEmK,SAAS,EAAE,MAAM;YAAEC,UAAU,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAoB,CAAE;UAAA3J,QAAA,gBACpFlB,OAAA;YAAIQ,KAAK,EAAE;cAAEY,UAAU,EAAE,GAAG;cAAEW,KAAK,EAAE,SAAS;cAAED,YAAY,EAAE;YAAS,CAAE;YAAAZ,QAAA,EAAC;UAAoB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnGxB,OAAA;YAAKQ,KAAK,EAAE;cAAEoB,OAAO,EAAE,MAAM;cAAEwI,aAAa,EAAE,QAAQ;cAAEC,GAAG,EAAE;YAAS,CAAE;YAAAnJ,QAAA,EACrEwB,UAAU,CAACjB,GAAG,CAAEoI,SAAS,iBACxB7J,OAAA;cAAqBQ,KAAK,EAAE;gBAAEoB,OAAO,EAAE,MAAM;gBAAEC,UAAU,EAAE;cAAS,CAAE;cAAAX,QAAA,gBACpElB,OAAA;gBACEkF,IAAI,EAAC,OAAO;gBACZQ,EAAE,EAAEmE,SAAU;gBACd/E,IAAI,EAAC,WAAW;gBAChBgG,OAAO,EAAElI,iBAAiB,KAAKiH,SAAU;gBACzCS,QAAQ,EAAEA,CAAA,KAAMV,qBAAqB,CAACC,SAAS,CAAE;gBACjDrJ,KAAK,EAAE;kBAAEwB,MAAM,EAAE,MAAM;kBAAEf,KAAK,EAAE;gBAAO;cAAE;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,eACFxB,OAAA;gBAAO+K,OAAO,EAAElB,SAAU;gBAACrJ,KAAK,EAAE;kBAAEwK,UAAU,EAAE,SAAS;kBAAEb,QAAQ,EAAE,UAAU;kBAAEpI,KAAK,EAAE;gBAAU,CAAE;gBAAAb,QAAA,EACjG2I;cAAS;gBAAAxI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA,GAXAqI,SAAS;cAAAxI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYd,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGLoB,iBAAiB,IAAIQ,UAAU,CAACR,iBAAiB,CAAC,iBACjD5C,OAAA,CAACK,MAAM;QAACC,KAAK,EAAE8C,UAAU,CAACR,iBAAiB,CAAC,CAACtC,KAAM;QAACC,KAAK,EAAE6C,UAAU,CAACR,iBAAiB,CAAC,CAACrC;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNxB,OAAA;MAAKQ,KAAK,EAAE;QAAES,KAAK,EAAE,OAAO;QAAEL,eAAe,EAAE,SAAS;QAAEC,OAAO,EAAE,QAAQ;QAAEoK,UAAU,EAAE,mBAAmB;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAhK,QAAA,EAC/H0B,iBAAiB,gBAChB5C,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAIQ,KAAK,EAAE;YAAE2J,QAAQ,EAAE,QAAQ;YAAE/I,UAAU,EAAE,GAAG;YAAEW,KAAK,EAAE,SAAS;YAAED,YAAY,EAAE;UAAU,CAAE;UAAAZ,QAAA,EAC3F0B;QAAiB;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACJ0B,oBAAoB,gBACnBlD,OAAA;UAAGQ,KAAK,EAAE;YAAE2J,QAAQ,EAAE,SAAS;YAAEpI,KAAK,EAAE,SAAS;YAAEoJ,SAAS,EAAE;UAAS,CAAE;UAAAjK,QAAA,EAAC;QAE1E;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEJxB,OAAA;UAAGQ,KAAK,EAAE;YAAE2J,QAAQ,EAAE,SAAS;YAAEpI,KAAK,EAAE,SAAS;YAAEqJ,UAAU,EAAE;UAAI,CAAE;UAAAlK,QAAA,EAClE8B;QAAkB;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,gBAENxB,OAAA;QAAGQ,KAAK,EAAE;UAAE2J,QAAQ,EAAE,SAAS;UAAEpI,KAAK,EAAE,SAAS;UAAEoJ,SAAS,EAAE;QAAS,CAAE;QAAAjK,QAAA,EAAC;MAE1E;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACc,EAAA,CAxVuBD,GAAG;AAAAgJ,GAAA,GAAHhJ,GAAG;AAAA,IAAAD,EAAA,EAAAiJ,GAAA;AAAAC,YAAA,CAAAlJ,EAAA;AAAAkJ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}