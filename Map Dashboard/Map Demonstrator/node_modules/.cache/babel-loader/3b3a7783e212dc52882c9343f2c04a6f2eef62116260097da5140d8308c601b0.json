{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// --- LLM API Setup ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- Legend Component ---\nconst Legend = ({\n  title,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 0.5rem 0',\n        fontWeight: 'bold'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: item.color,\n          width: '18px',\n          height: '18px',\n          display: 'inline-block',\n          marginRight: '0.5rem',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Map Component ---\n_c = Legend;\nexport default function Map() {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // State for search and UI\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n\n  // --- MODIFIED: State for selected precinct ---\n  const [selectedPrecinct, setSelectedPrecinct] = useState(null); // Stores { id: string, name: string }\n\n  // State for the LLM description\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n\n  // Define panel widths\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // Data for the Legends\n  const legendData = {\n    Employment: {\n      title: 'Employment (Total)',\n      items: [{\n        color: '#edf8e9',\n        label: '0 - 100'\n      }, {\n        color: '#c7e9c0',\n        label: '101 - 200'\n      }, {\n        color: '#a1d99b',\n        label: '201 - 300'\n      }, {\n        color: '#74c476',\n        label: '301 - 400'\n      }, {\n        color: '#31a354',\n        label: '401 - 500'\n      }, {\n        color: '#006d2c',\n        label: '> 500'\n      }]\n    },\n    Education: {\n      title: 'Education (Total)',\n      items: [{\n        color: '#fee5d9',\n        label: '0 - 100'\n      }, {\n        color: '#fcbba1',\n        label: '101 - 200'\n      }, {\n        color: '#fc9272',\n        label: '201 - 300'\n      }, {\n        color: '#fb6a4a',\n        label: '301 - 400'\n      }, {\n        color: '#ef3b2c',\n        label: '401 - 500'\n      }, {\n        color: '#cb181d',\n        label: '> 500'\n      }]\n    },\n    Income: {\n      title: 'Income (Total)',\n      items: [{\n        color: '#fcfbfd',\n        label: '0 - 100'\n      }, {\n        color: '#efedf5',\n        label: '101 - 200'\n      }, {\n        color: '#dadaeb',\n        label: '201 - 300'\n      }, {\n        color: '#bcbddc',\n        label: '301 - 400'\n      }, {\n        color: '#9e9ac8',\n        label: '401 - 500'\n      }, {\n        color: '#807dba',\n        label: '501 - 600'\n      }, {\n        color: '#6a51a3',\n        label: '601 - 700'\n      }, {\n        color: '#54278f',\n        label: '701 - 800'\n      }, {\n        color: '#3f007d',\n        label: '> 800'\n      }]\n    },\n    Occupation: {\n      title: 'Occupation (Total)',\n      items: [{\n        color: '#f7fbff',\n        label: '0 - 100'\n      }, {\n        color: '#deebf7',\n        label: '101 - 200'\n      }, {\n        color: '#c6dbef',\n        label: '201 - 300'\n      }, {\n        color: '#9ecae1',\n        label: '301 - 400'\n      }, {\n        color: '#6baed6',\n        label: '401 - 500'\n      }, {\n        color: '#4292c6',\n        label: '501 - 600'\n      }, {\n        color: '#2171b5',\n        label: '601 - 700'\n      }, {\n        color: '#08519c',\n        label: '701 - 800'\n      }, {\n        color: '#08306b',\n        label: '> 800'\n      }]\n    }\n  };\n  const indicatorConfig = {\n    Employment: {\n      path: '/data/employment-fb-sa1.geojson',\n      property: 'employment-VIC_Total'\n    },\n    Education: {\n      path: '/data/education-fb-sa1.geojson',\n      property: 'Education-VIC_Total'\n    },\n    Income: {\n      path: '/data/income-fb-sa1.geojson',\n      property: 'Income-VIC1_Total'\n    },\n    Occupation: {\n      path: '/data/occupation-fb-sa1.geojson',\n      property: 'Occupation-VIC_Total'\n    }\n  };\n\n  // --- Main useEffect for Map Initialization ---\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'employment',\n        path: '/data/employment-fb-sa1.geojson'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson'\n      }, {\n        name: 'pob',\n        path: '/data/POB-fb-sa1.geojson'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson'\n      },\n      // --- MODIFIED: Added promoteId for precinct interaction ---\n      {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson',\n        promoteId: 'name'\n      }];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, {\n        type: 'geojson',\n        data: s.path,\n        promoteId: s.promoteId\n      }));\n      const layers = [{\n        id: 'employment-layer',\n        indicatorName: 'Employment',\n        source: 'employment-data-source',\n        property: indicatorConfig.Employment.property,\n        colors: legendData.Employment.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'education-layer',\n        indicatorName: 'Education',\n        source: 'education-data-source',\n        property: indicatorConfig.Education.property,\n        colors: legendData.Education.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'income-layer',\n        indicatorName: 'Income',\n        source: 'income-data-source',\n        property: indicatorConfig.Income.property,\n        colors: legendData.Income.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }, {\n        id: 'occupation-layer',\n        indicatorName: 'Occupation',\n        source: 'occupation-data-source',\n        property: indicatorConfig.Occupation.property,\n        colors: legendData.Occupation.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }];\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        map.current.on('click', layer.id, e => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n            new maplibregl.Popup().setLngLat(e.lngLat).setHTML(`<div style=\"font-family: sans-serif; padding: 5px; text-align: left;\"><h4 style=\"margin: 0 0 5px 0; font-weight: bold;\">SA1: ${regionName}</h4><strong>${layer.indicatorName}:</strong> ${formattedValue}</div>`).addTo(map.current);\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => {\n          map.current.getCanvas().style.cursor = 'pointer';\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          map.current.getCanvas().style.cursor = '';\n        });\n      });\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n\n      // --- MODIFIED: Precincts Layer Styling for Selection Highlight ---\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#0868ac',\n          // Highlight selected precinct by increasing opacity\n          'fill-opacity': ['case', ['boolean', ['feature-state', 'selected'], false], 0.4, 0.15]\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': 'rgba(0, 0, 0, 0.4)',\n          'line-width': 3,\n          'line-translate': [2, 2],\n          'line-blur': 2\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#0868ac',\n          'line-opacity': 0.9,\n          // Highlight selected precinct by making the line thicker\n          'line-width': ['case', ['boolean', ['feature-state', 'selected'], false], 4, 2.5]\n        }\n      });\n\n      // --- ADDED: Click handler for precincts ---\n      map.current.on('click', 'precincts-fill-layer', e => {\n        const feature = e.features[0];\n        if (!feature) return;\n        const precinctId = feature.id; // This is the 'name' property due to promoteId\n        const precinctName = feature.properties.name;\n\n        // If the same precinct is clicked again, do nothing to avoid re-fetches\n        if (selectedPrecinct && selectedPrecinct.id === precinctId) return;\n\n        // Deselect the previously selected precinct on the map\n        if (selectedPrecinct && selectedPrecinct.id) {\n          map.current.setFeatureState({\n            source: 'precincts-data-source',\n            id: selectedPrecinct.id\n          }, {\n            selected: false\n          });\n        }\n\n        // Select the new precinct on the map\n        map.current.setFeatureState({\n          source: 'precincts-data-source',\n          id: precinctId\n        }, {\n          selected: true\n        });\n\n        // Update React state to trigger description generation\n        setSelectedPrecinct({\n          id: precinctId,\n          name: precinctName\n        });\n        setSelectedIndicator(null); // Deselect any active indicator\n      });\n\n      // --- ADDED: Hover effect for precincts ---\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // --- Function to adjust map bounds (unchanged) ---\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [[144.890, -37.850], [144.948, -37.816]];\n    map.current.fitBounds(bounds, {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: leftPanelWidth,\n        right: rightPanelWidth\n      },\n      duration: 2000,\n      essential: true\n    });\n  };\n\n  // --- useEffect for window resize (unchanged) ---\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, ms);\n      };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [[144.890, -37.850], [144.948, -37.816]];\n      map.current.fitBounds(bounds, {\n        padding: {\n          top: 20,\n          bottom: 20,\n          left: leftPanelWidth,\n          right: rightPanelWidth\n        },\n        duration: 0\n      });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // --- useEffect to Toggle Layer Visibility ---\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['employment-layer', 'education-layer', 'pob-layer', 'income-layer', 'occupation-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '-')}-layer` : null;\n    if (map.current.getLayer('base-outline-layer')) {\n      map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // --- useEffect to generate LLM description for INDICATORS ---\n  useEffect(() => {\n    if (!selectedIndicator) {\n      // --- MODIFIED: Clear description only if a precinct isn't also selected ---\n      if (!selectedPrecinct) setDynamicDescription('');\n      return;\n    }\n    if (descriptionCache.current[selectedIndicator]) {\n      setDynamicDescription(descriptionCache.current[selectedIndicator]);\n      setIsDescriptionLoading(false);\n      return;\n    }\n    const generateLLMDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      const config = indicatorConfig[selectedIndicator];\n      if (!config) {\n        setIsDescriptionLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(config.path);\n        const geojsonData = await response.json();\n        let minFeature = null,\n          maxFeature = null,\n          sum = 0,\n          count = 0;\n        geojsonData.features.forEach(feature => {\n          const value = Number(feature.properties[config.property]);\n          if (!isNaN(value)) {\n            if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n            if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n            sum += value;\n            count++;\n          }\n        });\n        if (count === 0) {\n          setDynamicDescription('No valid data found for a description.');\n          setIsDescriptionLoading(false);\n          return;\n        }\n        const average = (sum / count).toFixed(2);\n        const minValue = Number(minFeature.properties[config.property]);\n        const maxValue = Number(maxFeature.properties[config.property]);\n        const minRegion = minFeature.properties['SA1_CODE21'];\n        const maxRegion = maxFeature.properties['SA1_CODE21'];\n        const prompt = `You are a concise data analyst for a public-facing dashboard. Based on the following data for the \"${selectedIndicator}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words). Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\"). Key Statistics: - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion}) - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion}) - Average value across all areas: ${Number(average).toLocaleString()}`;\n        const model = genAI.getGenerativeModel({\n          model: \"gemini-1.5-flash-latest\"\n        });\n        const result = await model.generateContent(prompt);\n        const text = result.response.text();\n        descriptionCache.current[selectedIndicator] = text;\n        setDynamicDescription(text);\n      } catch (error) {\n        console.error(\"Error generating LLM description:\", error);\n        if (error.message && error.message.includes('429')) {\n          setDynamicDescription('Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.');\n        } else {\n          setDynamicDescription('An error occurred while generating the description.');\n        }\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generateLLMDescription();\n  }, [selectedIndicator]);\n\n  // --- ADDED: useEffect to generate LLM description for PRECINCTS ---\n  useEffect(() => {\n    if (!selectedPrecinct) {\n      // Clear description only if an indicator isn't also selected\n      if (!selectedIndicator) setDynamicDescription('');\n      return;\n    }\n    const cacheKey = `precinct_${selectedPrecinct.name}`;\n    if (descriptionCache.current[cacheKey]) {\n      setDynamicDescription(descriptionCache.current[cacheKey]);\n      setIsDescriptionLoading(false);\n      return;\n    }\n    const generatePrecinctDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      try {\n        const prompt = `You are a concise urban planning analyst for a public-facing dashboard. Write a short, engaging summary (around 50-70 words) about the \"${selectedPrecinct.name}\" urban renewal precinct in Melbourne. Describe its key vision, purpose, or main characteristics (e.g., focus on innovation, residential development, employment hub, etc.).`;\n        const model = genAI.getGenerativeModel({\n          model: \"gemini-1.5-flash-latest\"\n        });\n        const result = await model.generateContent(prompt);\n        const text = result.response.text();\n        descriptionCache.current[cacheKey] = text;\n        setDynamicDescription(text);\n      } catch (error) {\n        console.error(\"Error generating precinct description:\", error);\n        if (error.message && error.message.includes('429')) {\n          setDynamicDescription('Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.');\n        } else {\n          setDynamicDescription('An error occurred while generating the description for this precinct.');\n        }\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generatePrecinctDescription();\n  }, [selectedPrecinct]);\n\n  // --- MODIFIED: UI Handlers to manage state synchronization ---\n  const handleSearchClick = () => {\n    setIndicators(['Employment', 'Education', 'Income', 'Occupation']);\n    setShowIndicators(true);\n  };\n  const handleIndicatorSelect = indicator => {\n    const newIndicator = selectedIndicator === indicator ? null : indicator;\n    setSelectedIndicator(newIndicator);\n\n    // If an indicator is selected, deselect any active precinct\n    if (newIndicator && selectedPrecinct) {\n      // Remove map highlight\n      if (map.current && map.current.isStyleLoaded()) {\n        map.current.setFeatureState({\n          source: 'precincts-data-source',\n          id: selectedPrecinct.id\n        }, {\n          selected: false\n        });\n      }\n      setSelectedPrecinct(null);\n    }\n  };\n\n  // --- MODIFIED: Component Render to handle new state ---\n  const activeTitle = selectedPrecinct ? selectedPrecinct.name : selectedIndicator;\n  const showDescription = !!activeTitle;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem',\n          backgroundColor: 'white',\n          padding: '1rem',\n          borderRadius: '0.5rem',\n          boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n          width: '288px',\n          zIndex: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.125rem',\n            fontWeight: 'bold',\n            marginBottom: '1rem'\n          },\n          children: \"I'm interested in ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value),\n            placeholder: \"e.g., 'jobs' or 'housing'\",\n            style: {\n              padding: '0.5rem',\n              border: '1px solid #D1D5DB',\n              borderRadius: '0.375rem',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearchClick,\n            style: {\n              backgroundColor: '#2563EB',\n              color: 'white',\n              fontWeight: 600,\n              padding: '0.5rem 1rem',\n              borderRadius: '0.375rem',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), showIndicators && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem',\n            paddingTop: '1rem',\n            borderTop: '1px solid #E5E7EB'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 600,\n              color: '#1F2937',\n              marginBottom: '0.5rem'\n            },\n            children: \"Suggested Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '0.5rem'\n            },\n            children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: indicator,\n                name: \"indicator\",\n                checked: selectedIndicator === indicator,\n                onChange: () => handleIndicatorSelect(indicator),\n                style: {\n                  height: '1rem',\n                  width: '1rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: indicator,\n                style: {\n                  marginLeft: '0.75rem',\n                  fontSize: '0.875rem',\n                  color: '#374151'\n                },\n                children: indicator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 21\n              }, this)]\n            }, indicator, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), selectedIndicator && legendData[selectedIndicator] && /*#__PURE__*/_jsxDEV(Legend, {\n        title: legendData[selectedIndicator].title,\n        items: legendData[selectedIndicator].items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        backgroundColor: '#f8f9fa',\n        padding: '1.5rem',\n        borderLeft: '1px solid #dee2e6',\n        overflowY: 'auto'\n      },\n      children: showDescription ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: 600,\n            color: '#495057',\n            marginBottom: '0.75rem'\n          },\n          children: activeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), isDescriptionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            fontStyle: 'italic'\n          },\n          children: \"\\uD83E\\uDD16 Generating AI description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            lineHeight: 1.6\n          },\n          children: dynamicDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.95rem',\n          color: '#6c757d',\n          fontStyle: 'italic'\n        },\n        children: \"Select an indicator from the left panel or click on a precinct on the map to see its description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"Wx3TWorxBEATAjVzaXu++zp4LrQ=\");\n_c2 = Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","maplibregl","GoogleGenerativeAI","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","Legend","title","items","style","position","bottom","right","backgroundColor","padding","borderRadius","boxShadow","zIndex","width","children","margin","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","display","alignItems","marginBottom","color","height","marginRight","border","label","_c","Map","_s","mapContainer","descriptionCache","searchText","setSearchText","indicators","setIndicators","selectedIndicator","setSelectedIndicator","showIndicators","setShowIndicators","selectedPrecinct","setSelectedPrecinct","dynamicDescription","setDynamicDescription","isDescriptionLoading","setIsDescriptionLoading","leftPanelWidth","rightPanelWidth","legendData","Employment","Education","Income","Occupation","indicatorConfig","path","property","current","container","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","on","e","console","error","message","adjustMapBounds","sources","name","promoteId","forEach","s","addSource","type","data","layers","id","indicatorName","source","colors","i","stops","layer","colorStops","flatMap","stop","length","addLayer","layout","visibility","paint","feature","features","regionName","properties","value","formattedValue","isNaN","Number","toLocaleString","Popup","setLngLat","lngLat","setHTML","addTo","getCanvas","cursor","precinctId","precinctName","setFeatureState","selected","remove","bounds","fitBounds","top","left","duration","essential","debounce","fn","ms","timer","args","clearTimeout","setTimeout","apply","debouncedAdjustBounds","debouncedResizeListener","window","addEventListener","removeEventListener","isStyleLoaded","allLayerIds","selectedLayerId","toLowerCase","replace","getLayer","setLayoutProperty","layerId","generateLLMDescription","config","response","fetch","geojsonData","json","minFeature","maxFeature","sum","count","average","toFixed","minValue","maxValue","minRegion","maxRegion","prompt","model","getGenerativeModel","result","generateContent","text","includes","cacheKey","generatePrecinctDescription","handleSearchClick","handleIndicatorSelect","indicator","newIndicator","activeTitle","showDescription","flex","ref","fontSize","flexDirection","gap","onChange","target","placeholder","outline","onClick","marginTop","paddingTop","borderTop","checked","htmlFor","marginLeft","borderLeft","overflowY","fontStyle","lineHeight","_c2","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// --- LLM API Setup ---\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- Legend Component ---\nconst Legend = ({ title, items }) => {\n  return (\n    <div style={{\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    }}>\n      <h4 style={{ margin: '0 0 0.5rem 0', fontWeight: 'bold' }}>{title}</h4>\n      {items.map((item, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.25rem' }}>\n          <span style={{\n            backgroundColor: item.color,\n            width: '18px',\n            height: '18px',\n            display: 'inline-block',\n            marginRight: '0.5rem',\n            border: '1px solid #ccc'\n          }}></span>\n          <span>{item.label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// --- Map Component ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // State for search and UI\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  \n  // --- MODIFIED: State for selected precinct ---\n  const [selectedPrecinct, setSelectedPrecinct] = useState(null); // Stores { id: string, name: string }\n\n  // State for the LLM description\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n\n  // Define panel widths\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // Data for the Legends\n  const legendData = {\n    Employment: {\n      title: 'Employment (Total)',\n      items: [ { color: '#edf8e9', label: '0 - 100' }, { color: '#c7e9c0', label: '101 - 200' }, { color: '#a1d99b', label: '201 - 300' }, { color: '#74c476', label: '301 - 400' }, { color: '#31a354', label: '401 - 500' }, { color: '#006d2c', label: '> 500' } ]\n    },\n    Education: {\n      title: 'Education (Total)',\n      items: [ { color: '#fee5d9', label: '0 - 100' }, { color: '#fcbba1', label: '101 - 200' }, { color: '#fc9272', label: '201 - 300' }, { color: '#fb6a4a', label: '301 - 400' }, { color: '#ef3b2c', label: '401 - 500' }, { color: '#cb181d', label: '> 500' } ]\n    },\n    Income: {\n        title: 'Income (Total)',\n        items: [ { color: '#fcfbfd', label: '0 - 100' }, { color: '#efedf5', label: '101 - 200' }, { color: '#dadaeb', label: '201 - 300' }, { color: '#bcbddc', label: '301 - 400' }, { color: '#9e9ac8', label: '401 - 500' }, { color: '#807dba', label: '501 - 600' }, { color: '#6a51a3', label: '601 - 700' }, { color: '#54278f', label: '701 - 800' }, { color: '#3f007d', label: '> 800' } ]\n    },\n    Occupation: {\n      title: 'Occupation (Total)',\n      items: [ { color: '#f7fbff', label: '0 - 100' }, { color: '#deebf7', label: '101 - 200' }, { color: '#c6dbef', label: '201 - 300' }, { color: '#9ecae1', label: '301 - 400' }, { color: '#6baed6', label: '401 - 500' }, { color: '#4292c6', label: '501 - 600' }, { color: '#2171b5', label: '601 - 700' }, { color: '#08519c', label: '701 - 800' }, { color: '#08306b', label: '> 800' } ]\n    }\n  };\n\n  const indicatorConfig = {\n    Employment: { path: '/data/employment-fb-sa1.geojson', property: 'employment-VIC_Total' },\n    Education: { path: '/data/education-fb-sa1.geojson', property: 'Education-VIC_Total' },\n    Income: { path: '/data/income-fb-sa1.geojson', property: 'Income-VIC1_Total' },\n    Occupation: { path: '/data/occupation-fb-sa1.geojson', property: 'Occupation-VIC_Total' }\n  };\n\n  // --- Main useEffect for Map Initialization ---\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'employment', path: '/data/employment-fb-sa1.geojson' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson' },\n        { name: 'pob', path: '/data/POB-fb-sa1.geojson' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson' },\n        // --- MODIFIED: Added promoteId for precinct interaction ---\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson', promoteId: 'name' },\n      ];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, { type: 'geojson', data: s.path, promoteId: s.promoteId }));\n      \n      const layers = [\n        { id: 'employment-layer', indicatorName: 'Employment', source: 'employment-data-source', property: indicatorConfig.Employment.property, colors: legendData.Employment.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500] },\n        { id: 'education-layer', indicatorName: 'Education', source: 'education-data-source', property: indicatorConfig.Education.property, colors: legendData.Education.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500]  },\n        { id: 'income-layer', indicatorName: 'Income', source: 'income-data-source', property: indicatorConfig.Income.property, colors: legendData.Income.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] },\n        { id: 'occupation-layer', indicatorName: 'Occupation', source: 'occupation-data-source', property: indicatorConfig.Occupation.property, colors: legendData.Occupation.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] }\n      ];\n\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id, type: 'fill', source: layer.source, layout: { visibility: 'none' },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        map.current.on('click', layer.id, (e) => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n            new maplibregl.Popup()\n              .setLngLat(e.lngLat)\n              .setHTML(`<div style=\"font-family: sans-serif; padding: 5px; text-align: left;\"><h4 style=\"margin: 0 0 5px 0; font-weight: bold;\">SA1: ${regionName}</h4><strong>${layer.indicatorName}:</strong> ${formattedValue}</div>`)\n              .addTo(map.current);\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => { map.current.getCanvas().style.cursor = 'pointer'; });\n        map.current.on('mouseleave', layer.id, () => { map.current.getCanvas().style.cursor = ''; });\n      });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      // --- MODIFIED: Precincts Layer Styling for Selection Highlight ---\n      map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#0868ac',\n          // Highlight selected precinct by increasing opacity\n          'fill-opacity': ['case', ['boolean', ['feature-state', 'selected'], false], 0.4, 0.15]\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': 'rgba(0, 0, 0, 0.4)', 'line-width': 3, 'line-translate': [2, 2], 'line-blur': 2 }\n      });\n      map.current.addLayer({\n          id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n          paint: { \n            'line-color': '#0868ac', 'line-opacity': 0.9,\n            // Highlight selected precinct by making the line thicker\n            'line-width': ['case', ['boolean', ['feature-state', 'selected'], false], 4, 2.5]\n          }\n      });\n\n      // --- ADDED: Click handler for precincts ---\n      map.current.on('click', 'precincts-fill-layer', (e) => {\n        const feature = e.features[0];\n        if (!feature) return;\n\n        const precinctId = feature.id; // This is the 'name' property due to promoteId\n        const precinctName = feature.properties.name;\n\n        // If the same precinct is clicked again, do nothing to avoid re-fetches\n        if (selectedPrecinct && selectedPrecinct.id === precinctId) return;\n\n        // Deselect the previously selected precinct on the map\n        if (selectedPrecinct && selectedPrecinct.id) {\n            map.current.setFeatureState(\n                { source: 'precincts-data-source', id: selectedPrecinct.id },\n                { selected: false }\n            );\n        }\n\n        // Select the new precinct on the map\n        map.current.setFeatureState(\n            { source: 'precincts-data-source', id: precinctId },\n            { selected: true }\n        );\n\n        // Update React state to trigger description generation\n        setSelectedPrecinct({ id: precinctId, name: precinctName });\n        setSelectedIndicator(null); // Deselect any active indicator\n      });\n\n      // --- ADDED: Hover effect for precincts ---\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  // --- Function to adjust map bounds (unchanged) ---\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n    map.current.fitBounds(bounds, {\n      padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth },\n      duration: 2000, essential: true\n    });\n  };\n\n  // --- useEffect for window resize (unchanged) ---\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function(...args) { clearTimeout(timer); timer = setTimeout(() => { fn.apply(this, args); }, ms); };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n      map.current.fitBounds(bounds, { padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth }, duration: 0 });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // --- useEffect to Toggle Layer Visibility ---\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['employment-layer', 'education-layer', 'pob-layer', 'income-layer', 'occupation-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '-')}-layer` : null;\n    \n    if (map.current.getLayer('base-outline-layer')) {\n        map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n  \n  // --- useEffect to generate LLM description for INDICATORS ---\n  useEffect(() => {\n    if (!selectedIndicator) {\n      // --- MODIFIED: Clear description only if a precinct isn't also selected ---\n      if (!selectedPrecinct) setDynamicDescription('');\n      return;\n    }\n    \n    if (descriptionCache.current[selectedIndicator]) {\n      setDynamicDescription(descriptionCache.current[selectedIndicator]);\n      setIsDescriptionLoading(false);\n      return;\n    }\n\n    const generateLLMDescription = async () => {\n      setIsDescriptionLoading(true); setDynamicDescription('');\n      const config = indicatorConfig[selectedIndicator];\n      if (!config) { setIsDescriptionLoading(false); return; }\n\n      try {\n        const response = await fetch(config.path);\n        const geojsonData = await response.json();\n        let minFeature = null, maxFeature = null, sum = 0, count = 0;\n\n        geojsonData.features.forEach(feature => {\n          const value = Number(feature.properties[config.property]);\n          if (!isNaN(value)) {\n            if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n            if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n            sum += value;\n            count++;\n          }\n        });\n        \n        if (count === 0) {\n            setDynamicDescription('No valid data found for a description.');\n            setIsDescriptionLoading(false); return;\n        }\n\n        const average = (sum / count).toFixed(2);\n        const minValue = Number(minFeature.properties[config.property]);\n        const maxValue = Number(maxFeature.properties[config.property]);\n        const minRegion = minFeature.properties['SA1_CODE21'];\n        const maxRegion = maxFeature.properties['SA1_CODE21'];\n        const prompt = `You are a concise data analyst for a public-facing dashboard. Based on the following data for the \"${selectedIndicator}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words). Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\"). Key Statistics: - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion}) - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion}) - Average value across all areas: ${Number(average).toLocaleString()}`;\n        const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n        const result = await model.generateContent(prompt);\n        const text = result.response.text();\n        descriptionCache.current[selectedIndicator] = text;\n        setDynamicDescription(text);\n\n      } catch (error) {\n        console.error(\"Error generating LLM description:\", error);\n        if (error.message && error.message.includes('429')) {\n             setDynamicDescription('Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.');\n        } else {\n             setDynamicDescription('An error occurred while generating the description.');\n        }\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generateLLMDescription();\n  }, [selectedIndicator]);\n\n  // --- ADDED: useEffect to generate LLM description for PRECINCTS ---\n  useEffect(() => {\n    if (!selectedPrecinct) {\n        // Clear description only if an indicator isn't also selected\n        if (!selectedIndicator) setDynamicDescription('');\n        return;\n    }\n\n    const cacheKey = `precinct_${selectedPrecinct.name}`;\n    if (descriptionCache.current[cacheKey]) {\n        setDynamicDescription(descriptionCache.current[cacheKey]);\n        setIsDescriptionLoading(false);\n        return;\n    }\n\n    const generatePrecinctDescription = async () => {\n        setIsDescriptionLoading(true);\n        setDynamicDescription('');\n\n        try {\n            const prompt = `You are a concise urban planning analyst for a public-facing dashboard. Write a short, engaging summary (around 50-70 words) about the \"${selectedPrecinct.name}\" urban renewal precinct in Melbourne. Describe its key vision, purpose, or main characteristics (e.g., focus on innovation, residential development, employment hub, etc.).`;\n            \n            const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n            const result = await model.generateContent(prompt);\n            const text = result.response.text();\n\n            descriptionCache.current[cacheKey] = text;\n            setDynamicDescription(text);\n\n        } catch (error) {\n            console.error(\"Error generating precinct description:\", error);\n            if (error.message && error.message.includes('429')) {\n                setDynamicDescription('Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.');\n            } else {\n                setDynamicDescription('An error occurred while generating the description for this precinct.');\n            }\n        } finally {\n            setIsDescriptionLoading(false);\n        }\n    };\n\n    generatePrecinctDescription();\n  }, [selectedPrecinct]);\n\n\n  // --- MODIFIED: UI Handlers to manage state synchronization ---\n  const handleSearchClick = () => {\n    setIndicators(['Employment', 'Education', 'Income', 'Occupation']);\n    setShowIndicators(true);\n  };\n\n  const handleIndicatorSelect = (indicator) => {\n    const newIndicator = selectedIndicator === indicator ? null : indicator;\n    setSelectedIndicator(newIndicator);\n\n    // If an indicator is selected, deselect any active precinct\n    if (newIndicator && selectedPrecinct) {\n        // Remove map highlight\n        if (map.current && map.current.isStyleLoaded()) {\n            map.current.setFeatureState(\n                { source: 'precincts-data-source', id: selectedPrecinct.id },\n                { selected: false }\n            );\n        }\n        setSelectedPrecinct(null);\n    }\n  };\n\n  // --- MODIFIED: Component Render to handle new state ---\n  const activeTitle = selectedPrecinct ? selectedPrecinct.name : selectedIndicator;\n  const showDescription = !!activeTitle;\n\n  return (\n    <div style={{ display: 'flex', width: '100%', height: 'calc(100vh - 78px)' }}>\n      {/* Map container */}\n      <div style={{ position: 'relative', flex: 1 }}>\n        <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n        <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '288px', zIndex: 10 }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', marginBottom: '1rem' }}>I'm interested in ...</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n            <input type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"e.g., 'jobs' or 'housing'\" style={{ padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', outline: 'none' }} />\n            <button onClick={handleSearchClick} style={{ backgroundColor: '#2563EB', color: 'white', fontWeight: 600, padding: '0.5rem 1rem', borderRadius: '0.375rem', border: 'none', cursor: 'pointer' }}>Search</button>\n          </div>\n          {showIndicators && (\n            <div style={{ marginTop: '1rem', paddingTop: '1rem', borderTop: '1px solid #E5E7EB' }}>\n              <h4 style={{ fontWeight: 600, color: '#1F2937', marginBottom: '0.5rem' }}>Suggested Indicators</h4>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                {indicators.map((indicator) => (\n                  <div key={indicator} style={{ display: 'flex', alignItems: 'center' }}>\n                    <input type=\"radio\" id={indicator} name=\"indicator\" checked={selectedIndicator === indicator} onChange={() => handleIndicatorSelect(indicator)} style={{ height: '1rem', width: '1rem' }} />\n                    <label htmlFor={indicator} style={{ marginLeft: '0.75rem', fontSize: '0.875rem', color: '#374151' }}>{indicator}</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        {selectedIndicator && legendData[selectedIndicator] && <Legend title={legendData[selectedIndicator].title} items={legendData[selectedIndicator].items} />}\n      </div>\n      {/* Text Explorer Panel */}\n      <div style={{ width: '320px', backgroundColor: '#f8f9fa', padding: '1.5rem', borderLeft: '1px solid #dee2e6', overflowY: 'auto' }}>\n        {showDescription ? (\n          <div>\n            <h4 style={{ fontSize: '1.1rem', fontWeight: 600, color: '#495057', marginBottom: '0.75rem' }}>{activeTitle}</h4>\n            {isDescriptionLoading ? (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>🤖 Generating AI description...</p>\n            ) : (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', lineHeight: 1.6 }}>{dynamicDescription}</p>\n            )}\n          </div>\n        ) : (\n          <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>Select an indicator from the left panel or click on a precinct on the map to see its description.</p>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}