{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport indicatorMetadata from './indicatorMetadata'; // IMPORTED METADATA\n\n// --- LLM API Setup ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component finds and styles specified keywords in a block of text.\nconst InteractiveDescription = ({\n  text,\n  keywords,\n  colors,\n  onKeywordHover\n}) => {\n  _s();\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      fontSize: '0.95rem',\n      color: '#6c757d',\n      lineHeight: 1.6\n    },\n    children: parts.map((part, index) => {\n      const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n      if (originalKeyword) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: colors[originalKeyword] || '#000',\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            padding: '2px 0',\n            borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n          },\n          onMouseEnter: () => onKeywordHover(originalKeyword),\n          onMouseLeave: () => onKeywordHover(null) // Clear hover on exit\n          ,\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\n_s(InteractiveDescription, \"kB+E/0zygT+E0toaiTuITJ43hpU=\");\n_c = InteractiveDescription;\nconst Legend = ({\n  title,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '240px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 0.5rem 0',\n        fontWeight: 'bold'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: item.color,\n          width: '18px',\n          height: '18px',\n          display: 'inline-block',\n          marginRight: '0.5rem',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n// --- END: LEGEND COMPONENT ---\n\n// --- START: MAP COMPONENT ---\n_c2 = Legend;\nexport default function Map() {\n  _s2();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    'Diversity of Education Qualification': {\n      title: 'Diversity of Education Qualification (Total)',\n      items: [{\n        color: '#fee5d9',\n        label: '0 - 100'\n      }, {\n        color: '#fcbba1',\n        label: '101 - 200'\n      }, {\n        color: '#fc9272',\n        label: '201 - 300'\n      }, {\n        color: '#fb6a4a',\n        label: '301 - 400'\n      }, {\n        color: '#ef3b2c',\n        label: '401 - 500'\n      }, {\n        color: '#cb181d',\n        label: '> 500'\n      }]\n    },\n    'Diversity of Income': {\n      title: 'Diversity of Income (Total)',\n      items: [{\n        color: '#fcfbfd',\n        label: '0 - 100'\n      }, {\n        color: '#efedf5',\n        label: '101 - 200'\n      }, {\n        color: '#dadaeb',\n        label: '201 - 300'\n      }, {\n        color: '#bcbddc',\n        label: '301 - 400'\n      }, {\n        color: '#9e9ac8',\n        label: '401 - 500'\n      }, {\n        color: '#807dba',\n        label: '501 - 600'\n      }, {\n        color: '#6a51a3',\n        label: '601 - 700'\n      }, {\n        color: '#54278f',\n        label: '701 - 800'\n      }, {\n        color: '#3f007d',\n        label: '> 800'\n      }]\n    },\n    'Diversity of Occupations': {\n      title: 'Diversity of Occupations (Total)',\n      items: [{\n        color: '#f7fbff',\n        label: '0 - 100'\n      }, {\n        color: '#deebf7',\n        label: '101 - 200'\n      }, {\n        color: '#c6dbef',\n        label: '201 - 300'\n      }, {\n        color: '#9ecae1',\n        label: '301 - 400'\n      }, {\n        color: '#6baed6',\n        label: '401 - 500'\n      }, {\n        color: '#4292c6',\n        label: '501 - 600'\n      }, {\n        color: '#2171b5',\n        label: '601 - 700'\n      }, {\n        color: '#08519c',\n        label: '701 - 800'\n      }, {\n        color: '#08306b',\n        label: '> 800'\n      }]\n    }\n  };\n  const indicatorConfig = {\n    'Diversity of Education Qualification': {\n      path: '/data/education-fb-sa1.geojson',\n      property: 'Education-VIC_Total'\n    },\n    'Diversity of Income': {\n      path: '/data/income-fb-sa1.geojson',\n      property: 'Income-VIC1_Total'\n    },\n    'Diversity of Occupations': {\n      path: '/data/occupation-fb-sa1.geojson',\n      property: 'Occupation-VIC_Total'\n    }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'employment',\n        path: '/data/employment-fb-sa1.geojson'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson'\n      }, {\n        name: 'pob',\n        path: '/data/POB-fb-sa1.geojson'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson'\n      }, {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson'\n      }];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, {\n        type: 'geojson',\n        data: s.path\n      }));\n      const layers = [{\n        id: 'diversity-of-education-qualification-layer',\n        indicatorName: 'Diversity of Education Qualification',\n        source: 'education-data-source',\n        property: indicatorConfig['Diversity of Education Qualification'].property,\n        colors: legendData['Diversity of Education Qualification'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'diversity-of-income-layer',\n        indicatorName: 'Diversity of Income',\n        source: 'income-data-source',\n        property: indicatorConfig['Diversity of Income'].property,\n        colors: legendData['Diversity of Income'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }, {\n        id: 'diversity-of-occupations-layer',\n        indicatorName: 'Diversity of Occupations',\n        source: 'occupation-data-source',\n        property: indicatorConfig['Diversity of Occupations'].property,\n        colors: legendData['Diversity of Occupations'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }];\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        map.current.on('click', layer.id, e => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => {\n          map.current.getCanvas().style.cursor = 'pointer';\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          map.current.getCanvas().style.cursor = '';\n        });\n      });\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n        precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC');\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#ffffffff',\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': 'rgba(0, 0, 0, 0.4)',\n          'line-width': 7,\n          'line-translate': [2, 2],\n          'line-blur': 4\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#0868ac',\n          'line-width': 2.5,\n          'line-opacity': 0.9\n        }\n      });\n      map.current.on('click', 'precincts-fill-layer', e => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({\n          type: 'precinct',\n          name: precinctName\n        });\n        setTextHoveredPrecinct(null);\n      });\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [[144.890, -37.850], [144.948, -37.816]];\n    map.current.fitBounds(bounds, {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: leftPanelWidth,\n        right: rightPanelWidth\n      },\n      duration: 2000,\n      essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, ms);\n      };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [[144.890, -37.850], [144.948, -37.816]];\n      map.current.fitBounds(bounds, {\n        padding: {\n          top: 20,\n          bottom: 20,\n          left: leftPanelWidth,\n          right: rightPanelWidth\n        },\n        duration: 0\n      });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['diversity-of-education-qualification-layer', 'diversity-of-income-layer', 'diversity-of-occupations-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '-')}-layer` : null;\n    if (map.current.getLayer('base-outline-layer')) {\n      map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false);\n      return;\n    }\n    const generateDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      const {\n        type,\n        name\n      } = panelFocus;\n      const cacheKey = `${type}_${name}`;\n      if (descriptionCache.current[cacheKey]) {\n        setDynamicDescription(descriptionCache.current[cacheKey]);\n        setIsDescriptionLoading(false);\n        return;\n      }\n      try {\n        let prompt = '';\n        if (type === 'indicator') {\n          const metadata = indicatorMetadata[name]; // <-- GET METADATA FOR THE INDICATOR\n\n          if (!metadata) {\n            throw new Error(`Metadata is missing for the \"${name}\" indicator.`);\n          }\n\n          // --- REFINED PROMPT BASED PURELY ON METADATA ---\n          prompt = `You are an expert urban data analyst providing a summary for a public-facing dashboard about Melbourne's Fishermans Bend.\nYour task is to generate a clear, descriptive summary for the \"${name}\" indicator based ONLY on the metadata provided below.\n\nUse the following information to structure your response. Present it as a cohesive and easy-to-read paragraph, not as a list. **Crucially, when you incorporate a piece of metadata from the list below into your paragraph, you must make that specific value bold using Markdown (e.g., the goal is **An inclusive community**).**\n\n- **Alignment with Goals**: This indicator aligns with Fishermans Bend's goal of: \"${metadata[\"FB's goals\"]}\".\n- **Measurement Method**: It is measured by this method: \"${metadata[\"Note for measurement\"]}\".\n- **Data Origin**: The data is sourced from \"${metadata[\"Data sources\"]}\".\n- **Geographic Coverage**: The data's spatial extent is \"${metadata[\"Spatial extent\"]}\", presented at a \"${metadata[\"Spatial scale\"]}\" level.\n- **Timeliness**: The data is updated every \"${metadata[\"Update frequency\"]}\". The current version is from \"${metadata[\"Temporal currency\"]}\", and the historical data available covers the period \"${metadata[\"Temporal extent\"]}\".\n\nSynthesize this information into an engaging and informative paragraph of about 70-100 words. Start by explaining what this indicator is and why it's important for Fishermans Bend's goals. Then, provide context about the data itself. Remember to make all the specific metadata values bold in your final output. Do not invent or infer any data values, statistics, or trends.`;\n        } else if (type === 'precinct') {\n          prompt = `You are a concise urban planning analyst. Write a short, engaging summary (around 60-80 words) about the \"${name}\" precinct within Melbourne's Fishermans Bend. Describe its key vision or main characteristics. If relevant, mention its relationship to the other precincts like Montague, Sandridge, and the Employment Precinct.`;\n        }\n        if (prompt) {\n          const model = genAI.getGenerativeModel({\n            model: \"gemini-1.5-flash-latest\"\n          });\n          const result = await model.generateContent(prompt);\n          const text = result.response.text();\n          descriptionCache.current[cacheKey] = text;\n          setDynamicDescription(text);\n        }\n      } catch (error) {\n        console.error(`Error generating description for ${name}:`, error);\n        const errorMessage = error.message.includes('429') ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.' : `An error occurred while generating the description: ${error.message}`;\n        setDynamicDescription(errorMessage);\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generateDescription();\n  }, [panelFocus]);\n\n  // Update map visual style when a precinct is highlighted from text\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    if (textHoveredPrecinct) {\n      const fillColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#ffffffff'];\n      const fillOpacityExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], 0.6, 0.15];\n      const outlineColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#0868ac'];\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', fillColorExpression);\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacityExpression);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', outlineColorExpression);\n    } else {\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', '#ffffffff');\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', 0.15);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', '#0868ac');\n    }\n  }, [textHoveredPrecinct, PRECINCT_COLORS]);\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {\n    setIndicators(['Diversity of Education Qualification', 'Diversity of Income', 'Diversity of Occupations']);\n    setShowIndicators(true);\n  };\n  const handleIndicatorSelect = indicator => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? {\n      type: 'indicator',\n      name: newIndicator\n    } : null);\n    setTextHoveredPrecinct(null);\n  };\n  const handlePrecinctHover = precinctName => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem',\n          backgroundColor: 'white',\n          padding: '1rem',\n          borderRadius: '0.5rem',\n          boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n          width: '288px',\n          zIndex: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.125rem',\n            fontWeight: 'bold',\n            marginBottom: '1rem'\n          },\n          children: \"I'm interested in ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value),\n            placeholder: \"e.g., 'jobs' or 'housing'\",\n            style: {\n              padding: '0.5rem',\n              border: '1px solid #D1D5DB',\n              borderRadius: '0.375rem',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearchClick,\n            style: {\n              backgroundColor: '#2563EB',\n              color: 'white',\n              fontWeight: 600,\n              padding: '0.5rem 1rem',\n              borderRadius: '0.375rem',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), showIndicators && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem',\n            paddingTop: '1rem',\n            borderTop: '1px solid #E5E7EB'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 600,\n              color: '#1F2937',\n              marginBottom: '0.5rem'\n            },\n            children: \"Suggested Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '0.5rem'\n            },\n            children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: indicator,\n                name: \"indicator\",\n                checked: selectedIndicator === indicator,\n                onChange: () => handleIndicatorSelect(indicator),\n                style: {\n                  height: '1rem',\n                  width: '1rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: indicator,\n                style: {\n                  marginLeft: '0.75rem',\n                  fontSize: '0.875rem',\n                  color: '#374151'\n                },\n                children: indicator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this)]\n            }, indicator, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), selectedIndicator && legendData[selectedIndicator] && /*#__PURE__*/_jsxDEV(Legend, {\n        title: legendData[selectedIndicator].title,\n        items: legendData[selectedIndicator].items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        backgroundColor: '#f8f9fa',\n        padding: '1.5rem',\n        borderLeft: '1px solid #dee2e6',\n        overflowY: 'auto'\n      },\n      children: panelFocus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: 600,\n            color: '#495057',\n            marginBottom: '0.75rem'\n          },\n          children: panelFocus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), isDescriptionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            fontStyle: 'italic'\n          },\n          children: \"\\uD83E\\uDD16 Generating AI description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(InteractiveDescription, {\n          text: dynamicDescription,\n          keywords: PRECINCT_NAMES,\n          colors: PRECINCT_COLORS,\n          onKeywordHover: handlePrecinctHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.95rem',\n          color: '#6c757d',\n          fontStyle: 'italic'\n        },\n        children: \"Select an indicator from the left panel or click on a precinct on the map to see its description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n}\n// --- END: MAP COMPONENT ---\n_s2(Map, \"WkFYB2rKJ4hXCyci5cfQJXiykAY=\");\n_c3 = Map;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InteractiveDescription\");\n$RefreshReg$(_c2, \"Legend\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","maplibregl","GoogleGenerativeAI","indicatorMetadata","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","InteractiveDescription","text","keywords","colors","onKeywordHover","_s","parts","length","regex","RegExp","join","split","filter","part","style","fontSize","color","lineHeight","children","map","index","originalKeyword","find","kw","toLowerCase","cursor","fontWeight","padding","borderBottom","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","Legend","title","items","position","bottom","right","backgroundColor","borderRadius","boxShadow","zIndex","width","margin","item","display","alignItems","marginBottom","height","marginRight","border","label","_c2","Map","_s2","mapContainer","descriptionCache","PRECINCT_NAMES","PRECINCT_COLORS","searchText","setSearchText","indicators","setIndicators","selectedIndicator","setSelectedIndicator","showIndicators","setShowIndicators","panelFocus","setPanelFocus","dynamicDescription","setDynamicDescription","isDescriptionLoading","setIsDescriptionLoading","textHoveredPrecinct","setTextHoveredPrecinct","leftPanelWidth","rightPanelWidth","legendData","indicatorConfig","path","property","current","container","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","on","e","console","error","message","adjustMapBounds","sources","name","forEach","s","addSource","type","data","layers","id","indicatorName","source","i","stops","layer","colorStops","flatMap","stop","addLayer","layout","visibility","paint","feature","features","regionName","properties","value","formattedValue","isNaN","Number","toLocaleString","getCanvas","precinctColorExpression","push","precinctName","remove","bounds","fitBounds","top","left","duration","essential","debounce","fn","ms","timer","args","clearTimeout","setTimeout","apply","debouncedAdjustBounds","debouncedResizeListener","window","addEventListener","removeEventListener","isStyleLoaded","allLayerIds","selectedLayerId","replace","getLayer","setLayoutProperty","layerId","generateDescription","cacheKey","prompt","metadata","Error","model","getGenerativeModel","result","generateContent","response","errorMessage","includes","fillColorExpression","fillOpacityExpression","outlineColorExpression","setPaintProperty","handleSearchClick","handleIndicatorSelect","indicator","isCurrentlySelected","newIndicator","handlePrecinctHover","flex","ref","flexDirection","gap","onChange","target","placeholder","outline","onClick","marginTop","paddingTop","borderTop","checked","htmlFor","marginLeft","borderLeft","overflowY","fontStyle","_c3","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport indicatorMetadata from './indicatorMetadata'; // IMPORTED METADATA\n\n// --- LLM API Setup ---\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component finds and styles specified keywords in a block of text.\nconst InteractiveDescription = ({ text, keywords, colors, onKeywordHover }) => {\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n\n  return (\n    <p style={{ fontSize: '0.95rem', color: '#6c757d', lineHeight: 1.6 }}>\n      {parts.map((part, index) => {\n        const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n        if (originalKeyword) {\n          return (\n            <strong\n              key={index}\n              style={{\n                color: colors[originalKeyword] || '#000',\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                padding: '2px 0',\n                borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n              }}\n              onMouseEnter={() => onKeywordHover(originalKeyword)}\n              onMouseLeave={() => onKeywordHover(null)} // Clear hover on exit\n            >\n              {part}\n            </strong>\n          );\n        }\n        return <React.Fragment key={index}>{part}</React.Fragment>;\n      })}\n    </p>\n  );\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\nconst Legend = ({ title, items }) => {\n  return (\n    <div style={{\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '240px'\n    }}>\n      <h4 style={{ margin: '0 0 0.5rem 0', fontWeight: 'bold' }}>{title}</h4>\n      {items.map((item, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.25rem' }}>\n          <span style={{\n            backgroundColor: item.color,\n            width: '18px',\n            height: '18px',\n            display: 'inline-block',\n            marginRight: '0.5rem',\n            border: '1px solid #ccc'\n          }}></span>\n          <span>{item.label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n// --- END: LEGEND COMPONENT ---\n\n\n// --- START: MAP COMPONENT ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    'Diversity of Education Qualification': {\n      title: 'Diversity of Education Qualification (Total)',\n      items: [ { color: '#fee5d9', label: '0 - 100' }, { color: '#fcbba1', label: '101 - 200' }, { color: '#fc9272', label: '201 - 300' }, { color: '#fb6a4a', label: '301 - 400' }, { color: '#ef3b2c', label: '401 - 500' }, { color: '#cb181d', label: '> 500' } ]\n    },\n    'Diversity of Income': {\n        title: 'Diversity of Income (Total)',\n        items: [ { color: '#fcfbfd', label: '0 - 100' }, { color: '#efedf5', label: '101 - 200' }, { color: '#dadaeb', label: '201 - 300' }, { color: '#bcbddc', label: '301 - 400' }, { color: '#9e9ac8', label: '401 - 500' }, { color: '#807dba', label: '501 - 600' }, { color: '#6a51a3', label: '601 - 700' }, { color: '#54278f', label: '701 - 800' }, { color: '#3f007d', label: '> 800' } ]\n    },\n    'Diversity of Occupations': {\n      title: 'Diversity of Occupations (Total)',\n      items: [ { color: '#f7fbff', label: '0 - 100' }, { color: '#deebf7', label: '101 - 200' }, { color: '#c6dbef', label: '201 - 300' }, { color: '#9ecae1', label: '301 - 400' }, { color: '#6baed6', label: '401 - 500' }, { color: '#4292c6', label: '501 - 600' }, { color: '#2171b5', label: '601 - 700' }, { color: '#08519c', label: '701 - 800' }, { color: '#08306b', label: '> 800' } ]\n    }\n  };\n\n  const indicatorConfig = {\n    'Diversity of Education Qualification': { path: '/data/education-fb-sa1.geojson', property: 'Education-VIC_Total' },\n    'Diversity of Income': { path: '/data/income-fb-sa1.geojson', property: 'Income-VIC1_Total' },\n    'Diversity of Occupations': { path: '/data/occupation-fb-sa1.geojson', property: 'Occupation-VIC_Total' }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'employment', path: '/data/employment-fb-sa1.geojson' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson' },\n        { name: 'pob', path: '/data/POB-fb-sa1.geojson' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson' },\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson' },\n      ];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, { type: 'geojson', data: s.path }));\n\n      const layers = [\n        { id: 'diversity-of-education-qualification-layer', indicatorName: 'Diversity of Education Qualification', source: 'education-data-source', property: indicatorConfig['Diversity of Education Qualification'].property, colors: legendData['Diversity of Education Qualification'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500]  },\n        { id: 'diversity-of-income-layer', indicatorName: 'Diversity of Income', source: 'income-data-source', property: indicatorConfig['Diversity of Income'].property, colors: legendData['Diversity of Income'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] },\n        { id: 'diversity-of-occupations-layer', indicatorName: 'Diversity of Occupations', source: 'occupation-data-source', property: indicatorConfig['Diversity of Occupations'].property, colors: legendData['Diversity of Occupations'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] }\n      ];\n\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id, type: 'fill', source: layer.source, layout: { visibility: 'none' },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        map.current.on('click', layer.id, (e) => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => { map.current.getCanvas().style.cursor = 'pointer'; });\n        map.current.on('mouseleave', layer.id, () => { map.current.getCanvas().style.cursor = ''; });\n      });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n          precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC'); \n\n     map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: { 'fill-color': '#ffffffff', 'fill-opacity': 0.15 }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': 'rgba(0, 0, 0, 0.4)', 'line-width': 7, 'line-translate': [2, 2], 'line-blur': 4 }\n      });\n      map.current.addLayer({\n          id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n          paint: { 'line-color': '#0868ac', 'line-width': 2.5, 'line-opacity': 0.9 }\n      });\n\n      map.current.on('click', 'precincts-fill-layer', (e) => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({ type: 'precinct', name: precinctName });\n        setTextHoveredPrecinct(null);\n      });\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n    map.current.fitBounds(bounds, {\n      padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth },\n      duration: 2000, essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function(...args) { clearTimeout(timer); timer = setTimeout(() => { fn.apply(this, args); }, ms); };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n      map.current.fitBounds(bounds, { padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth }, duration: 0 });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = [\n        'diversity-of-education-qualification-layer', \n        'diversity-of-income-layer', \n        'diversity-of-occupations-layer'\n    ];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '-')}-layer` : null;\n\n    if (map.current.getLayer('base-outline-layer')) {\n        map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false);\n      return;\n    }\n\n    const generateDescription = async () => {\n        setIsDescriptionLoading(true);\n        setDynamicDescription('');\n        const { type, name } = panelFocus;\n        const cacheKey = `${type}_${name}`;\n\n        if (descriptionCache.current[cacheKey]) {\n            setDynamicDescription(descriptionCache.current[cacheKey]);\n            setIsDescriptionLoading(false);\n            return;\n        }\n\n        try {\n            let prompt = '';\n            if (type === 'indicator') {\n                const metadata = indicatorMetadata[name]; // <-- GET METADATA FOR THE INDICATOR\n\n                if (!metadata) {\n                    throw new Error(`Metadata is missing for the \"${name}\" indicator.`);\n                }\n                \n                // --- REFINED PROMPT BASED PURELY ON METADATA ---\n                prompt = `You are an expert urban data analyst providing a summary for a public-facing dashboard about Melbourne's Fishermans Bend.\nYour task is to generate a clear, descriptive summary for the \"${name}\" indicator based ONLY on the metadata provided below.\n\nUse the following information to structure your response. Present it as a cohesive and easy-to-read paragraph, not as a list. **Crucially, when you incorporate a piece of metadata from the list below into your paragraph, you must make that specific value bold using Markdown (e.g., the goal is **An inclusive community**).**\n\n- **Alignment with Goals**: This indicator aligns with Fishermans Bend's goal of: \"${metadata[\"FB's goals\"]}\".\n- **Measurement Method**: It is measured by this method: \"${metadata[\"Note for measurement\"]}\".\n- **Data Origin**: The data is sourced from \"${metadata[\"Data sources\"]}\".\n- **Geographic Coverage**: The data's spatial extent is \"${metadata[\"Spatial extent\"]}\", presented at a \"${metadata[\"Spatial scale\"]}\" level.\n- **Timeliness**: The data is updated every \"${metadata[\"Update frequency\"]}\". The current version is from \"${metadata[\"Temporal currency\"]}\", and the historical data available covers the period \"${metadata[\"Temporal extent\"]}\".\n\nSynthesize this information into an engaging and informative paragraph of about 70-100 words. Start by explaining what this indicator is and why it's important for Fishermans Bend's goals. Then, provide context about the data itself. Remember to make all the specific metadata values bold in your final output. Do not invent or infer any data values, statistics, or trends.`;\n\n\n            } else if (type === 'precinct') {\n                prompt = `You are a concise urban planning analyst. Write a short, engaging summary (around 60-80 words) about the \"${name}\" precinct within Melbourne's Fishermans Bend. Describe its key vision or main characteristics. If relevant, mention its relationship to the other precincts like Montague, Sandridge, and the Employment Precinct.`;\n\n            }\n\n            if (prompt) {\n                const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n                const result = await model.generateContent(prompt);\n                const text = result.response.text();\n                descriptionCache.current[cacheKey] = text;\n                setDynamicDescription(text);\n            }\n        } catch (error) {\n            console.error(`Error generating description for ${name}:`, error);\n            const errorMessage = error.message.includes('429')\n                ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.'\n                : `An error occurred while generating the description: ${error.message}`;\n            setDynamicDescription(errorMessage);\n        } finally {\n            setIsDescriptionLoading(false);\n        }\n    };\n    generateDescription();\n  }, [panelFocus]);\n\n  // Update map visual style when a precinct is highlighted from text\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n\n    if (textHoveredPrecinct) {\n      const fillColorExpression = [ 'case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#ffffffff' ];\n      const fillOpacityExpression = [ 'case', ['==', ['get', 'name'], textHoveredPrecinct], 0.6, 0.15 ];\n      const outlineColorExpression = [ 'case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#0868ac' ];\n\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', fillColorExpression);\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacityExpression);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', outlineColorExpression);\n\n    } else {\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', '#ffffffff');\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', 0.15);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', '#0868ac');\n    }\n  }, [textHoveredPrecinct, PRECINCT_COLORS]);\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {\n    setIndicators(['Diversity of Education Qualification', 'Diversity of Income', 'Diversity of Occupations']);\n    setShowIndicators(true);\n  };\n\n  const handleIndicatorSelect = (indicator) => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? { type: 'indicator', name: newIndicator } : null);\n    setTextHoveredPrecinct(null);\n  };\n\n  const handlePrecinctHover = (precinctName) => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return (\n    <div style={{ display: 'flex', width: '100%', height: 'calc(100vh - 78px)' }}>\n      {/* Map container */}\n      <div style={{ position: 'relative', flex: 1 }}>\n        <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n        <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '288px', zIndex: 10 }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', marginBottom: '1rem' }}>I'm interested in ...</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n            <input type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"e.g., 'jobs' or 'housing'\" style={{ padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', outline: 'none' }} />\n            <button onClick={handleSearchClick} style={{ backgroundColor: '#2563EB', color: 'white', fontWeight: 600, padding: '0.5rem 1rem', borderRadius: '0.375rem', border: 'none', cursor: 'pointer' }}>Search</button>\n          </div>\n          {showIndicators && (\n            <div style={{ marginTop: '1rem', paddingTop: '1rem', borderTop: '1px solid #E5E7EB' }}>\n              <h4 style={{ fontWeight: 600, color: '#1F2937', marginBottom: '0.5rem' }}>Suggested Indicators</h4>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                {indicators.map((indicator) => (\n                  <div key={indicator} style={{ display: 'flex', alignItems: 'center' }}>\n                    <input type=\"radio\" id={indicator} name=\"indicator\" checked={selectedIndicator === indicator} onChange={() => handleIndicatorSelect(indicator)} style={{ height: '1rem', width: '1rem' }} />\n                    <label htmlFor={indicator} style={{ marginLeft: '0.75rem', fontSize: '0.875rem', color: '#374151' }}>{indicator}</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        {selectedIndicator && legendData[selectedIndicator] && <Legend title={legendData[selectedIndicator].title} items={legendData[selectedIndicator].items} />}\n      </div>\n      {/* Text Explorer Panel */}\n      <div style={{ width: '320px', backgroundColor: '#f8f9fa', padding: '1.5rem', borderLeft: '1px solid #dee2e6', overflowY: 'auto' }}>\n        {panelFocus ? (\n          <div>\n            <h4 style={{ fontSize: '1.1rem', fontWeight: 600, color: '#495057', marginBottom: '0.75rem' }}>{panelFocus.name}</h4>\n            {isDescriptionLoading ? (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>🤖 Generating AI description...</p>\n            ) : (\n              <InteractiveDescription\n                text={dynamicDescription}\n                keywords={PRECINCT_NAMES}\n                colors={PRECINCT_COLORS}\n                onKeywordHover={handlePrecinctHover}\n              />\n            )}\n          </div>\n        ) : (\n          <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>Select an indicator from the left panel or click on a precinct on the map to see its description.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n// --- END: MAP COMPONENT ---"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}