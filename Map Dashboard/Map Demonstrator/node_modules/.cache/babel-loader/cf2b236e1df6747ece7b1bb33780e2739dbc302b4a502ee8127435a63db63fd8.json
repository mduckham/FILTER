{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport indicatorMetadata from './components/indicatorMetadata'; // Import the separated metadata\n\n// --- LLM API Setup ---\n// IMPORTANT: Ensure your API key is set in a .env file (REACT_APP_GEMINI_API_KEY=...)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component finds and styles specified keywords in a block of text.\nconst InteractiveDescription = ({\n  text,\n  keywords,\n  colors,\n  onKeywordHover\n}) => {\n  _s();\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      fontSize: '0.95rem',\n      color: '#6c757d',\n      lineHeight: 1.6\n    },\n    children: parts.map((part, index) => {\n      const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n      if (originalKeyword) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: colors[originalKeyword] || '#000',\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            padding: '2px 0',\n            borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n          },\n          onMouseEnter: () => onKeywordHover(originalKeyword),\n          onMouseLeave: () => onKeywordHover(null) // Clear hover on exit\n          ,\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\n_s(InteractiveDescription, \"kB+E/0zygT+E0toaiTuITJ43hpU=\");\n_c = InteractiveDescription;\nconst Legend = ({\n  title,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 0.5rem 0',\n        fontWeight: 'bold'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: item.color,\n          width: '18px',\n          height: '18px',\n          display: 'inline-block',\n          marginRight: '0.5rem',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n// --- END: LEGEND COMPONENT ---\n\n// --- START: MAP COMPONENT ---\n_c2 = Legend;\nexport default function Map() {\n  _s2();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS (UPDATED) ---\n  const legendData = {\n    'Diversity of education qualification': {\n      title: 'Education Diversity Score',\n      items: [{\n        color: '#f7fcfd',\n        label: '0.0 - 0.2 (Low)'\n      }, {\n        color: '#e0ecf4',\n        label: '0.2 - 0.4'\n      }, {\n        color: '#bfd3e6',\n        label: '0.4 - 0.6'\n      }, {\n        color: '#9ebcda',\n        label: '0.6 - 0.8'\n      }, {\n        color: '#8c96c6',\n        label: '0.8 - 1.0 (High)'\n      }]\n    },\n    'Diversity of income (residents)': {\n      title: 'Income Diversity Score',\n      items: [{\n        color: '#f7fcfd',\n        label: '0.0 - 0.2 (Low)'\n      }, {\n        color: '#e0ecf4',\n        label: '0.2 - 0.4'\n      }, {\n        color: '#bfd3e6',\n        label: '0.4 - 0.6'\n      }, {\n        color: '#9ebcda',\n        label: '0.6 - 0.8'\n      }, {\n        color: '#8c96c6',\n        label: '0.8 - 1.0 (High)'\n      }]\n    },\n    'Diversity of occupations (residents)': {\n      title: 'Occupation Diversity Score',\n      items: [{\n        color: '#f7fcfd',\n        label: '0.0 - 0.2 (Low)'\n      }, {\n        color: '#e0ecf4',\n        label: '0.2 - 0.4'\n      }, {\n        color: '#bfd3e6',\n        label: '0.4 - 0.6'\n      }, {\n        color: '#9ebcda',\n        label: '0.6 - 0.8'\n      }, {\n        color: '#8c96c6',\n        label: '0.8 - 1.0 (High)'\n      }]\n    }\n  };\n\n  // NOTE: The 'path' and 'property' values below are placeholders.\n  // You must replace them with the actual paths to your GeoJSON files and the correct property names from within those files.\n  const indicatorConfig = {\n    'Diversity of education qualification': {\n      path: '/data/diversity-education-fb-sa1.geojson',\n      property: 'div_edu_score'\n    },\n    'Diversity of income (residents)': {\n      path: '/data/diversity-income-fb-sa1.geojson',\n      property: 'div_inc_score'\n    },\n    'Diversity of occupations (residents)': {\n      path: '/data/diversity-occupations-fb-sa1.geojson',\n      property: 'div_occ_score'\n    }\n  };\n\n  // Helper to create valid CSS IDs from indicator names\n  const generateLayerId = name => {\n    return name.toLowerCase().replace(/[^a-z0-9]/g, '-');\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'diversity-education',\n        path: indicatorConfig['Diversity of education qualification'].path\n      }, {\n        name: 'diversity-income',\n        path: indicatorConfig['Diversity of income (residents)'].path\n      }, {\n        name: 'diversity-occupations',\n        path: indicatorConfig['Diversity of occupations (residents)'].path\n      }, {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson'\n      }];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, {\n        type: 'geojson',\n        data: s.path\n      }));\n      const layers = [{\n        indicatorName: 'Diversity of education qualification',\n        property: indicatorConfig['Diversity of education qualification'].property,\n        colors: legendData['Diversity of education qualification'].items.map(i => i.color),\n        stops: [0, 0.2, 0.4, 0.6, 0.8]\n      }, {\n        indicatorName: 'Diversity of income (residents)',\n        property: indicatorConfig['Diversity of income (residents)'].property,\n        colors: legendData['Diversity of income (residents)'].items.map(i => i.color),\n        stops: [0, 0.2, 0.4, 0.6, 0.8]\n      }, {\n        indicatorName: 'Diversity of occupations (residents)',\n        property: indicatorConfig['Diversity of occupations (residents)'].property,\n        colors: legendData['Diversity of occupations (residents)'].items.map(i => i.color),\n        stops: [0, 0.2, 0.4, 0.6, 0.8]\n      }];\n      layers.forEach(layer => {\n        const layerId = generateLayerId(layer.indicatorName);\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layerId,\n          type: 'fill',\n          source: `${layerId}-data-source`,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.7\n          }\n        });\n        map.current.on('click', layerId, e => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toFixed(2) : 'N/A';\n            new maplibregl.Popup().setLngLat(e.lngLat).setHTML(`<div style=\"font-family: sans-serif; padding: 5px; text-align: left;\"><h4 style=\"margin: 0 0 5px 0; font-weight: bold;\">SA1: ${regionName}</h4><strong>Score:</strong> ${formattedValue}</div>`).addTo(map.current);\n          }\n        });\n        map.current.on('mouseenter', layerId, () => {\n          map.current.getCanvas().style.cursor = 'pointer';\n        });\n        map.current.on('mouseleave', layerId, () => {\n          map.current.getCanvas().style.cursor = '';\n        });\n      });\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#0868ac',\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': 'rgba(0, 0, 0, 0.4)',\n          'line-width': 7,\n          'line-translate': [2, 2],\n          'line-blur': 4\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#0868ac',\n          'line-width': 2.5,\n          'line-opacity': 0.9\n        }\n      });\n      map.current.on('click', 'precincts-fill-layer', e => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({\n          type: 'precinct',\n          name: precinctName\n        });\n        setTextHoveredPrecinct(null);\n      });\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [[144.890, -37.850], [144.948, -37.816]];\n    map.current.fitBounds(bounds, {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: leftPanelWidth,\n        right: rightPanelWidth\n      },\n      duration: 2000,\n      essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, ms);\n      };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [[144.890, -37.850], [144.948, -37.816]];\n      map.current.fitBounds(bounds, {\n        padding: {\n          top: 20,\n          bottom: 20,\n          left: leftPanelWidth,\n          right: rightPanelWidth\n        },\n        duration: 0\n      });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = Object.keys(indicatorConfig).map(generateLayerId);\n    const selectedLayerId = selectedIndicator ? generateLayerId(selectedIndicator) : null;\n    if (map.current.getLayer('base-outline-layer')) {\n      map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false);\n      return;\n    }\n    const generateDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      const {\n        type,\n        name\n      } = panelFocus;\n      const cacheKey = `${type}_${name}`;\n      if (descriptionCache.current[cacheKey]) {\n        setDynamicDescription(descriptionCache.current[cacheKey]);\n        setIsDescriptionLoading(false);\n        return;\n      }\n      try {\n        let prompt = '';\n        if (type === 'indicator') {\n          const meta = indicatorMetadata[name];\n          if (!meta) throw new Error(`Metadata is missing for the \"${name}\" indicator.`);\n\n          // --- NEW, ENHANCED PROMPT ---\n          prompt = `You are an expert urban data analyst for a public-facing dashboard.\n                Write a concise, engaging summary about the \"${name}\" indicator for Melbourne's Fishermans Bend, strictly between 70 and 100 words.\n\n                Follow this exact structure:\n                1. Start by stating which Fishermans Bend goal this indicator addresses, using the value from \"FB's goals\".\n                2. Briefly explain what the indicator measures, using the \"Note for measurement\".\n                3. Mention the \"Data sources\", \"Temporal currency\" (year), and \"Update frequency\".\n                4. Conclude with a brief, insightful sentence about what a high or low diversity score might imply for the community. Do not use the word \"entropy\".\n\n                Here is the metadata to use:\n                - FB's goals: \"${meta[\"FB's goals\"]}\"\n                - Note for measurement: \"${meta[\"Note for measurement\"]}\"\n                - Data sources: \"${meta[\"Data sources\"]}\"\n                - Spatial extent: \"${meta[\"Spatial extent\"]}\"\n                - Spatial scale: \"${meta[\"Spatial scale\"]}\"\n                - Update frequency: \"${meta[\"Update frequency\"]}\"\n                - Temporal currency: \"${meta[\"Temporal currency\"]}\"\n                - Temporal extent: \"${meta[\"Temporal extent\"]}\"\n                `;\n        } else if (type === 'precinct') {\n          prompt = `You are a concise urban planning analyst. Write a short, engaging summary (around 60-80 words) about the \"${name}\" precinct within Melbourne's Fishermans Bend. Describe its key vision or main characteristics. If relevant, mention its relationship to the other precincts like Montague, Sandridge, and the Employment Precinct.`;\n        }\n        if (prompt) {\n          const model = genAI.getGenerativeModel({\n            model: \"gemini-1.5-flash-latest\"\n          });\n          const result = await model.generateContent(prompt);\n          const text = result.response.text();\n          descriptionCache.current[cacheKey] = text;\n          setDynamicDescription(text);\n        }\n      } catch (error) {\n        console.error(`Error generating description for ${name}:`, error);\n        const errorMessage = error.message.includes('429') ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.' : `An error occurred while generating the description: ${error.message}`;\n        setDynamicDescription(errorMessage);\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generateDescription();\n  }, [panelFocus]);\n\n  // Update map visual style when a precinct is highlighted from text\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    if (textHoveredPrecinct) {\n      const fillColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#0868ac'];\n      const fillOpacityExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], 0.6, 0.15];\n      const outlineColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#0868ac'];\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', fillColorExpression);\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacityExpression);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', outlineColorExpression);\n    } else {\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', '#0868ac');\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', 0.15);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', '#0868ac');\n    }\n  }, [textHoveredPrecinct]);\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {\n    // UPDATED to show the new indicators\n    setIndicators(['Diversity of education qualification', 'Diversity of income (residents)', 'Diversity of occupations (residents)']);\n    setShowIndicators(true);\n  };\n  const handleIndicatorSelect = indicator => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? {\n      type: 'indicator',\n      name: newIndicator\n    } : null);\n    setTextHoveredPrecinct(null);\n  };\n  const handlePrecinctHover = precinctName => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem',\n          backgroundColor: 'white',\n          padding: '1rem',\n          borderRadius: '0.5rem',\n          boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n          width: '288px',\n          zIndex: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.125rem',\n            fontWeight: 'bold',\n            marginBottom: '1rem'\n          },\n          children: \"I'm interested in ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value),\n            placeholder: \"e.g., 'community' or 'diversity'\",\n            style: {\n              padding: '0.5rem',\n              border: '1px solid #D1D5DB',\n              borderRadius: '0.375rem',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearchClick,\n            style: {\n              backgroundColor: '#2563EB',\n              color: 'white',\n              fontWeight: 600,\n              padding: '0.5rem 1rem',\n              borderRadius: '0.375rem',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), showIndicators && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem',\n            paddingTop: '1rem',\n            borderTop: '1px solid #E5E7EB'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 600,\n              color: '#1F2937',\n              marginBottom: '0.5rem'\n            },\n            children: \"Suggested Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '0.5rem'\n            },\n            children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: indicator,\n                name: \"indicator\",\n                checked: selectedIndicator === indicator,\n                onChange: () => handleIndicatorSelect(indicator),\n                style: {\n                  height: '1rem',\n                  width: '1rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: indicator,\n                style: {\n                  marginLeft: '0.75rem',\n                  fontSize: '0.875rem',\n                  color: '#374151'\n                },\n                children: indicator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this)]\n            }, indicator, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), selectedIndicator && legendData[selectedIndicator] && /*#__PURE__*/_jsxDEV(Legend, {\n        title: legendData[selectedIndicator].title,\n        items: legendData[selectedIndicator].items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        backgroundColor: '#f8f9fa',\n        padding: '1.5rem',\n        borderLeft: '1px solid #dee2e6',\n        overflowY: 'auto'\n      },\n      children: panelFocus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: 600,\n            color: '#495057',\n            marginBottom: '0.75rem'\n          },\n          children: panelFocus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), isDescriptionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            fontStyle: 'italic'\n          },\n          children: \"\\uD83E\\uDD16 Generating AI description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(InteractiveDescription, {\n          text: dynamicDescription,\n          keywords: PRECINCT_NAMES,\n          colors: PRECINCT_COLORS,\n          onKeywordHover: handlePrecinctHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.95rem',\n          color: '#6c757d',\n          fontStyle: 'italic'\n        },\n        children: \"Select an indicator from the left panel or click on a precinct on the map to see its description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n}\n// --- END: MAP COMPONENT ---\n_s2(Map, \"WkFYB2rKJ4hXCyci5cfQJXiykAY=\");\n_c3 = Map;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InteractiveDescription\");\n$RefreshReg$(_c2, \"Legend\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","maplibregl","GoogleGenerativeAI","indicatorMetadata","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","InteractiveDescription","text","keywords","colors","onKeywordHover","_s","parts","length","regex","RegExp","join","split","filter","part","style","fontSize","color","lineHeight","children","map","index","originalKeyword","find","kw","toLowerCase","cursor","fontWeight","padding","borderBottom","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","Legend","title","items","position","bottom","right","backgroundColor","borderRadius","boxShadow","zIndex","width","margin","item","display","alignItems","marginBottom","height","marginRight","border","label","_c2","Map","_s2","mapContainer","descriptionCache","PRECINCT_NAMES","PRECINCT_COLORS","searchText","setSearchText","indicators","setIndicators","selectedIndicator","setSelectedIndicator","showIndicators","setShowIndicators","panelFocus","setPanelFocus","dynamicDescription","setDynamicDescription","isDescriptionLoading","setIsDescriptionLoading","textHoveredPrecinct","setTextHoveredPrecinct","leftPanelWidth","rightPanelWidth","legendData","indicatorConfig","path","property","generateLayerId","name","replace","current","container","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","on","e","console","error","message","adjustMapBounds","sources","forEach","s","addSource","type","data","layers","indicatorName","i","stops","layer","layerId","colorStops","flatMap","stop","addLayer","id","source","layout","visibility","paint","feature","features","regionName","properties","value","formattedValue","isNaN","Number","toFixed","Popup","setLngLat","lngLat","setHTML","addTo","getCanvas","precinctName","remove","bounds","fitBounds","top","left","duration","essential","debounce","fn","ms","timer","args","clearTimeout","setTimeout","apply","debouncedAdjustBounds","debouncedResizeListener","window","addEventListener","removeEventListener","isStyleLoaded","allLayerIds","Object","keys","selectedLayerId","getLayer","setLayoutProperty","generateDescription","cacheKey","prompt","meta","Error","model","getGenerativeModel","result","generateContent","response","errorMessage","includes","fillColorExpression","fillOpacityExpression","outlineColorExpression","setPaintProperty","handleSearchClick","handleIndicatorSelect","indicator","isCurrentlySelected","newIndicator","handlePrecinctHover","flex","ref","flexDirection","gap","onChange","target","placeholder","outline","onClick","marginTop","paddingTop","borderTop","checked","htmlFor","marginLeft","borderLeft","overflowY","fontStyle","_c3","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport indicatorMetadata from './components/indicatorMetadata'; // Import the separated metadata\n\n// --- LLM API Setup ---\n// IMPORTANT: Ensure your API key is set in a .env file (REACT_APP_GEMINI_API_KEY=...)\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component finds and styles specified keywords in a block of text.\nconst InteractiveDescription = ({ text, keywords, colors, onKeywordHover }) => {\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n\n  return (\n    <p style={{ fontSize: '0.95rem', color: '#6c757d', lineHeight: 1.6 }}>\n      {parts.map((part, index) => {\n        const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n        if (originalKeyword) {\n          return (\n            <strong\n              key={index}\n              style={{\n                color: colors[originalKeyword] || '#000',\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                padding: '2px 0',\n                borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n              }}\n              onMouseEnter={() => onKeywordHover(originalKeyword)}\n              onMouseLeave={() => onKeywordHover(null)} // Clear hover on exit\n            >\n              {part}\n            </strong>\n          );\n        }\n        return <React.Fragment key={index}>{part}</React.Fragment>;\n      })}\n    </p>\n  );\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\nconst Legend = ({ title, items }) => {\n  return (\n    <div style={{\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    }}>\n      <h4 style={{ margin: '0 0 0.5rem 0', fontWeight: 'bold' }}>{title}</h4>\n      {items.map((item, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.25rem' }}>\n          <span style={{\n            backgroundColor: item.color,\n            width: '18px',\n            height: '18px',\n            display: 'inline-block',\n            marginRight: '0.5rem',\n            border: '1px solid #ccc'\n          }}></span>\n          <span>{item.label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n// --- END: LEGEND COMPONENT ---\n\n\n// --- START: MAP COMPONENT ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS (UPDATED) ---\n  const legendData = {\n    'Diversity of education qualification': {\n      title: 'Education Diversity Score',\n      items: [ { color: '#f7fcfd', label: '0.0 - 0.2 (Low)' }, { color: '#e0ecf4', label: '0.2 - 0.4' }, { color: '#bfd3e6', label: '0.4 - 0.6' }, { color: '#9ebcda', label: '0.6 - 0.8' }, { color: '#8c96c6', label: '0.8 - 1.0 (High)' } ]\n    },\n    'Diversity of income (residents)': {\n      title: 'Income Diversity Score',\n      items: [ { color: '#f7fcfd', label: '0.0 - 0.2 (Low)' }, { color: '#e0ecf4', label: '0.2 - 0.4' }, { color: '#bfd3e6', label: '0.4 - 0.6' }, { color: '#9ebcda', label: '0.6 - 0.8' }, { color: '#8c96c6', label: '0.8 - 1.0 (High)' } ]\n    },\n    'Diversity of occupations (residents)': {\n      title: 'Occupation Diversity Score',\n      items: [ { color: '#f7fcfd', label: '0.0 - 0.2 (Low)' }, { color: '#e0ecf4', label: '0.2 - 0.4' }, { color: '#bfd3e6', label: '0.4 - 0.6' }, { color: '#9ebcda', label: '0.6 - 0.8' }, { color: '#8c96c6', label: '0.8 - 1.0 (High)' } ]\n    }\n  };\n\n  // NOTE: The 'path' and 'property' values below are placeholders.\n  // You must replace them with the actual paths to your GeoJSON files and the correct property names from within those files.\n  const indicatorConfig = {\n    'Diversity of education qualification': { path: '/data/diversity-education-fb-sa1.geojson', property: 'div_edu_score' },\n    'Diversity of income (residents)': { path: '/data/diversity-income-fb-sa1.geojson', property: 'div_inc_score' },\n    'Diversity of occupations (residents)': { path: '/data/diversity-occupations-fb-sa1.geojson', property: 'div_occ_score' }\n  };\n\n  // Helper to create valid CSS IDs from indicator names\n  const generateLayerId = (name) => {\n    return name.toLowerCase().replace(/[^a-z0-9]/g, '-');\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'diversity-education', path: indicatorConfig['Diversity of education qualification'].path },\n        { name: 'diversity-income', path: indicatorConfig['Diversity of income (residents)'].path },\n        { name: 'diversity-occupations', path: indicatorConfig['Diversity of occupations (residents)'].path },\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson' },\n      ];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, { type: 'geojson', data: s.path }));\n\n      const layers = [\n        { indicatorName: 'Diversity of education qualification', property: indicatorConfig['Diversity of education qualification'].property, colors: legendData['Diversity of education qualification'].items.map(i => i.color), stops: [0, 0.2, 0.4, 0.6, 0.8] },\n        { indicatorName: 'Diversity of income (residents)', property: indicatorConfig['Diversity of income (residents)'].property, colors: legendData['Diversity of income (residents)'].items.map(i => i.color), stops: [0, 0.2, 0.4, 0.6, 0.8] },\n        { indicatorName: 'Diversity of occupations (residents)', property: indicatorConfig['Diversity of occupations (residents)'].property, colors: legendData['Diversity of occupations (residents)'].items.map(i => i.color), stops: [0, 0.2, 0.4, 0.6, 0.8] }\n      ];\n\n      layers.forEach(layer => {\n        const layerId = generateLayerId(layer.indicatorName);\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layerId, type: 'fill', source: `${layerId}-data-source`, layout: { visibility: 'none' },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.7\n          }\n        });\n        map.current.on('click', layerId, (e) => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toFixed(2) : 'N/A';\n            new maplibregl.Popup()\n              .setLngLat(e.lngLat)\n              .setHTML(`<div style=\"font-family: sans-serif; padding: 5px; text-align: left;\"><h4 style=\"margin: 0 0 5px 0; font-weight: bold;\">SA1: ${regionName}</h4><strong>Score:</strong> ${formattedValue}</div>`)\n              .addTo(map.current);\n          }\n        });\n        map.current.on('mouseenter', layerId, () => { map.current.getCanvas().style.cursor = 'pointer'; });\n        map.current.on('mouseleave', layerId, () => { map.current.getCanvas().style.cursor = ''; });\n      });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: { 'fill-color': '#0868ac', 'fill-opacity': 0.15 }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': 'rgba(0, 0, 0, 0.4)', 'line-width': 7, 'line-translate': [2, 2], 'line-blur': 4 }\n      });\n      map.current.addLayer({\n          id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n          paint: { 'line-color': '#0868ac', 'line-width': 2.5, 'line-opacity': 0.9 }\n      });\n\n      map.current.on('click', 'precincts-fill-layer', (e) => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({ type: 'precinct', name: precinctName });\n        setTextHoveredPrecinct(null);\n      });\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n    map.current.fitBounds(bounds, {\n      padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth },\n      duration: 2000, essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function(...args) { clearTimeout(timer); timer = setTimeout(() => { fn.apply(this, args); }, ms); };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n      map.current.fitBounds(bounds, { padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth }, duration: 0 });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = Object.keys(indicatorConfig).map(generateLayerId);\n    const selectedLayerId = selectedIndicator ? generateLayerId(selectedIndicator) : null;\n\n    if (map.current.getLayer('base-outline-layer')) {\n        map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false);\n      return;\n    }\n\n    const generateDescription = async () => {\n        setIsDescriptionLoading(true);\n        setDynamicDescription('');\n        const { type, name } = panelFocus;\n        const cacheKey = `${type}_${name}`;\n\n        if (descriptionCache.current[cacheKey]) {\n            setDynamicDescription(descriptionCache.current[cacheKey]);\n            setIsDescriptionLoading(false);\n            return;\n        }\n\n        try {\n            let prompt = '';\n            if (type === 'indicator') {\n                const meta = indicatorMetadata[name];\n                if (!meta) throw new Error(`Metadata is missing for the \"${name}\" indicator.`);\n\n                // --- NEW, ENHANCED PROMPT ---\n                prompt = `You are an expert urban data analyst for a public-facing dashboard.\n                Write a concise, engaging summary about the \"${name}\" indicator for Melbourne's Fishermans Bend, strictly between 70 and 100 words.\n\n                Follow this exact structure:\n                1. Start by stating which Fishermans Bend goal this indicator addresses, using the value from \"FB's goals\".\n                2. Briefly explain what the indicator measures, using the \"Note for measurement\".\n                3. Mention the \"Data sources\", \"Temporal currency\" (year), and \"Update frequency\".\n                4. Conclude with a brief, insightful sentence about what a high or low diversity score might imply for the community. Do not use the word \"entropy\".\n\n                Here is the metadata to use:\n                - FB's goals: \"${meta[\"FB's goals\"]}\"\n                - Note for measurement: \"${meta[\"Note for measurement\"]}\"\n                - Data sources: \"${meta[\"Data sources\"]}\"\n                - Spatial extent: \"${meta[\"Spatial extent\"]}\"\n                - Spatial scale: \"${meta[\"Spatial scale\"]}\"\n                - Update frequency: \"${meta[\"Update frequency\"]}\"\n                - Temporal currency: \"${meta[\"Temporal currency\"]}\"\n                - Temporal extent: \"${meta[\"Temporal extent\"]}\"\n                `;\n\n            } else if (type === 'precinct') {\n                prompt = `You are a concise urban planning analyst. Write a short, engaging summary (around 60-80 words) about the \"${name}\" precinct within Melbourne's Fishermans Bend. Describe its key vision or main characteristics. If relevant, mention its relationship to the other precincts like Montague, Sandridge, and the Employment Precinct.`;\n            }\n            if (prompt) {\n                const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n                const result = await model.generateContent(prompt);\n                const text = result.response.text();\n                descriptionCache.current[cacheKey] = text;\n                setDynamicDescription(text);\n            }\n        } catch (error) {\n            console.error(`Error generating description for ${name}:`, error);\n            const errorMessage = error.message.includes('429')\n                ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.'\n                : `An error occurred while generating the description: ${error.message}`;\n            setDynamicDescription(errorMessage);\n        } finally {\n            setIsDescriptionLoading(false);\n        }\n    };\n    generateDescription();\n  }, [panelFocus]);\n\n  // Update map visual style when a precinct is highlighted from text\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n\n    if (textHoveredPrecinct) {\n      const fillColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#0868ac'];\n      const fillOpacityExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], 0.6, 0.15];\n      const outlineColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#0868ac'];\n\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', fillColorExpression);\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacityExpression);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', outlineColorExpression);\n\n    } else {\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', '#0868ac');\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', 0.15);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', '#0868ac');\n    }\n  }, [textHoveredPrecinct]);\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {\n    // UPDATED to show the new indicators\n    setIndicators([\n        'Diversity of education qualification',\n        'Diversity of income (residents)',\n        'Diversity of occupations (residents)'\n    ]);\n    setShowIndicators(true);\n  };\n\n  const handleIndicatorSelect = (indicator) => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? { type: 'indicator', name: newIndicator } : null);\n    setTextHoveredPrecinct(null);\n  };\n\n  const handlePrecinctHover = (precinctName) => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return (\n    <div style={{ display: 'flex', width: '100%', height: 'calc(100vh - 78px)' }}>\n      {/* Map container */}\n      <div style={{ position: 'relative', flex: 1 }}>\n        <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n        <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '288px', zIndex: 10 }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', marginBottom: '1rem' }}>I'm interested in ...</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n            <input type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"e.g., 'community' or 'diversity'\" style={{ padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', outline: 'none' }} />\n            <button onClick={handleSearchClick} style={{ backgroundColor: '#2563EB', color: 'white', fontWeight: 600, padding: '0.5rem 1rem', borderRadius: '0.375rem', border: 'none', cursor: 'pointer' }}>Search</button>\n          </div>\n          {showIndicators && (\n            <div style={{ marginTop: '1rem', paddingTop: '1rem', borderTop: '1px solid #E5E7EB' }}>\n              <h4 style={{ fontWeight: 600, color: '#1F2937', marginBottom: '0.5rem' }}>Suggested Indicators</h4>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                {indicators.map((indicator) => (\n                  <div key={indicator} style={{ display: 'flex', alignItems: 'center' }}>\n                    <input type=\"radio\" id={indicator} name=\"indicator\" checked={selectedIndicator === indicator} onChange={() => handleIndicatorSelect(indicator)} style={{ height: '1rem', width: '1rem' }} />\n                    <label htmlFor={indicator} style={{ marginLeft: '0.75rem', fontSize: '0.875rem', color: '#374151' }}>{indicator}</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        {selectedIndicator && legendData[selectedIndicator] && <Legend title={legendData[selectedIndicator].title} items={legendData[selectedIndicator].items} />}\n      </div>\n      {/* Text Explorer Panel */}\n      <div style={{ width: '320px', backgroundColor: '#f8f9fa', padding: '1.5rem', borderLeft: '1px solid #dee2e6', overflowY: 'auto' }}>\n        {panelFocus ? (\n          <div>\n            <h4 style={{ fontSize: '1.1rem', fontWeight: 600, color: '#495057', marginBottom: '0.75rem' }}>{panelFocus.name}</h4>\n            {isDescriptionLoading ? (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>🤖 Generating AI description...</p>\n            ) : (\n              <InteractiveDescription\n                text={dynamicDescription}\n                keywords={PRECINCT_NAMES}\n                colors={PRECINCT_COLORS}\n                onKeywordHover={handlePrecinctHover}\n              />\n            )}\n          </div>\n        ) : (\n          <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>Select an indicator from the left panel or click on a precinct on the map to see its description.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n// --- END: MAP COMPONENT ---\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACnE,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,kCAAkC;AACzC,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,OAAOC,iBAAiB,MAAM,gCAAgC,CAAC,CAAC;;AAEhE;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,IAAIJ,kBAAkB,CAACK,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC;;AAE1E;AACA;AACA,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAMC,KAAK,GAAGhB,OAAO,CAAC,MAAM;IAC1B,IAAI,CAACW,IAAI,IAAI,CAACC,QAAQ,CAACK,MAAM,EAAE;MAC7B,OAAO,CAACN,IAAI,CAAC;IACf;IACA,MAAMO,KAAK,GAAG,IAAIC,MAAM,CAAC,IAAIP,QAAQ,CAACQ,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;IACzD,OAAOT,IAAI,CAACU,KAAK,CAACH,KAAK,CAAC,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;EACtD,CAAC,EAAE,CAACZ,IAAI,EAAEC,QAAQ,CAAC,CAAC;EAEpB,oBACEP,OAAA;IAAGmB,KAAK,EAAE;MAAEC,QAAQ,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,UAAU,EAAE;IAAI,CAAE;IAAAC,QAAA,EAClEZ,KAAK,CAACa,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,KAAK;MAC1B,MAAMC,eAAe,GAAGnB,QAAQ,CAACoB,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,WAAW,CAAC,CAAC,KAAKX,IAAI,CAACW,WAAW,CAAC,CAAC,CAAC;MACpF,IAAIH,eAAe,EAAE;QACnB,oBACE1B,OAAA;UAEEmB,KAAK,EAAE;YACLE,KAAK,EAAEb,MAAM,CAACkB,eAAe,CAAC,IAAI,MAAM;YACxCI,MAAM,EAAE,SAAS;YACjBC,UAAU,EAAE,MAAM;YAClBC,OAAO,EAAE,OAAO;YAChBC,YAAY,EAAE,aAAazB,MAAM,CAACkB,eAAe,CAAC,IAAI,MAAM;UAC9D,CAAE;UACFQ,YAAY,EAAEA,CAAA,KAAMzB,cAAc,CAACiB,eAAe,CAAE;UACpDS,YAAY,EAAEA,CAAA,KAAM1B,cAAc,CAAC,IAAI,CAAE,CAAC;UAAA;UAAAc,QAAA,EAEzCL;QAAI,GAXAO,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYJ,CAAC;MAEb;MACA,oBAAOvC,OAAA,CAACT,KAAK,CAACiD,QAAQ;QAAAjB,QAAA,EAAcL;MAAI,GAAZO,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CAAC;IAC5D,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER,CAAC;AACD;;AAEA;AAAA7B,EAAA,CAtCML,sBAAsB;AAAAoC,EAAA,GAAtBpC,sBAAsB;AAuC5B,MAAMqC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EACnC,oBACE5C,OAAA;IAAKmB,KAAK,EAAE;MACV0B,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,eAAe,EAAE,OAAO;MACxBhB,OAAO,EAAE,MAAM;MACfiB,YAAY,EAAE,QAAQ;MACtBC,SAAS,EAAE,2BAA2B;MACtCC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;IACT,CAAE;IAAA7B,QAAA,gBACAvB,OAAA;MAAImB,KAAK,EAAE;QAAEkC,MAAM,EAAE,cAAc;QAAEtB,UAAU,EAAE;MAAO,CAAE;MAAAR,QAAA,EAAEoB;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtEK,KAAK,CAACpB,GAAG,CAAC,CAAC8B,IAAI,EAAE7B,KAAK,kBACrBzB,OAAA;MAAiBmB,KAAK,EAAE;QAAEoC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAU,CAAE;MAAAlC,QAAA,gBACzFvB,OAAA;QAAMmB,KAAK,EAAE;UACX6B,eAAe,EAAEM,IAAI,CAACjC,KAAK;UAC3B+B,KAAK,EAAE,MAAM;UACbM,MAAM,EAAE,MAAM;UACdH,OAAO,EAAE,cAAc;UACvBI,WAAW,EAAE,QAAQ;UACrBC,MAAM,EAAE;QACV;MAAE;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACVvC,OAAA;QAAAuB,QAAA,EAAO+B,IAAI,CAACO;MAAK;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GATjBd,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AACD;;AAGA;AAAAuB,GAAA,GAjCMpB,MAAM;AAkCZ,eAAe,SAASqB,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAMC,YAAY,GAAGvE,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM8B,GAAG,GAAG9B,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMwE,gBAAgB,GAAGxE,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEnC;EACA,MAAMyE,cAAc,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,qBAAqB,CAAC;EAC9F,MAAMC,eAAe,GAAG;IACtB,UAAU,EAAE,SAAS;IACrB,WAAW,EAAE,SAAS;IACtB,SAAS,EAAE,SAAS;IACpB,UAAU,EAAE,SAAS;IACrB,qBAAqB,EAAE;EACzB,CAAC;;EAED;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG9E,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC+E,UAAU,EAAEC,aAAa,CAAC,GAAGhF,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiF,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlF,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACmF,cAAc,EAAEC,iBAAiB,CAAC,GAAGpF,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACqF,UAAU,EAAEC,aAAa,CAAC,GAAGtF,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACuF,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxF,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACyF,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG1F,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAAC2F,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5F,QAAQ,CAAC,IAAI,CAAC;;EAEpE;EACA,MAAM6F,cAAc,GAAG,GAAG;EAC1B,MAAMC,eAAe,GAAG,GAAG;;EAE3B;EACA,MAAMC,UAAU,GAAG;IACjB,sCAAsC,EAAE;MACtC5C,KAAK,EAAE,2BAA2B;MAClCC,KAAK,EAAE,CAAE;QAAEvB,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAkB,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAmB,CAAC;IACxO,CAAC;IACD,iCAAiC,EAAE;MACjClB,KAAK,EAAE,wBAAwB;MAC/BC,KAAK,EAAE,CAAE;QAAEvB,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAkB,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAmB,CAAC;IACxO,CAAC;IACD,sCAAsC,EAAE;MACtClB,KAAK,EAAE,4BAA4B;MACnCC,KAAK,EAAE,CAAE;QAAEvB,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAkB,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAExC,KAAK,EAAE,SAAS;QAAEwC,KAAK,EAAE;MAAmB,CAAC;IACxO;EACF,CAAC;;EAED;EACA;EACA,MAAM2B,eAAe,GAAG;IACtB,sCAAsC,EAAE;MAAEC,IAAI,EAAE,0CAA0C;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IACvH,iCAAiC,EAAE;MAAED,IAAI,EAAE,uCAAuC;MAAEC,QAAQ,EAAE;IAAgB,CAAC;IAC/G,sCAAsC,EAAE;MAAED,IAAI,EAAE,4CAA4C;MAAEC,QAAQ,EAAE;IAAgB;EAC1H,CAAC;;EAED;EACA,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,OAAOA,IAAI,CAAC/D,WAAW,CAAC,CAAC,CAACgE,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;EACtD,CAAC;;EAED;;EAEA;EACApG,SAAS,CAAC,MAAM;IACd,IAAI+B,GAAG,CAACsE,OAAO,EAAE;IACjB,IAAI,CAAC7B,YAAY,CAAC6B,OAAO,EAAE;IAE3BtE,GAAG,CAACsE,OAAO,GAAG,IAAIlG,UAAU,CAACmE,GAAG,CAAC;MAC/BgC,SAAS,EAAE9B,YAAY,CAAC6B,OAAO;MAC/B3E,KAAK,EAAE,+DAA+D;MACtE6E,UAAU,EAAE,KAAK;MAAEC,OAAO,EAAE,KAAK;MAAEC,UAAU,EAAE,KAAK;MAAEC,OAAO,EAAE,KAAK;MACpEC,QAAQ,EAAE,KAAK;MAAEC,eAAe,EAAE,KAAK;MAAEC,eAAe,EAAE;IAC5D,CAAC,CAAC;IAEF9E,GAAG,CAACsE,OAAO,CAACS,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,CAAC,CAACE,KAAK,GAAGF,CAAC,CAACE,KAAK,CAACC,OAAO,GAAG,eAAe,CAAC,CAAC;IAEnHnF,GAAG,CAACsE,OAAO,CAACS,EAAE,CAAC,MAAM,EAAE,MAAM;MAC3BK,eAAe,CAAC,CAAC;MAEjB,MAAMC,OAAO,GAAG,CACd;QAAEjB,IAAI,EAAE,cAAc;QAAEH,IAAI,EAAE;MAA2C,CAAC,EAC1E;QAAEG,IAAI,EAAE,qBAAqB;QAAEH,IAAI,EAAED,eAAe,CAAC,sCAAsC,CAAC,CAACC;MAAK,CAAC,EACnG;QAAEG,IAAI,EAAE,kBAAkB;QAAEH,IAAI,EAAED,eAAe,CAAC,iCAAiC,CAAC,CAACC;MAAK,CAAC,EAC3F;QAAEG,IAAI,EAAE,uBAAuB;QAAEH,IAAI,EAAED,eAAe,CAAC,sCAAsC,CAAC,CAACC;MAAK,CAAC,EACrG;QAAEG,IAAI,EAAE,WAAW;QAAEH,IAAI,EAAE;MAA+C,CAAC,CAC5E;MACDoB,OAAO,CAACC,OAAO,CAACC,CAAC,IAAIvF,GAAG,CAACsE,OAAO,CAACkB,SAAS,CAAC,GAAGD,CAAC,CAACnB,IAAI,cAAc,EAAE;QAAEqB,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAEH,CAAC,CAACtB;MAAK,CAAC,CAAC,CAAC;MAEvG,MAAM0B,MAAM,GAAG,CACb;QAAEC,aAAa,EAAE,sCAAsC;QAAE1B,QAAQ,EAAEF,eAAe,CAAC,sCAAsC,CAAC,CAACE,QAAQ;QAAElF,MAAM,EAAE+E,UAAU,CAAC,sCAAsC,CAAC,CAAC3C,KAAK,CAACpB,GAAG,CAAC6F,CAAC,IAAIA,CAAC,CAAChG,KAAK,CAAC;QAAEiG,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;MAAE,CAAC,EACzP;QAAEF,aAAa,EAAE,iCAAiC;QAAE1B,QAAQ,EAAEF,eAAe,CAAC,iCAAiC,CAAC,CAACE,QAAQ;QAAElF,MAAM,EAAE+E,UAAU,CAAC,iCAAiC,CAAC,CAAC3C,KAAK,CAACpB,GAAG,CAAC6F,CAAC,IAAIA,CAAC,CAAChG,KAAK,CAAC;QAAEiG,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;MAAE,CAAC,EAC1O;QAAEF,aAAa,EAAE,sCAAsC;QAAE1B,QAAQ,EAAEF,eAAe,CAAC,sCAAsC,CAAC,CAACE,QAAQ;QAAElF,MAAM,EAAE+E,UAAU,CAAC,sCAAsC,CAAC,CAAC3C,KAAK,CAACpB,GAAG,CAAC6F,CAAC,IAAIA,CAAC,CAAChG,KAAK,CAAC;QAAEiG,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;MAAE,CAAC,CAC1P;MAEDH,MAAM,CAACL,OAAO,CAACS,KAAK,IAAI;QACtB,MAAMC,OAAO,GAAG7B,eAAe,CAAC4B,KAAK,CAACH,aAAa,CAAC;QACpD,MAAMK,UAAU,GAAGF,KAAK,CAACD,KAAK,CAACI,OAAO,CAAC,CAACC,IAAI,EAAEN,CAAC,KAAK,CAACM,IAAI,EAAEJ,KAAK,CAAC/G,MAAM,CAAC6G,CAAC,CAAC,IAAIE,KAAK,CAAC/G,MAAM,CAAC+G,KAAK,CAAC/G,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACrHY,GAAG,CAACsE,OAAO,CAAC8B,QAAQ,CAAC;UACnBC,EAAE,EAAEL,OAAO;UAAEP,IAAI,EAAE,MAAM;UAAEa,MAAM,EAAE,GAAGN,OAAO,cAAc;UAAEO,MAAM,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAC;UAC3FC,KAAK,EAAE;YACL,YAAY,EAAE,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,EAAEV,KAAK,CAAC7B,QAAQ,CAAC,CAAC,EAAE,GAAG+B,UAAU,CAAC;YAChG,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFjG,GAAG,CAACsE,OAAO,CAACS,EAAE,CAAC,OAAO,EAAEiB,OAAO,EAAGhB,CAAC,IAAK;UACtC,MAAM0B,OAAO,GAAG1B,CAAC,CAAC2B,QAAQ,CAAC,CAAC,CAAC;UAC7B,IAAID,OAAO,EAAE;YACX,MAAME,UAAU,GAAGF,OAAO,CAACG,UAAU,CAAC,YAAY,CAAC;YACnD,MAAMC,KAAK,GAAGJ,OAAO,CAACG,UAAU,CAACd,KAAK,CAAC7B,QAAQ,CAAC;YAChD,MAAM6C,cAAc,GAAG,CAACC,KAAK,CAACF,KAAK,CAAC,GAAGG,MAAM,CAACH,KAAK,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;YACvE,IAAI9I,UAAU,CAAC+I,KAAK,CAAC,CAAC,CACnBC,SAAS,CAACpC,CAAC,CAACqC,MAAM,CAAC,CACnBC,OAAO,CAAC,gIAAgIV,UAAU,gCAAgCG,cAAc,QAAQ,CAAC,CACzMQ,KAAK,CAACvH,GAAG,CAACsE,OAAO,CAAC;UACvB;QACF,CAAC,CAAC;QACFtE,GAAG,CAACsE,OAAO,CAACS,EAAE,CAAC,YAAY,EAAEiB,OAAO,EAAE,MAAM;UAAEhG,GAAG,CAACsE,OAAO,CAACkD,SAAS,CAAC,CAAC,CAAC7H,KAAK,CAACW,MAAM,GAAG,SAAS;QAAE,CAAC,CAAC;QAClGN,GAAG,CAACsE,OAAO,CAACS,EAAE,CAAC,YAAY,EAAEiB,OAAO,EAAE,MAAM;UAAEhG,GAAG,CAACsE,OAAO,CAACkD,SAAS,CAAC,CAAC,CAAC7H,KAAK,CAACW,MAAM,GAAG,EAAE;QAAE,CAAC,CAAC;MAC7F,CAAC,CAAC;MAEFN,GAAG,CAACsE,OAAO,CAAC8B,QAAQ,CAAC;QACnBC,EAAE,EAAE,oBAAoB;QAAEZ,IAAI,EAAE,MAAM;QAAEa,MAAM,EAAE,0BAA0B;QAC1EG,KAAK,EAAE;UAAE,YAAY,EAAE,MAAM;UAAE,YAAY,EAAE;QAAI;MACnD,CAAC,CAAC;MAEFzG,GAAG,CAACsE,OAAO,CAAC8B,QAAQ,CAAC;QACnBC,EAAE,EAAE,sBAAsB;QAAEZ,IAAI,EAAE,MAAM;QAAEa,MAAM,EAAE,uBAAuB;QACzEG,KAAK,EAAE;UAAE,YAAY,EAAE,SAAS;UAAE,cAAc,EAAE;QAAK;MACzD,CAAC,CAAC;MACFzG,GAAG,CAACsE,OAAO,CAAC8B,QAAQ,CAAC;QACnBC,EAAE,EAAE,wBAAwB;QAAEZ,IAAI,EAAE,MAAM;QAAEa,MAAM,EAAE,uBAAuB;QAC3EG,KAAK,EAAE;UAAE,YAAY,EAAE,oBAAoB;UAAE,YAAY,EAAE,CAAC;UAAE,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;UAAE,WAAW,EAAE;QAAE;MACzG,CAAC,CAAC;MACFzG,GAAG,CAACsE,OAAO,CAAC8B,QAAQ,CAAC;QACjBC,EAAE,EAAE,yBAAyB;QAAEZ,IAAI,EAAE,MAAM;QAAEa,MAAM,EAAE,uBAAuB;QAC5EG,KAAK,EAAE;UAAE,YAAY,EAAE,SAAS;UAAE,YAAY,EAAE,GAAG;UAAE,cAAc,EAAE;QAAI;MAC7E,CAAC,CAAC;MAEFzG,GAAG,CAACsE,OAAO,CAACS,EAAE,CAAC,OAAO,EAAE,sBAAsB,EAAGC,CAAC,IAAK;QACrD,MAAM0B,OAAO,GAAG1B,CAAC,CAAC2B,QAAQ,CAAC,CAAC,CAAC;QAC7B,IAAI,CAACD,OAAO,IAAI,CAACA,OAAO,CAACG,UAAU,CAACzC,IAAI,EAAE;QAC1C,MAAMqD,YAAY,GAAGf,OAAO,CAACG,UAAU,CAACzC,IAAI;QAC5Cd,aAAa,CAAC;UAAEmC,IAAI,EAAE,UAAU;UAAErB,IAAI,EAAEqD;QAAa,CAAC,CAAC;QACvD7D,sBAAsB,CAAC,IAAI,CAAC;MAC9B,CAAC,CAAC;MAEF5D,GAAG,CAACsE,OAAO,CAACS,EAAE,CAAC,YAAY,EAAE,sBAAsB,EAAE,MAAM;QAAE/E,GAAG,CAACsE,OAAO,CAACkD,SAAS,CAAC,CAAC,CAAC7H,KAAK,CAACW,MAAM,GAAG,SAAS;MAAE,CAAC,CAAC;MACjHN,GAAG,CAACsE,OAAO,CAACS,EAAE,CAAC,YAAY,EAAE,sBAAsB,EAAE,MAAM;QAAE/E,GAAG,CAACsE,OAAO,CAACkD,SAAS,CAAC,CAAC,CAAC7H,KAAK,CAACW,MAAM,GAAG,EAAE;MAAE,CAAC,CAAC;IAC5G,CAAC,CAAC;IAEF,OAAO,MAAM;MAAE,IAAIN,GAAG,CAACsE,OAAO,EAAE;QAAEtE,GAAG,CAACsE,OAAO,CAACoD,MAAM,CAAC,CAAC;QAAE1H,GAAG,CAACsE,OAAO,GAAG,IAAI;MAAE;IAAE,CAAC;EACjF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACpF,GAAG,CAACsE,OAAO,EAAE;IAClB,MAAMqD,MAAM,GAAG,CAAE,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAE;IACzD3H,GAAG,CAACsE,OAAO,CAACsD,SAAS,CAACD,MAAM,EAAE;MAC5BnH,OAAO,EAAE;QAAEqH,GAAG,EAAE,EAAE;QAAEvG,MAAM,EAAE,EAAE;QAAEwG,IAAI,EAAEjE,cAAc;QAAEtC,KAAK,EAAEuC;MAAgB,CAAC;MAC9EiE,QAAQ,EAAE,IAAI;MAAEC,SAAS,EAAE;IAC7B,CAAC,CAAC;EACJ,CAAC;;EAED;EACA/J,SAAS,CAAC,MAAM;IACd,SAASgK,QAAQA,CAACC,EAAE,EAAEC,EAAE,EAAE;MACxB,IAAIC,KAAK;MACT,OAAO,UAAS,GAAGC,IAAI,EAAE;QAAEC,YAAY,CAACF,KAAK,CAAC;QAAEA,KAAK,GAAGG,UAAU,CAAC,MAAM;UAAEL,EAAE,CAACM,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC;QAAE,CAAC,EAAEF,EAAE,CAAC;MAAE,CAAC;IAC5G;IACA,MAAMM,qBAAqB,GAAGA,CAAA,KAAM;MAClC,IAAI,CAACzI,GAAG,CAACsE,OAAO,EAAE;MAClB,MAAMqD,MAAM,GAAG,CAAE,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAE;MACzD3H,GAAG,CAACsE,OAAO,CAACsD,SAAS,CAACD,MAAM,EAAE;QAAEnH,OAAO,EAAE;UAAEqH,GAAG,EAAE,EAAE;UAAEvG,MAAM,EAAE,EAAE;UAAEwG,IAAI,EAAEjE,cAAc;UAAEtC,KAAK,EAAEuC;QAAgB,CAAC;QAAEiE,QAAQ,EAAE;MAAE,CAAC,CAAC;IAChI,CAAC;IACD,MAAMW,uBAAuB,GAAGT,QAAQ,CAACQ,qBAAqB,EAAE,GAAG,CAAC;IACpEE,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,uBAAuB,CAAC;IAC1D,OAAO,MAAMC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEH,uBAAuB,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAzK,SAAS,CAAC,MAAM;IACd,IAAI,CAAC+B,GAAG,CAACsE,OAAO,IAAI,CAACtE,GAAG,CAACsE,OAAO,CAACwE,aAAa,CAAC,CAAC,EAAE;IAClD,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACjF,eAAe,CAAC,CAAChE,GAAG,CAACmE,eAAe,CAAC;IACrE,MAAM+E,eAAe,GAAGjG,iBAAiB,GAAGkB,eAAe,CAAClB,iBAAiB,CAAC,GAAG,IAAI;IAErF,IAAIjD,GAAG,CAACsE,OAAO,CAAC6E,QAAQ,CAAC,oBAAoB,CAAC,EAAE;MAC5CnJ,GAAG,CAACsE,OAAO,CAAC8E,iBAAiB,CAAC,oBAAoB,EAAE,YAAY,EAAEnG,iBAAiB,GAAG,SAAS,GAAG,MAAM,CAAC;IAC7G;IAEA8F,WAAW,CAACzD,OAAO,CAACU,OAAO,IAAI;MAC7B,IAAIhG,GAAG,CAACsE,OAAO,CAAC6E,QAAQ,CAACnD,OAAO,CAAC,EAAE;QACjChG,GAAG,CAACsE,OAAO,CAAC8E,iBAAiB,CAACpD,OAAO,EAAE,YAAY,EAAEA,OAAO,KAAKkD,eAAe,GAAG,SAAS,GAAG,MAAM,CAAC;MACxG;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjG,iBAAiB,CAAC,CAAC;;EAEvB;EACAhF,SAAS,CAAC,MAAM;IACd,IAAI,CAACoF,UAAU,EAAE;MACfG,qBAAqB,CAAC,EAAE,CAAC;MACzBE,uBAAuB,CAAC,KAAK,CAAC;MAC9B;IACF;IAEA,MAAM2F,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC3F,uBAAuB,CAAC,IAAI,CAAC;MAC7BF,qBAAqB,CAAC,EAAE,CAAC;MACzB,MAAM;QAAEiC,IAAI;QAAErB;MAAK,CAAC,GAAGf,UAAU;MACjC,MAAMiG,QAAQ,GAAG,GAAG7D,IAAI,IAAIrB,IAAI,EAAE;MAElC,IAAI1B,gBAAgB,CAAC4B,OAAO,CAACgF,QAAQ,CAAC,EAAE;QACpC9F,qBAAqB,CAACd,gBAAgB,CAAC4B,OAAO,CAACgF,QAAQ,CAAC,CAAC;QACzD5F,uBAAuB,CAAC,KAAK,CAAC;QAC9B;MACJ;MAEA,IAAI;QACA,IAAI6F,MAAM,GAAG,EAAE;QACf,IAAI9D,IAAI,KAAK,WAAW,EAAE;UACtB,MAAM+D,IAAI,GAAGlL,iBAAiB,CAAC8F,IAAI,CAAC;UACpC,IAAI,CAACoF,IAAI,EAAE,MAAM,IAAIC,KAAK,CAAC,gCAAgCrF,IAAI,cAAc,CAAC;;UAE9E;UACAmF,MAAM,GAAG;AACzB,+DAA+DnF,IAAI;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiCoF,IAAI,CAAC,YAAY,CAAC;AACnD,2CAA2CA,IAAI,CAAC,sBAAsB,CAAC;AACvE,mCAAmCA,IAAI,CAAC,cAAc,CAAC;AACvD,qCAAqCA,IAAI,CAAC,gBAAgB,CAAC;AAC3D,oCAAoCA,IAAI,CAAC,eAAe,CAAC;AACzD,uCAAuCA,IAAI,CAAC,kBAAkB,CAAC;AAC/D,wCAAwCA,IAAI,CAAC,mBAAmB,CAAC;AACjE,sCAAsCA,IAAI,CAAC,iBAAiB,CAAC;AAC7D,iBAAiB;QAEL,CAAC,MAAM,IAAI/D,IAAI,KAAK,UAAU,EAAE;UAC5B8D,MAAM,GAAG,6GAA6GnF,IAAI,qNAAqN;QACnV;QACA,IAAImF,MAAM,EAAE;UACR,MAAMG,KAAK,GAAGjL,KAAK,CAACkL,kBAAkB,CAAC;YAAED,KAAK,EAAE;UAA0B,CAAC,CAAC;UAC5E,MAAME,MAAM,GAAG,MAAMF,KAAK,CAACG,eAAe,CAACN,MAAM,CAAC;UAClD,MAAMzK,IAAI,GAAG8K,MAAM,CAACE,QAAQ,CAAChL,IAAI,CAAC,CAAC;UACnC4D,gBAAgB,CAAC4B,OAAO,CAACgF,QAAQ,CAAC,GAAGxK,IAAI;UACzC0E,qBAAqB,CAAC1E,IAAI,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOoG,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,oCAAoCd,IAAI,GAAG,EAAEc,KAAK,CAAC;QACjE,MAAM6E,YAAY,GAAG7E,KAAK,CAACC,OAAO,CAAC6E,QAAQ,CAAC,KAAK,CAAC,GAC5C,qFAAqF,GACrF,uDAAuD9E,KAAK,CAACC,OAAO,EAAE;QAC5E3B,qBAAqB,CAACuG,YAAY,CAAC;MACvC,CAAC,SAAS;QACNrG,uBAAuB,CAAC,KAAK,CAAC;MAClC;IACJ,CAAC;IACD2F,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAAChG,UAAU,CAAC,CAAC;;EAEhB;EACApF,SAAS,CAAC,MAAM;IACd,IAAI,CAAC+B,GAAG,CAACsE,OAAO,IAAI,CAACtE,GAAG,CAACsE,OAAO,CAACwE,aAAa,CAAC,CAAC,EAAE;IAElD,IAAInF,mBAAmB,EAAE;MACvB,MAAMsG,mBAAmB,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAAEtG,mBAAmB,CAAC,EAAEf,eAAe,CAACe,mBAAmB,CAAC,EAAE,SAAS,CAAC;MACnI,MAAMuG,qBAAqB,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAAEvG,mBAAmB,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;MAC/F,MAAMwG,sBAAsB,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAAExG,mBAAmB,CAAC,EAAEf,eAAe,CAACe,mBAAmB,CAAC,EAAE,SAAS,CAAC;MAEtI3D,GAAG,CAACsE,OAAO,CAAC8F,gBAAgB,CAAC,sBAAsB,EAAE,YAAY,EAAEH,mBAAmB,CAAC;MACvFjK,GAAG,CAACsE,OAAO,CAAC8F,gBAAgB,CAAC,sBAAsB,EAAE,cAAc,EAAEF,qBAAqB,CAAC;MAC3FlK,GAAG,CAACsE,OAAO,CAAC8F,gBAAgB,CAAC,yBAAyB,EAAE,YAAY,EAAED,sBAAsB,CAAC;IAE/F,CAAC,MAAM;MACLnK,GAAG,CAACsE,OAAO,CAAC8F,gBAAgB,CAAC,sBAAsB,EAAE,YAAY,EAAE,SAAS,CAAC;MAC7EpK,GAAG,CAACsE,OAAO,CAAC8F,gBAAgB,CAAC,sBAAsB,EAAE,cAAc,EAAE,IAAI,CAAC;MAC1EpK,GAAG,CAACsE,OAAO,CAAC8F,gBAAgB,CAAC,yBAAyB,EAAE,YAAY,EAAE,SAAS,CAAC;IAClF;EACF,CAAC,EAAE,CAACzG,mBAAmB,CAAC,CAAC;;EAEzB;EACA,MAAM0G,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACArH,aAAa,CAAC,CACV,sCAAsC,EACtC,iCAAiC,EACjC,sCAAsC,CACzC,CAAC;IACFI,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMkH,qBAAqB,GAAIC,SAAS,IAAK;IAC3C,MAAMC,mBAAmB,GAAGvH,iBAAiB,KAAKsH,SAAS;IAC3D,MAAME,YAAY,GAAGD,mBAAmB,GAAG,IAAI,GAAGD,SAAS;IAC3DrH,oBAAoB,CAACuH,YAAY,CAAC;IAClCnH,aAAa,CAACmH,YAAY,GAAG;MAAEhF,IAAI,EAAE,WAAW;MAAErB,IAAI,EAAEqG;IAAa,CAAC,GAAG,IAAI,CAAC;IAC9E7G,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAM8G,mBAAmB,GAAIjD,YAAY,IAAK;IAC5C7D,sBAAsB,CAAC6D,YAAY,CAAC;EACtC,CAAC;;EAED;EACA,oBACEjJ,OAAA;IAAKmB,KAAK,EAAE;MAAEoC,OAAO,EAAE,MAAM;MAAEH,KAAK,EAAE,MAAM;MAAEM,MAAM,EAAE;IAAqB,CAAE;IAAAnC,QAAA,gBAE3EvB,OAAA;MAAKmB,KAAK,EAAE;QAAE0B,QAAQ,EAAE,UAAU;QAAEsJ,IAAI,EAAE;MAAE,CAAE;MAAA5K,QAAA,gBAC5CvB,OAAA;QAAKoM,GAAG,EAAEnI,YAAa;QAAC9C,KAAK,EAAE;UAAE0B,QAAQ,EAAE,UAAU;UAAEO,KAAK,EAAE,MAAM;UAAEM,MAAM,EAAE;QAAO;MAAE;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1FvC,OAAA;QAAKmB,KAAK,EAAE;UAAE0B,QAAQ,EAAE,UAAU;UAAEwG,GAAG,EAAE,MAAM;UAAEC,IAAI,EAAE,MAAM;UAAEtG,eAAe,EAAE,OAAO;UAAEhB,OAAO,EAAE,MAAM;UAAEiB,YAAY,EAAE,QAAQ;UAAEC,SAAS,EAAE,2BAA2B;UAAEE,KAAK,EAAE,OAAO;UAAED,MAAM,EAAE;QAAG,CAAE;QAAA5B,QAAA,gBACrMvB,OAAA;UAAImB,KAAK,EAAE;YAAEC,QAAQ,EAAE,UAAU;YAAEW,UAAU,EAAE,MAAM;YAAE0B,YAAY,EAAE;UAAO,CAAE;UAAAlC,QAAA,EAAC;QAAqB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzGvC,OAAA;UAAKmB,KAAK,EAAE;YAAEoC,OAAO,EAAE,MAAM;YAAE8I,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAU,CAAE;UAAA/K,QAAA,gBACvEvB,OAAA;YAAOiH,IAAI,EAAC,MAAM;YAACqB,KAAK,EAAEjE,UAAW;YAACkI,QAAQ,EAAG/F,CAAC,IAAKlC,aAAa,CAACkC,CAAC,CAACgG,MAAM,CAAClE,KAAK,CAAE;YAACmE,WAAW,EAAC,kCAAkC;YAACtL,KAAK,EAAE;cAAEa,OAAO,EAAE,QAAQ;cAAE4B,MAAM,EAAE,mBAAmB;cAAEX,YAAY,EAAE,UAAU;cAAEyJ,OAAO,EAAE;YAAO;UAAE;YAAAtK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7OvC,OAAA;YAAQ2M,OAAO,EAAEd,iBAAkB;YAAC1K,KAAK,EAAE;cAAE6B,eAAe,EAAE,SAAS;cAAE3B,KAAK,EAAE,OAAO;cAAEU,UAAU,EAAE,GAAG;cAAEC,OAAO,EAAE,aAAa;cAAEiB,YAAY,EAAE,UAAU;cAAEW,MAAM,EAAE,MAAM;cAAE9B,MAAM,EAAE;YAAU,CAAE;YAAAP,QAAA,EAAC;UAAM;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7M,CAAC,EACLoC,cAAc,iBACb3E,OAAA;UAAKmB,KAAK,EAAE;YAAEyL,SAAS,EAAE,MAAM;YAAEC,UAAU,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAoB,CAAE;UAAAvL,QAAA,gBACpFvB,OAAA;YAAImB,KAAK,EAAE;cAAEY,UAAU,EAAE,GAAG;cAAEV,KAAK,EAAE,SAAS;cAAEoC,YAAY,EAAE;YAAS,CAAE;YAAAlC,QAAA,EAAC;UAAoB;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnGvC,OAAA;YAAKmB,KAAK,EAAE;cAAEoC,OAAO,EAAE,MAAM;cAAE8I,aAAa,EAAE,QAAQ;cAAEC,GAAG,EAAE;YAAS,CAAE;YAAA/K,QAAA,EACrEgD,UAAU,CAAC/C,GAAG,CAAEuK,SAAS,iBACxB/L,OAAA;cAAqBmB,KAAK,EAAE;gBAAEoC,OAAO,EAAE,MAAM;gBAAEC,UAAU,EAAE;cAAS,CAAE;cAAAjC,QAAA,gBACpEvB,OAAA;gBAAOiH,IAAI,EAAC,OAAO;gBAACY,EAAE,EAAEkE,SAAU;gBAACnG,IAAI,EAAC,WAAW;gBAACmH,OAAO,EAAEtI,iBAAiB,KAAKsH,SAAU;gBAACQ,QAAQ,EAAEA,CAAA,KAAMT,qBAAqB,CAACC,SAAS,CAAE;gBAAC5K,KAAK,EAAE;kBAAEuC,MAAM,EAAE,MAAM;kBAAEN,KAAK,EAAE;gBAAO;cAAE;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5LvC,OAAA;gBAAOgN,OAAO,EAAEjB,SAAU;gBAAC5K,KAAK,EAAE;kBAAE8L,UAAU,EAAE,SAAS;kBAAE7L,QAAQ,EAAE,UAAU;kBAAEC,KAAK,EAAE;gBAAU,CAAE;gBAAAE,QAAA,EAAEwK;cAAS;gBAAA3J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAFhHwJ,SAAS;cAAA3J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGd,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EACLkC,iBAAiB,IAAIc,UAAU,CAACd,iBAAiB,CAAC,iBAAIzE,OAAA,CAAC0C,MAAM;QAACC,KAAK,EAAE4C,UAAU,CAACd,iBAAiB,CAAC,CAAC9B,KAAM;QAACC,KAAK,EAAE2C,UAAU,CAACd,iBAAiB,CAAC,CAAC7B;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtJ,CAAC,eAENvC,OAAA;MAAKmB,KAAK,EAAE;QAAEiC,KAAK,EAAE,OAAO;QAAEJ,eAAe,EAAE,SAAS;QAAEhB,OAAO,EAAE,QAAQ;QAAEkL,UAAU,EAAE,mBAAmB;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAA5L,QAAA,EAC/HsD,UAAU,gBACT7E,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAImB,KAAK,EAAE;YAAEC,QAAQ,EAAE,QAAQ;YAAEW,UAAU,EAAE,GAAG;YAAEV,KAAK,EAAE,SAAS;YAAEoC,YAAY,EAAE;UAAU,CAAE;UAAAlC,QAAA,EAAEsD,UAAU,CAACe;QAAI;UAAAxD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACpH0C,oBAAoB,gBACnBjF,OAAA;UAAGmB,KAAK,EAAE;YAAEC,QAAQ,EAAE,SAAS;YAAEC,KAAK,EAAE,SAAS;YAAE+L,SAAS,EAAE;UAAS,CAAE;UAAA7L,QAAA,EAAC;QAA+B;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAE7GvC,OAAA,CAACK,sBAAsB;UACrBC,IAAI,EAAEyE,kBAAmB;UACzBxE,QAAQ,EAAE4D,cAAe;UACzB3D,MAAM,EAAE4D,eAAgB;UACxB3D,cAAc,EAAEyL;QAAoB;UAAA9J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,gBAENvC,OAAA;QAAGmB,KAAK,EAAE;UAAEC,QAAQ,EAAE,SAAS;UAAEC,KAAK,EAAE,SAAS;UAAE+L,SAAS,EAAE;QAAS,CAAE;QAAA7L,QAAA,EAAC;MAAiG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC/K;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AACA;AAAAyB,GAAA,CAtWwBD,GAAG;AAAAsJ,GAAA,GAAHtJ,GAAG;AAAA,IAAAtB,EAAA,EAAAqB,GAAA,EAAAuJ,GAAA;AAAAC,YAAA,CAAA7K,EAAA;AAAA6K,YAAA,CAAAxJ,GAAA;AAAAwJ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}