{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// --- LLM API Setup ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component now uses onMouseEnter and onMouseLeave for hover effects.\nconst InteractiveDescription = ({\n  text,\n  keywords,\n  colors,\n  onKeywordHover\n}) => {\n  _s();\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      fontSize: '0.95rem',\n      color: '#6c757d',\n      lineHeight: 1.6\n    },\n    children: parts.map((part, index) => {\n      const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n      if (originalKeyword) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: colors[originalKeyword] || '#000',\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            padding: '2px 0',\n            borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n          },\n          onMouseEnter: () => onKeywordHover(originalKeyword),\n          onMouseLeave: () => onKeywordHover(null) // Clear hover on exit\n          ,\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\n_s(InteractiveDescription, \"kB+E/0zygT+E0toaiTuITJ43hpU=\");\n_c = InteractiveDescription;\nconst Legend = ({\n  title,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 0.5rem 0',\n        fontWeight: 'bold'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: item.color,\n          width: '18px',\n          height: '18px',\n          display: 'inline-block',\n          marginRight: '0.5rem',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n// --- END: LEGEND COMPONENT ---\n\n// --- START: MAP COMPONENT ---\n_c2 = Legend;\nexport default function Map() {\n  _s2();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // --- UPDATED: Precinct names and colors for Fishermans Bend ---\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    Employment: {\n      title: 'Employment (Total)',\n      items: [{\n        color: '#edf8e9',\n        label: '0 - 100'\n      }, {\n        color: '#c7e9c0',\n        label: '101 - 200'\n      }, {\n        color: '#a1d99b',\n        label: '201 - 300'\n      }, {\n        color: '#74c476',\n        label: '301 - 400'\n      }, {\n        color: '#31a354',\n        label: '401 - 500'\n      }, {\n        color: '#006d2c',\n        label: '> 500'\n      }]\n    },\n    Education: {\n      title: 'Education (Total)',\n      items: [{\n        color: '#fee5d9',\n        label: '0 - 100'\n      }, {\n        color: '#fcbba1',\n        label: '101 - 200'\n      }, {\n        color: '#fc9272',\n        label: '201 - 300'\n      }, {\n        color: '#fb6a4a',\n        label: '301 - 400'\n      }, {\n        color: '#ef3b2c',\n        label: '401 - 500'\n      }, {\n        color: '#cb181d',\n        label: '> 500'\n      }]\n    },\n    Income: {\n      title: 'Income (Total)',\n      items: [{\n        color: '#fcfbfd',\n        label: '0 - 100'\n      }, {\n        color: '#efedf5',\n        label: '101 - 200'\n      }, {\n        color: '#dadaeb',\n        label: '201 - 300'\n      }, {\n        color: '#bcbddc',\n        label: '301 - 400'\n      }, {\n        color: '#9e9ac8',\n        label: '401 - 500'\n      }, {\n        color: '#807dba',\n        label: '501 - 600'\n      }, {\n        color: '#6a51a3',\n        label: '601 - 700'\n      }, {\n        color: '#54278f',\n        label: '701 - 800'\n      }, {\n        color: '#3f007d',\n        label: '> 800'\n      }]\n    },\n    Occupation: {\n      title: 'Occupation (Total)',\n      items: [{\n        color: '#f7fbff',\n        label: '0 - 100'\n      }, {\n        color: '#deebf7',\n        label: '101 - 200'\n      }, {\n        color: '#c6dbef',\n        label: '201 - 300'\n      }, {\n        color: '#9ecae1',\n        label: '301 - 400'\n      }, {\n        color: '#6baed6',\n        label: '401 - 500'\n      }, {\n        color: '#4292c6',\n        label: '501 - 600'\n      }, {\n        color: '#2171b5',\n        label: '601 - 700'\n      }, {\n        color: '#08519c',\n        label: '701 - 800'\n      }, {\n        color: '#08306b',\n        label: '> 800'\n      }]\n    }\n  };\n  const indicatorConfig = {\n    Employment: {\n      path: '/data/employment-fb-sa1.geojson',\n      property: 'employment-VIC_Total'\n    },\n    Education: {\n      path: '/data/education-fb-sa1.geojson',\n      property: 'Education-VIC_Total'\n    },\n    Income: {\n      path: '/data/income-fb-sa1.geojson',\n      property: 'Income-VIC1_Total'\n    },\n    Occupation: {\n      path: '/data/occupation-fb-sa1.geojson',\n      property: 'Occupation-VIC_Total'\n    }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'employment',\n        path: '/data/employment-fb-sa1.geojson'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson'\n      }, {\n        name: 'pob',\n        path: '/data/POB-fb-sa1.geojson'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson'\n      }, {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson'\n      }];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, {\n        type: 'geojson',\n        data: s.path\n      }));\n      const layers = [{\n        id: 'employment-layer',\n        indicatorName: 'Employment',\n        source: 'employment-data-source',\n        property: indicatorConfig.Employment.property,\n        colors: legendData.Employment.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'education-layer',\n        indicatorName: 'Education',\n        source: 'education-data-source',\n        property: indicatorConfig.Education.property,\n        colors: legendData.Education.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'income-layer',\n        indicatorName: 'Income',\n        source: 'income-data-source',\n        property: indicatorConfig.Income.property,\n        colors: legendData.Income.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }, {\n        id: 'occupation-layer',\n        indicatorName: 'Occupation',\n        source: 'occupation-data-source',\n        property: indicatorConfig.Occupation.property,\n        colors: legendData.Occupation.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }];\n      layers.forEach(layer => {/* ... (This logic is unchanged) ... */});\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n\n      // --- MODIFIED: Precinct Fill now uses a color expression based on its name\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': ['match', ['get', 'name'], 'Montague', PRECINCT_COLORS['Montague'], 'Sandridge', PRECINCT_COLORS['Sandridge'], 'Lorimer', PRECINCT_COLORS['Lorimer'], 'Wirraway', PRECINCT_COLORS['Wirraway'], 'Employment Precinct', PRECINCT_COLORS['Employment Precinct'], '#CCCCCC' // Default color for any unmatched precinct\n          ],\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 1,\n          'line-opacity': 0.5\n        }\n      });\n\n      // --- ADDED: A new layer specifically for the hover highlight outline ---\n      map.current.addLayer({\n        id: 'precincts-highlight-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#FFFFFF',\n          // Bright white outline\n          'line-width': 3.5,\n          'line-opacity': 0.9,\n          'line-offset': 1\n        },\n        // Initially, filter everything out so the layer is invisible\n        filter: ['==', 'name', '']\n      });\n      map.current.on('click', 'precincts-fill-layer', e => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({\n          type: 'precinct',\n          name: precinctName\n        });\n        setTextHoveredPrecinct(null); // Clear any text highlight\n      });\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n  const adjustMapBounds = () => {/* ... (This function is unchanged) ... */};\n  useEffect(() => {/* ... (Resize listener is unchanged) ... */}, []);\n  useEffect(() => {/* ... (Indicator layer visibility is unchanged) ... */}, [selectedIndicator]);\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    // This async function now contains the logic to check if panelFocus is valid.\n    const generateDescription = async () => {\n      // --- FIX: Check for a valid panelFocus object right at the start ---\n      if (!panelFocus) {\n        setDynamicDescription('');\n        setIsDescriptionLoading(false);\n        return; // Exit if there's nothing to focus on\n      }\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n\n      // This line is now safe because of the check above\n      const {\n        type,\n        name\n      } = panelFocus;\n      const cacheKey = `${type}_${name}`;\n      if (descriptionCache.current[cacheKey]) {\n        setDynamicDescription(descriptionCache.current[cacheKey]);\n        setIsDescriptionLoading(false);\n        return;\n      }\n      try {\n        let prompt = '';\n        if (type === 'indicator') {\n          const config = indicatorConfig[name];\n          if (!config || !config.property) {\n            throw new Error(`Configuration is missing for the \"${name}\" indicator.`);\n          }\n          const response = await fetch(config.path);\n          const geojsonData = await response.json();\n          let minFeature = null,\n            maxFeature = null,\n            sum = 0,\n            count = 0;\n          geojsonData.features.forEach(feature => {\n            if (feature && feature.properties && feature.properties.hasOwnProperty(config.property)) {\n              const value = Number(feature.properties[config.property]);\n              if (!isNaN(value)) {\n                if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n                if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n                sum += value;\n                count++;\n              }\n            }\n          });\n          if (count === 0) {\n            throw new Error(`No valid data found for \"${name}\".`);\n          }\n          const average = (sum / count).toFixed(2);\n          const minValue = Number(minFeature.properties[config.property]);\n          const maxValue = Number(maxFeature.properties[config.property]);\n          const minRegion = minFeature.properties['SA1_CODE21'];\n          const maxRegion = maxFeature.properties['SA1_CODE21'];\n          prompt = `You are a concise data analyst for a public-facing dashboard. Based on the following data for the \"${name}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words). Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\"). Key Statistics: - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion}) - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion}) - Average value across all areas: ${Number(average).toLocaleString()}`;\n        } else if (type === 'precinct') {\n          prompt = `You are a concise urban planning analyst. Write a short, engaging summary (around 60-80 words) about the \"${name}\" precinct within Melbourne's Fishermans Bend. Describe its key vision or main characteristics. If relevant, mention its relationship to the other precincts like Montague, Sandridge, and the Employment Precinct.`;\n        }\n        if (prompt) {\n          const model = genAI.getGenerativeModel({\n            model: \"gemini-1.5-flash-latest\"\n          });\n          const result = await model.generateContent(prompt);\n          const text = result.response.text();\n          descriptionCache.current[cacheKey] = text;\n          setDynamicDescription(text);\n        }\n      } catch (error) {\n        console.error(`Error generating description for ${name}:`, error);\n        const errorMessage = error.message.includes('429') ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.' : `An error occurred while generating the description: ${error.message}`;\n        setDynamicDescription(errorMessage);\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n\n    // Call the function\n    generateDescription();\n  }, [panelFocus]);\n\n  // --- MODIFIED: This useEffect now controls both opacity AND the highlight outline ---\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n\n    // 1. Update opacity for all precincts\n    const fillOpacity = textHoveredPrecinct ? ['case', ['==', ['get', 'name'], textHoveredPrecinct], 0.75, 0.1] // Highlighted is opaque, others fade\n    : 0.15; // Default opacity when not hovering\n    map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacity);\n\n    // 2. Update filter for the dedicated highlight outline layer\n    const highlightFilter = textHoveredPrecinct ? ['==', 'name', textHoveredPrecinct] : ['==', 'name', '']; // Filter for nothing (hide layer) if not hovering\n    map.current.setFilter('precincts-highlight-outline-layer', highlightFilter);\n  }, [textHoveredPrecinct]);\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {/* ... (This is unchanged) ... */};\n  const handleIndicatorSelect = indicator => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? {\n      type: 'indicator',\n      name: newIndicator\n    } : null);\n    setTextHoveredPrecinct(null);\n  };\n\n  // Renamed handler for clarity\n  const handlePrecinctHover = precinctName => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem' /* ... */\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), selectedIndicator && legendData[selectedIndicator] && /*#__PURE__*/_jsxDEV(Legend, {\n        title: legendData[selectedIndicator].title,\n        items: legendData[selectedIndicator].items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        backgroundColor: '#f8f9fa',\n        padding: '1.5rem',\n        borderLeft: '1px solid #dee2e6',\n        overflowY: 'auto'\n      },\n      children: panelFocus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: 600,\n            color: '#495057',\n            marginBottom: '0.75rem'\n          },\n          children: panelFocus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), isDescriptionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            fontStyle: 'italic'\n          },\n          children: \"\\uD83E\\uDD16 Generating AI description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(InteractiveDescription, {\n          text: dynamicDescription,\n          keywords: PRECINCT_NAMES,\n          colors: PRECINCT_COLORS,\n          onKeywordHover: handlePrecinctHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.95rem',\n          color: '#6c757d',\n          fontStyle: 'italic'\n        },\n        children: \"Select an indicator from the left panel or click on a precinct on the map to see its description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n}\n// --- END: MAP COMPONENT ---\n_s2(Map, \"WkFYB2rKJ4hXCyci5cfQJXiykAY=\");\n_c3 = Map;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InteractiveDescription\");\n$RefreshReg$(_c2, \"Legend\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","maplibregl","GoogleGenerativeAI","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","InteractiveDescription","text","keywords","colors","onKeywordHover","_s","parts","length","regex","RegExp","join","split","filter","part","style","fontSize","color","lineHeight","children","map","index","originalKeyword","find","kw","toLowerCase","cursor","fontWeight","padding","borderBottom","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","Legend","title","items","position","bottom","right","backgroundColor","borderRadius","boxShadow","zIndex","width","margin","item","display","alignItems","marginBottom","height","marginRight","border","label","_c2","Map","_s2","mapContainer","descriptionCache","PRECINCT_NAMES","PRECINCT_COLORS","searchText","setSearchText","indicators","setIndicators","selectedIndicator","setSelectedIndicator","showIndicators","setShowIndicators","panelFocus","setPanelFocus","dynamicDescription","setDynamicDescription","isDescriptionLoading","setIsDescriptionLoading","textHoveredPrecinct","setTextHoveredPrecinct","leftPanelWidth","rightPanelWidth","legendData","Employment","Education","Income","Occupation","indicatorConfig","path","property","current","container","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","on","e","console","error","message","adjustMapBounds","sources","name","forEach","s","addSource","type","data","layers","id","indicatorName","source","i","stops","layer","addLayer","paint","feature","features","properties","precinctName","getCanvas","remove","generateDescription","cacheKey","prompt","config","Error","response","fetch","geojsonData","json","minFeature","maxFeature","sum","count","hasOwnProperty","value","Number","isNaN","average","toFixed","minValue","maxValue","minRegion","maxRegion","toLocaleString","model","getGenerativeModel","result","generateContent","errorMessage","includes","isStyleLoaded","fillOpacity","setPaintProperty","highlightFilter","setFilter","handleSearchClick","handleIndicatorSelect","indicator","isCurrentlySelected","newIndicator","handlePrecinctHover","flex","ref","top","left","borderLeft","overflowY","fontStyle","_c3","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// --- LLM API Setup ---\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component now uses onMouseEnter and onMouseLeave for hover effects.\nconst InteractiveDescription = ({ text, keywords, colors, onKeywordHover }) => {\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n\n  return (\n    <p style={{ fontSize: '0.95rem', color: '#6c757d', lineHeight: 1.6 }}>\n      {parts.map((part, index) => {\n        const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n        if (originalKeyword) {\n          return (\n            <strong\n              key={index}\n              style={{\n                color: colors[originalKeyword] || '#000',\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                padding: '2px 0',\n                borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n              }}\n              onMouseEnter={() => onKeywordHover(originalKeyword)}\n              onMouseLeave={() => onKeywordHover(null)} // Clear hover on exit\n            >\n              {part}\n            </strong>\n          );\n        }\n        return <React.Fragment key={index}>{part}</React.Fragment>;\n      })}\n    </p>\n  );\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\nconst Legend = ({ title, items }) => {\n  return (\n    <div style={{\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    }}>\n      <h4 style={{ margin: '0 0 0.5rem 0', fontWeight: 'bold' }}>{title}</h4>\n      {items.map((item, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.25rem' }}>\n          <span style={{\n            backgroundColor: item.color,\n            width: '18px',\n            height: '18px',\n            display: 'inline-block',\n            marginRight: '0.5rem',\n            border: '1px solid #ccc'\n          }}></span>\n          <span>{item.label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n// --- END: LEGEND COMPONENT ---\n\n\n// --- START: MAP COMPONENT ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // --- UPDATED: Precinct names and colors for Fishermans Bend ---\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    Employment: {\n      title: 'Employment (Total)',\n      items: [ { color: '#edf8e9', label: '0 - 100' }, { color: '#c7e9c0', label: '101 - 200' }, { color: '#a1d99b', label: '201 - 300' }, { color: '#74c476', label: '301 - 400' }, { color: '#31a354', label: '401 - 500' }, { color: '#006d2c', label: '> 500' } ]\n    },\n    Education: {\n      title: 'Education (Total)',\n      items: [ { color: '#fee5d9', label: '0 - 100' }, { color: '#fcbba1', label: '101 - 200' }, { color: '#fc9272', label: '201 - 300' }, { color: '#fb6a4a', label: '301 - 400' }, { color: '#ef3b2c', label: '401 - 500' }, { color: '#cb181d', label: '> 500' } ]\n    },\n    Income: {\n        title: 'Income (Total)',\n        items: [ { color: '#fcfbfd', label: '0 - 100' }, { color: '#efedf5', label: '101 - 200' }, { color: '#dadaeb', label: '201 - 300' }, { color: '#bcbddc', label: '301 - 400' }, { color: '#9e9ac8', label: '401 - 500' }, { color: '#807dba', label: '501 - 600' }, { color: '#6a51a3', label: '601 - 700' }, { color: '#54278f', label: '701 - 800' }, { color: '#3f007d', label: '> 800' } ]\n    },\n    Occupation: {\n      title: 'Occupation (Total)',\n      items: [ { color: '#f7fbff', label: '0 - 100' }, { color: '#deebf7', label: '101 - 200' }, { color: '#c6dbef', label: '201 - 300' }, { color: '#9ecae1', label: '301 - 400' }, { color: '#6baed6', label: '401 - 500' }, { color: '#4292c6', label: '501 - 600' }, { color: '#2171b5', label: '601 - 700' }, { color: '#08519c', label: '701 - 800' }, { color: '#08306b', label: '> 800' } ]\n    }\n  };\n\n  const indicatorConfig = {\n    Employment: { path: '/data/employment-fb-sa1.geojson', property: 'employment-VIC_Total' },\n    Education: { path: '/data/education-fb-sa1.geojson', property: 'Education-VIC_Total' },\n    Income: { path: '/data/income-fb-sa1.geojson', property: 'Income-VIC1_Total' },\n    Occupation: { path: '/data/occupation-fb-sa1.geojson', property: 'Occupation-VIC_Total' }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'employment', path: '/data/employment-fb-sa1.geojson' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson' },\n        { name: 'pob', path: '/data/POB-fb-sa1.geojson' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson' },\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson' },\n      ];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, { type: 'geojson', data: s.path }));\n      \n      const layers = [\n        { id: 'employment-layer', indicatorName: 'Employment', source: 'employment-data-source', property: indicatorConfig.Employment.property, colors: legendData.Employment.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500] },\n        { id: 'education-layer', indicatorName: 'Education', source: 'education-data-source', property: indicatorConfig.Education.property, colors: legendData.Education.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500]  },\n        { id: 'income-layer', indicatorName: 'Income', source: 'income-data-source', property: indicatorConfig.Income.property, colors: legendData.Income.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] },\n        { id: 'occupation-layer', indicatorName: 'Occupation', source: 'occupation-data-source', property: indicatorConfig.Occupation.property, colors: legendData.Occupation.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] }\n      ];\n\n      layers.forEach(layer => { /* ... (This logic is unchanged) ... */ });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      // --- MODIFIED: Precinct Fill now uses a color expression based on its name\n      map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: {\n          'fill-color': [\n            'match', ['get', 'name'],\n            'Montague', PRECINCT_COLORS['Montague'],\n            'Sandridge', PRECINCT_COLORS['Sandridge'],\n            'Lorimer', PRECINCT_COLORS['Lorimer'],\n            'Wirraway', PRECINCT_COLORS['Wirraway'],\n            'Employment Precinct', PRECINCT_COLORS['Employment Precinct'],\n            '#CCCCCC' // Default color for any unmatched precinct\n          ],\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': '#444', 'line-width': 1, 'line-opacity': 0.5 }\n      });\n      \n      // --- ADDED: A new layer specifically for the hover highlight outline ---\n      map.current.addLayer({\n        id: 'precincts-highlight-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n            'line-color': '#FFFFFF', // Bright white outline\n            'line-width': 3.5,\n            'line-opacity': 0.9,\n            'line-offset': 1\n        },\n        // Initially, filter everything out so the layer is invisible\n        filter: ['==', 'name', '']\n      });\n\n      map.current.on('click', 'precincts-fill-layer', (e) => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({ type: 'precinct', name: precinctName });\n        setTextHoveredPrecinct(null); // Clear any text highlight\n      });\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  const adjustMapBounds = () => { /* ... (This function is unchanged) ... */ };\n  useEffect(() => { /* ... (Resize listener is unchanged) ... */ }, []);\n  useEffect(() => { /* ... (Indicator layer visibility is unchanged) ... */ }, [selectedIndicator]);\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    // This async function now contains the logic to check if panelFocus is valid.\n    const generateDescription = async () => {\n      // --- FIX: Check for a valid panelFocus object right at the start ---\n      if (!panelFocus) {\n        setDynamicDescription('');\n        setIsDescriptionLoading(false);\n        return; // Exit if there's nothing to focus on\n      }\n\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      \n      // This line is now safe because of the check above\n      const { type, name } = panelFocus;\n      const cacheKey = `${type}_${name}`;\n\n      if (descriptionCache.current[cacheKey]) {\n        setDynamicDescription(descriptionCache.current[cacheKey]);\n        setIsDescriptionLoading(false);\n        return;\n      }\n      \n      try {\n        let prompt = '';\n        if (type === 'indicator') {\n          const config = indicatorConfig[name];\n          if (!config || !config.property) {\n            throw new Error(`Configuration is missing for the \"${name}\" indicator.`);\n          }\n          const response = await fetch(config.path);\n          const geojsonData = await response.json();\n          let minFeature = null, maxFeature = null, sum = 0, count = 0;\n\n          geojsonData.features.forEach(feature => {\n            if (feature && feature.properties && feature.properties.hasOwnProperty(config.property)) {\n              const value = Number(feature.properties[config.property]);\n              if (!isNaN(value)) {\n                if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n                if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n                sum += value;\n                count++;\n              }\n            }\n          });\n          \n          if (count === 0) { throw new Error(`No valid data found for \"${name}\".`); }\n          \n          const average = (sum / count).toFixed(2);\n          const minValue = Number(minFeature.properties[config.property]);\n          const maxValue = Number(maxFeature.properties[config.property]);\n          const minRegion = minFeature.properties['SA1_CODE21'];\n          const maxRegion = maxFeature.properties['SA1_CODE21'];\n          prompt = `You are a concise data analyst for a public-facing dashboard. Based on the following data for the \"${name}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words). Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\"). Key Statistics: - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion}) - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion}) - Average value across all areas: ${Number(average).toLocaleString()}`;\n        \n        } else if (type === 'precinct') {\n          prompt = `You are a concise urban planning analyst. Write a short, engaging summary (around 60-80 words) about the \"${name}\" precinct within Melbourne's Fishermans Bend. Describe its key vision or main characteristics. If relevant, mention its relationship to the other precincts like Montague, Sandridge, and the Employment Precinct.`;\n        }\n        \n        if (prompt) {\n          const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n          const result = await model.generateContent(prompt);\n          const text = result.response.text();\n          descriptionCache.current[cacheKey] = text;\n          setDynamicDescription(text);\n        }\n      } catch (error) {\n        console.error(`Error generating description for ${name}:`, error);\n        const errorMessage = error.message.includes('429') \n          ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.'\n          : `An error occurred while generating the description: ${error.message}`;\n        setDynamicDescription(errorMessage);\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n\n    // Call the function\n    generateDescription();\n    \n  }, [panelFocus]);\n  \n  // --- MODIFIED: This useEffect now controls both opacity AND the highlight outline ---\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n\n    // 1. Update opacity for all precincts\n    const fillOpacity = textHoveredPrecinct\n      ? ['case', ['==', ['get', 'name'], textHoveredPrecinct], 0.75, 0.1] // Highlighted is opaque, others fade\n      : 0.15; // Default opacity when not hovering\n    map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacity);\n\n    // 2. Update filter for the dedicated highlight outline layer\n    const highlightFilter = textHoveredPrecinct\n      ? ['==', 'name', textHoveredPrecinct]\n      : ['==', 'name', '']; // Filter for nothing (hide layer) if not hovering\n    map.current.setFilter('precincts-highlight-outline-layer', highlightFilter);\n\n  }, [textHoveredPrecinct]);\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => { /* ... (This is unchanged) ... */ };\n  const handleIndicatorSelect = (indicator) => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? { type: 'indicator', name: newIndicator } : null);\n    setTextHoveredPrecinct(null);\n  };\n\n  // Renamed handler for clarity\n  const handlePrecinctHover = (precinctName) => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return (\n    <div style={{ display: 'flex', width: '100%', height: 'calc(100vh - 78px)' }}>\n      {/* Map container */}\n      <div style={{ position: 'relative', flex: 1 }}>\n        <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n        <div style={{ position: 'absolute', top: '1rem', left: '1rem', /* ... */ }}>\n          {/* ... (Left panel UI is unchanged) ... */}\n        </div>\n        {selectedIndicator && legendData[selectedIndicator] && <Legend title={legendData[selectedIndicator].title} items={legendData[selectedIndicator].items} />}\n      </div>\n      {/* Text Explorer Panel */}\n      <div style={{ width: '320px', backgroundColor: '#f8f9fa', padding: '1.5rem', borderLeft: '1px solid #dee2e6', overflowY: 'auto' }}>\n        {panelFocus ? (\n          <div>\n            <h4 style={{ fontSize: '1.1rem', fontWeight: 600, color: '#495057', marginBottom: '0.75rem' }}>{panelFocus.name}</h4>\n            {isDescriptionLoading ? (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>🤖 Generating AI description...</p>\n            ) : (\n              <InteractiveDescription\n                text={dynamicDescription}\n                keywords={PRECINCT_NAMES}\n                colors={PRECINCT_COLORS}\n                onKeywordHover={handlePrecinctHover}\n              />\n            )}\n          </div>\n        ) : (\n          <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>Select an indicator from the left panel or click on a precinct on the map to see its description.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n// --- END: MAP COMPONENT ---"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}