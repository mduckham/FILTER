{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// --- LLM API Setup ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component finds and styles specified keywords in a block of text.\nconst InteractiveDescription = ({\n  text,\n  keywords,\n  colors,\n  onKeywordHover\n}) => {\n  _s();\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      fontSize: '0.95rem',\n      color: '#6c757d',\n      lineHeight: 1.6\n    },\n    children: parts.map((part, index) => {\n      const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n      if (originalKeyword) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: colors[originalKeyword] || '#000',\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            padding: '2px 0',\n            borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n          },\n          onMouseEnter: () => onKeywordHover(originalKeyword),\n          onMouseLeave: () => onKeywordHover(null) // Clear hover on exit\n          ,\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\n_s(InteractiveDescription, \"kB+E/0zygT+E0toaiTuITJ43hpU=\");\n_c = InteractiveDescription;\nconst Legend = ({\n  title,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 0.5rem 0',\n        fontWeight: 'bold'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: item.color,\n          width: '18px',\n          height: '18px',\n          display: 'inline-block',\n          marginRight: '0.5rem',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n// --- END: LEGEND COMPONENT ---\n\n// --- START: MAP COMPONENT ---\n_c2 = Legend;\nexport default function Map() {\n  _s2();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    Employment: {\n      title: 'Employment (Total)',\n      items: [{\n        color: '#edf8e9',\n        label: '0 - 100'\n      }, {\n        color: '#c7e9c0',\n        label: '101 - 200'\n      }, {\n        color: '#a1d99b',\n        label: '201 - 300'\n      }, {\n        color: '#74c476',\n        label: '301 - 400'\n      }, {\n        color: '#31a354',\n        label: '401 - 500'\n      }, {\n        color: '#006d2c',\n        label: '> 500'\n      }]\n    },\n    Education: {\n      title: 'Education (Total)',\n      items: [{\n        color: '#fee5d9',\n        label: '0 - 100'\n      }, {\n        color: '#fcbba1',\n        label: '101 - 200'\n      }, {\n        color: '#fc9272',\n        label: '201 - 300'\n      }, {\n        color: '#fb6a4a',\n        label: '301 - 400'\n      }, {\n        color: '#ef3b2c',\n        label: '401 - 500'\n      }, {\n        color: '#cb181d',\n        label: '> 500'\n      }]\n    },\n    Income: {\n      title: 'Income (Total)',\n      items: [{\n        color: '#fcfbfd',\n        label: '0 - 100'\n      }, {\n        color: '#efedf5',\n        label: '101 - 200'\n      }, {\n        color: '#dadaeb',\n        label: '201 - 300'\n      }, {\n        color: '#bcbddc',\n        label: '301 - 400'\n      }, {\n        color: '#9e9ac8',\n        label: '401 - 500'\n      }, {\n        color: '#807dba',\n        label: '501 - 600'\n      }, {\n        color: '#6a51a3',\n        label: '601 - 700'\n      }, {\n        color: '#54278f',\n        label: '701 - 800'\n      }, {\n        color: '#3f007d',\n        label: '> 800'\n      }]\n    },\n    Occupation: {\n      title: 'Occupation (Total)',\n      items: [{\n        color: '#f7fbff',\n        label: '0 - 100'\n      }, {\n        color: '#deebf7',\n        label: '101 - 200'\n      }, {\n        color: '#c6dbef',\n        label: '201 - 300'\n      }, {\n        color: '#9ecae1',\n        label: '301 - 400'\n      }, {\n        color: '#6baed6',\n        label: '401 - 500'\n      }, {\n        color: '#4292c6',\n        label: '501 - 600'\n      }, {\n        color: '#2171b5',\n        label: '601 - 700'\n      }, {\n        color: '#08519c',\n        label: '701 - 800'\n      }, {\n        color: '#08306b',\n        label: '> 800'\n      }]\n    }\n  };\n  const indicatorConfig = {\n    Employment: {\n      path: '/data/employment-fb-sa1.geojson',\n      property: 'employment-VIC_Total'\n    },\n    Education: {\n      path: '/data/education-fb-sa1.geojson',\n      property: 'Education-VIC_Total'\n    },\n    Income: {\n      path: '/data/income-fb-sa1.geojson',\n      property: 'Income-VIC1_Total'\n    },\n    Occupation: {\n      path: '/data/occupation-fb-sa1.geojson',\n      property: 'Occupation-VIC_Total'\n    }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'employment',\n        path: '/data/employment-fb-sa1.geojson'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson'\n      }, {\n        name: 'pob',\n        path: '/data/POB-fb-sa1.geojson'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson'\n      }, {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson'\n      }];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, {\n        type: 'geojson',\n        data: s.path\n      }));\n      const layers = [{\n        id: 'employment-layer',\n        indicatorName: 'Employment',\n        source: 'employment-data-source',\n        property: indicatorConfig.Employment.property,\n        colors: legendData.Employment.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'education-layer',\n        indicatorName: 'Education',\n        source: 'education-data-source',\n        property: indicatorConfig.Education.property,\n        colors: legendData.Education.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'income-layer',\n        indicatorName: 'Income',\n        source: 'income-data-source',\n        property: indicatorConfig.Income.property,\n        colors: legendData.Income.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }, {\n        id: 'occupation-layer',\n        indicatorName: 'Occupation',\n        source: 'occupation-data-source',\n        property: indicatorConfig.Occupation.property,\n        colors: legendData.Occupation.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }];\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        map.current.on('click', layer.id, e => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n            // new maplibregl.Popup()\n            //   .setLngLat(e.lngLat)\n            //   .setHTML(`<div style=\"font-family: sans-serif; padding: 5px; text-align: left;\"><h4 style=\"margin: 0 0 5px 0; font-weight: bold;\">SA1: ${regionName}</h4><strong>${layer.indicatorName}:</strong> ${formattedValue}</div>`)\n            //   .addTo(map.current);\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => {\n          map.current.getCanvas().style.cursor = 'pointer';\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          map.current.getCanvas().style.cursor = '';\n        });\n      });\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n\n      // --- CHANGE START: DYNAMIC PRECINCT COLORS ---\n      // Build a dynamic 'case' expression for precinct colors.\n      // This matches each precinct name to its color from the PRECINCT_COLORS constant.\n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n        precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC'); // A fallback color\n\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#f7f7f7ff',\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': 'rgba(0, 0, 0, 0.4)',\n          'line-width': 7,\n          'line-translate': [2, 2],\n          'line-blur': 4\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#0868ac',\n          'line-width': 2.5,\n          'line-opacity': 0.9\n        }\n      });\n      map.current.on('click', 'precincts-fill-layer', e => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({\n          type: 'precinct',\n          name: precinctName\n        });\n        setTextHoveredPrecinct(null);\n      });\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [[144.890, -37.850], [144.948, -37.816]];\n    map.current.fitBounds(bounds, {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: leftPanelWidth,\n        right: rightPanelWidth\n      },\n      duration: 2000,\n      essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, ms);\n      };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [[144.890, -37.850], [144.948, -37.816]];\n      map.current.fitBounds(bounds, {\n        padding: {\n          top: 20,\n          bottom: 20,\n          left: leftPanelWidth,\n          right: rightPanelWidth\n        },\n        duration: 0\n      });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['employment-layer', 'education-layer', 'pob-layer', 'income-layer', 'occupation-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '-')}-layer` : null;\n    if (map.current.getLayer('base-outline-layer')) {\n      map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false);\n      return;\n    }\n    const generateDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      const {\n        type,\n        name\n      } = panelFocus;\n      const cacheKey = `${type}_${name}`;\n      if (descriptionCache.current[cacheKey]) {\n        setDynamicDescription(descriptionCache.current[cacheKey]);\n        setIsDescriptionLoading(false);\n        return;\n      }\n      try {\n        let prompt = '';\n        if (type === 'indicator') {\n          const config = indicatorConfig[name];\n          if (!config || !config.property) {\n            throw new Error(`Configuration is missing for the \"${name}\" indicator.`);\n          }\n          const response = await fetch(config.path);\n          const geojsonData = await response.json();\n          let minFeature = null,\n            maxFeature = null,\n            sum = 0,\n            count = 0;\n          geojsonData.features.forEach(feature => {\n            if (feature && feature.properties && feature.properties.hasOwnProperty(config.property)) {\n              const value = Number(feature.properties[config.property]);\n              if (!isNaN(value)) {\n                if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n                if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n                sum += value;\n                count++;\n              }\n            }\n          });\n          if (count === 0) {\n            throw new Error(`No valid data found for \"${name}\".`);\n          }\n          const average = (sum / count).toFixed(2);\n          const minValue = Number(minFeature.properties[config.property]);\n          const maxValue = Number(maxFeature.properties[config.property]);\n          const minRegion = minFeature.properties['SA1_CODE21'];\n          const maxRegion = maxFeature.properties['SA1_CODE21'];\n          prompt = `You are a concise data analyst for a public-facing dashboard. Based on the following data for the \"${name}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words). Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\"). Key Statistics: - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion}) - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion}) - Average value across all areas: ${Number(average).toLocaleString()}`;\n        } else if (type === 'precinct') {\n          prompt = `You are a concise urban planning analyst. Write a short, engaging summary (around 60-80 words) about the \"${name}\" precinct within Melbourne's Fishermans Bend. Describe its key vision or main characteristics. If relevant, mention its relationship to the other precincts like Montague, Sandridge, and the Employment Precinct.`;\n        }\n        if (prompt) {\n          const model = genAI.getGenerativeModel({\n            model: \"gemini-1.5-flash-latest\"\n          });\n          const result = await model.generateContent(prompt);\n          const text = result.response.text();\n          descriptionCache.current[cacheKey] = text;\n          setDynamicDescription(text);\n        }\n      } catch (error) {\n        console.error(`Error generating description for ${name}:`, error);\n        const errorMessage = error.message.includes('429') ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.' : `An error occurred while generating the description: ${error.message}`;\n        setDynamicDescription(errorMessage);\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generateDescription();\n  }, [panelFocus]);\n\n  // --- CHANGE START: TRANSPARENT HIGHLIGHT ON HOVER ---\n  // Update map visual style when a precinct is highlighted from text\n  // --- CHANGE START: DYNAMIC HOVER HIGHLIGHT ---\n  // Update map visual style when a precinct is highlighted from text\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n\n    // Check if a precinct is being hovered from the text panel\n    if (textHoveredPrecinct) {\n      // A precinct is hovered. Dynamically set paint properties.\n\n      // 1. Create a dynamic 'case' expression for the FILL COLOR.\n      // This sets the hovered precinct to its specific color and others to the default.\n      const fillColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct],\n      // Use the specific color for the hovered precinct\n      '#0868ac' // Fallback to the default color for all others\n      ];\n\n      // 2. Create a dynamic 'case' expression for the FILL OPACITY.\n      // This makes the hovered precinct more prominent.\n      const fillOpacityExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], 0.6,\n      // Higher opacity for the hovered precinct\n      0.15 // Default opacity for all others\n      ];\n\n      // 3. Create a dynamic 'case' expression for the OUTLINE COLOR.\n      // This also highlights the border with the specific color.\n      const outlineColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct],\n      // Use the specific color for the hovered precinct\n      '#0868ac' // Fallback to the default color for all others\n      ];\n\n      // 4. Apply the new dynamic styles to the map layers.\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', fillColorExpression);\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacityExpression);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', outlineColorExpression);\n    } else {\n      // No precinct is hovered. Reset all layers to their default styles.\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', '#0868ac');\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', 0.15);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', '#0868ac');\n    }\n  }, [textHoveredPrecinct, PRECINCT_COLORS]); // Added PRECINCT_COLORS to dependency array\n  // --- CHANGE END ---\n  // --- CHANGE END ---\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {\n    setIndicators(['Employment', 'Education', 'Income', 'Occupation']);\n    setShowIndicators(true);\n  };\n  const handleIndicatorSelect = indicator => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? {\n      type: 'indicator',\n      name: newIndicator\n    } : null);\n    setTextHoveredPrecinct(null);\n  };\n  const handlePrecinctHover = precinctName => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem',\n          backgroundColor: 'white',\n          padding: '1rem',\n          borderRadius: '0.5rem',\n          boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n          width: '288px',\n          zIndex: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.125rem',\n            fontWeight: 'bold',\n            marginBottom: '1rem'\n          },\n          children: \"I'm interested in ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value),\n            placeholder: \"e.g., 'jobs' or 'housing'\",\n            style: {\n              padding: '0.5rem',\n              border: '1px solid #D1D5DB',\n              borderRadius: '0.375rem',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearchClick,\n            style: {\n              backgroundColor: '#2563EB',\n              color: 'white',\n              fontWeight: 600,\n              padding: '0.5rem 1rem',\n              borderRadius: '0.375rem',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), showIndicators && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem',\n            paddingTop: '1rem',\n            borderTop: '1px solid #E5E7EB'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 600,\n              color: '#1F2937',\n              marginBottom: '0.5rem'\n            },\n            children: \"Suggested Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '0.5rem'\n            },\n            children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: indicator,\n                name: \"indicator\",\n                checked: selectedIndicator === indicator,\n                onChange: () => handleIndicatorSelect(indicator),\n                style: {\n                  height: '1rem',\n                  width: '1rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: indicator,\n                style: {\n                  marginLeft: '0.75rem',\n                  fontSize: '0.875rem',\n                  color: '#374151'\n                },\n                children: indicator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this)]\n            }, indicator, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), selectedIndicator && legendData[selectedIndicator] && /*#__PURE__*/_jsxDEV(Legend, {\n        title: legendData[selectedIndicator].title,\n        items: legendData[selectedIndicator].items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        backgroundColor: '#f8f9fa',\n        padding: '1.5rem',\n        borderLeft: '1px solid #dee2e6',\n        overflowY: 'auto'\n      },\n      children: panelFocus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: 600,\n            color: '#495057',\n            marginBottom: '0.75rem'\n          },\n          children: panelFocus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), isDescriptionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            fontStyle: 'italic'\n          },\n          children: \"\\uD83E\\uDD16 Generating AI description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(InteractiveDescription, {\n          text: dynamicDescription,\n          keywords: PRECINCT_NAMES,\n          colors: PRECINCT_COLORS,\n          onKeywordHover: handlePrecinctHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.95rem',\n          color: '#6c757d',\n          fontStyle: 'italic'\n        },\n        children: \"Select an indicator from the left panel or click on a precinct on the map to see its description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 431,\n    columnNumber: 5\n  }, this);\n}\n// --- END: MAP COMPONENT ---\n_s2(Map, \"WkFYB2rKJ4hXCyci5cfQJXiykAY=\");\n_c3 = Map;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InteractiveDescription\");\n$RefreshReg$(_c2, \"Legend\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","maplibregl","GoogleGenerativeAI","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","InteractiveDescription","text","keywords","colors","onKeywordHover","_s","parts","length","regex","RegExp","join","split","filter","part","style","fontSize","color","lineHeight","children","map","index","originalKeyword","find","kw","toLowerCase","cursor","fontWeight","padding","borderBottom","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","Legend","title","items","position","bottom","right","backgroundColor","borderRadius","boxShadow","zIndex","width","margin","item","display","alignItems","marginBottom","height","marginRight","border","label","_c2","Map","_s2","mapContainer","descriptionCache","PRECINCT_NAMES","PRECINCT_COLORS","searchText","setSearchText","indicators","setIndicators","selectedIndicator","setSelectedIndicator","showIndicators","setShowIndicators","panelFocus","setPanelFocus","dynamicDescription","setDynamicDescription","isDescriptionLoading","setIsDescriptionLoading","textHoveredPrecinct","setTextHoveredPrecinct","leftPanelWidth","rightPanelWidth","legendData","Employment","Education","Income","Occupation","indicatorConfig","path","property","current","container","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","on","e","console","error","message","adjustMapBounds","sources","name","forEach","s","addSource","type","data","layers","id","indicatorName","source","i","stops","layer","colorStops","flatMap","stop","addLayer","layout","visibility","paint","feature","features","regionName","properties","value","formattedValue","isNaN","Number","toLocaleString","getCanvas","precinctColorExpression","push","precinctName","remove","bounds","fitBounds","top","left","duration","essential","debounce","fn","ms","timer","args","clearTimeout","setTimeout","apply","debouncedAdjustBounds","debouncedResizeListener","window","addEventListener","removeEventListener","isStyleLoaded","allLayerIds","selectedLayerId","replace","getLayer","setLayoutProperty","layerId","generateDescription","cacheKey","prompt","config","Error","response","fetch","geojsonData","json","minFeature","maxFeature","sum","count","hasOwnProperty","average","toFixed","minValue","maxValue","minRegion","maxRegion","model","getGenerativeModel","result","generateContent","errorMessage","includes","fillColorExpression","fillOpacityExpression","outlineColorExpression","setPaintProperty","handleSearchClick","handleIndicatorSelect","indicator","isCurrentlySelected","newIndicator","handlePrecinctHover","flex","ref","flexDirection","gap","onChange","target","placeholder","outline","onClick","marginTop","paddingTop","borderTop","checked","htmlFor","marginLeft","borderLeft","overflowY","fontStyle","_c3","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// --- LLM API Setup ---\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component finds and styles specified keywords in a block of text.\nconst InteractiveDescription = ({ text, keywords, colors, onKeywordHover }) => {\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n\n  return (\n    <p style={{ fontSize: '0.95rem', color: '#6c757d', lineHeight: 1.6 }}>\n      {parts.map((part, index) => {\n        const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n        if (originalKeyword) {\n          return (\n            <strong\n              key={index}\n              style={{\n                color: colors[originalKeyword] || '#000',\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                padding: '2px 0',\n                borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n              }}\n              onMouseEnter={() => onKeywordHover(originalKeyword)}\n              onMouseLeave={() => onKeywordHover(null)} // Clear hover on exit\n            >\n              {part}\n            </strong>\n          );\n        }\n        return <React.Fragment key={index}>{part}</React.Fragment>;\n      })}\n    </p>\n  );\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\nconst Legend = ({ title, items }) => {\n  return (\n    <div style={{\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    }}>\n      <h4 style={{ margin: '0 0 0.5rem 0', fontWeight: 'bold' }}>{title}</h4>\n      {items.map((item, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.25rem' }}>\n          <span style={{\n            backgroundColor: item.color,\n            width: '18px',\n            height: '18px',\n            display: 'inline-block',\n            marginRight: '0.5rem',\n            border: '1px solid #ccc'\n          }}></span>\n          <span>{item.label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n// --- END: LEGEND COMPONENT ---\n\n\n// --- START: MAP COMPONENT ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    Employment: {\n      title: 'Employment (Total)',\n      items: [ { color: '#edf8e9', label: '0 - 100' }, { color: '#c7e9c0', label: '101 - 200' }, { color: '#a1d99b', label: '201 - 300' }, { color: '#74c476', label: '301 - 400' }, { color: '#31a354', label: '401 - 500' }, { color: '#006d2c', label: '> 500' } ]\n    },\n    Education: {\n      title: 'Education (Total)',\n      items: [ { color: '#fee5d9', label: '0 - 100' }, { color: '#fcbba1', label: '101 - 200' }, { color: '#fc9272', label: '201 - 300' }, { color: '#fb6a4a', label: '301 - 400' }, { color: '#ef3b2c', label: '401 - 500' }, { color: '#cb181d', label: '> 500' } ]\n    },\n    Income: {\n        title: 'Income (Total)',\n        items: [ { color: '#fcfbfd', label: '0 - 100' }, { color: '#efedf5', label: '101 - 200' }, { color: '#dadaeb', label: '201 - 300' }, { color: '#bcbddc', label: '301 - 400' }, { color: '#9e9ac8', label: '401 - 500' }, { color: '#807dba', label: '501 - 600' }, { color: '#6a51a3', label: '601 - 700' }, { color: '#54278f', label: '701 - 800' }, { color: '#3f007d', label: '> 800' } ]\n    },\n    Occupation: {\n      title: 'Occupation (Total)',\n      items: [ { color: '#f7fbff', label: '0 - 100' }, { color: '#deebf7', label: '101 - 200' }, { color: '#c6dbef', label: '201 - 300' }, { color: '#9ecae1', label: '301 - 400' }, { color: '#6baed6', label: '401 - 500' }, { color: '#4292c6', label: '501 - 600' }, { color: '#2171b5', label: '601 - 700' }, { color: '#08519c', label: '701 - 800' }, { color: '#08306b', label: '> 800' } ]\n    }\n  };\n\n  const indicatorConfig = {\n    Employment: { path: '/data/employment-fb-sa1.geojson', property: 'employment-VIC_Total' },\n    Education: { path: '/data/education-fb-sa1.geojson', property: 'Education-VIC_Total' },\n    Income: { path: '/data/income-fb-sa1.geojson', property: 'Income-VIC1_Total' },\n    Occupation: { path: '/data/occupation-fb-sa1.geojson', property: 'Occupation-VIC_Total' }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'employment', path: '/data/employment-fb-sa1.geojson' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson' },\n        { name: 'pob', path: '/data/POB-fb-sa1.geojson' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson' },\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson' },\n      ];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, { type: 'geojson', data: s.path }));\n\n      const layers = [\n        { id: 'employment-layer', indicatorName: 'Employment', source: 'employment-data-source', property: indicatorConfig.Employment.property, colors: legendData.Employment.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500] },\n        { id: 'education-layer', indicatorName: 'Education', source: 'education-data-source', property: indicatorConfig.Education.property, colors: legendData.Education.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500]  },\n        { id: 'income-layer', indicatorName: 'Income', source: 'income-data-source', property: indicatorConfig.Income.property, colors: legendData.Income.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] },\n        { id: 'occupation-layer', indicatorName: 'Occupation', source: 'occupation-data-source', property: indicatorConfig.Occupation.property, colors: legendData.Occupation.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] }\n      ];\n\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id, type: 'fill', source: layer.source, layout: { visibility: 'none' },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        map.current.on('click', layer.id, (e) => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n            // new maplibregl.Popup()\n            //   .setLngLat(e.lngLat)\n            //   .setHTML(`<div style=\"font-family: sans-serif; padding: 5px; text-align: left;\"><h4 style=\"margin: 0 0 5px 0; font-weight: bold;\">SA1: ${regionName}</h4><strong>${layer.indicatorName}:</strong> ${formattedValue}</div>`)\n            //   .addTo(map.current);\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => { map.current.getCanvas().style.cursor = 'pointer'; });\n        map.current.on('mouseleave', layer.id, () => { map.current.getCanvas().style.cursor = ''; });\n      });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      // --- CHANGE START: DYNAMIC PRECINCT COLORS ---\n      // Build a dynamic 'case' expression for precinct colors.\n      // This matches each precinct name to its color from the PRECINCT_COLORS constant.\n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n          precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC'); // A fallback color\n\n     map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: { 'fill-color': '#f7f7f7ff', 'fill-opacity': 0.15 }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': 'rgba(0, 0, 0, 0.4)', 'line-width': 7, 'line-translate': [2, 2], 'line-blur': 4 }\n      });\n      map.current.addLayer({\n          id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n          paint: { 'line-color': '#0868ac', 'line-width': 2.5, 'line-opacity': 0.9 }\n      });\n\n      map.current.on('click', 'precincts-fill-layer', (e) => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({ type: 'precinct', name: precinctName });\n        setTextHoveredPrecinct(null);\n      });\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n    map.current.fitBounds(bounds, {\n      padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth },\n      duration: 2000, essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function(...args) { clearTimeout(timer); timer = setTimeout(() => { fn.apply(this, args); }, ms); };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n      map.current.fitBounds(bounds, { padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth }, duration: 0 });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['employment-layer', 'education-layer', 'pob-layer', 'income-layer', 'occupation-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '-')}-layer` : null;\n\n    if (map.current.getLayer('base-outline-layer')) {\n        map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false);\n      return;\n    }\n\n    const generateDescription = async () => {\n        setIsDescriptionLoading(true);\n        setDynamicDescription('');\n        const { type, name } = panelFocus;\n        const cacheKey = `${type}_${name}`;\n\n        if (descriptionCache.current[cacheKey]) {\n            setDynamicDescription(descriptionCache.current[cacheKey]);\n            setIsDescriptionLoading(false);\n            return;\n        }\n\n        try {\n            let prompt = '';\n            if (type === 'indicator') {\n                const config = indicatorConfig[name];\n                if (!config || !config.property) {\n                    throw new Error(`Configuration is missing for the \"${name}\" indicator.`);\n                }\n                const response = await fetch(config.path);\n                const geojsonData = await response.json();\n                let minFeature = null, maxFeature = null, sum = 0, count = 0;\n                geojsonData.features.forEach(feature => {\n                    if (feature && feature.properties && feature.properties.hasOwnProperty(config.property)) {\n                        const value = Number(feature.properties[config.property]);\n                        if (!isNaN(value)) {\n                            if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n                            if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n                            sum += value;\n                            count++;\n                        }\n                    }\n                });\n                if (count === 0) { throw new Error(`No valid data found for \"${name}\".`); }\n                const average = (sum / count).toFixed(2);\n                const minValue = Number(minFeature.properties[config.property]);\n                const maxValue = Number(maxFeature.properties[config.property]);\n                const minRegion = minFeature.properties['SA1_CODE21'];\n                const maxRegion = maxFeature.properties['SA1_CODE21'];\n                prompt = `You are a concise data analyst for a public-facing dashboard. Based on the following data for the \"${name}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words). Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\"). Key Statistics: - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion}) - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion}) - Average value across all areas: ${Number(average).toLocaleString()}`;\n            } else if (type === 'precinct') {\n                prompt = `You are a concise urban planning analyst. Write a short, engaging summary (around 60-80 words) about the \"${name}\" precinct within Melbourne's Fishermans Bend. Describe its key vision or main characteristics. If relevant, mention its relationship to the other precincts like Montague, Sandridge, and the Employment Precinct.`;\n            }\n            if (prompt) {\n                const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n                const result = await model.generateContent(prompt);\n                const text = result.response.text();\n                descriptionCache.current[cacheKey] = text;\n                setDynamicDescription(text);\n            }\n        } catch (error) {\n            console.error(`Error generating description for ${name}:`, error);\n            const errorMessage = error.message.includes('429')\n                ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.'\n                : `An error occurred while generating the description: ${error.message}`;\n            setDynamicDescription(errorMessage);\n        } finally {\n            setIsDescriptionLoading(false);\n        }\n    };\n    generateDescription();\n  }, [panelFocus]);\n\n  // --- CHANGE START: TRANSPARENT HIGHLIGHT ON HOVER ---\n  // Update map visual style when a precinct is highlighted from text\n  // --- CHANGE START: DYNAMIC HOVER HIGHLIGHT ---\n  // Update map visual style when a precinct is highlighted from text\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n\n    // Check if a precinct is being hovered from the text panel\n    if (textHoveredPrecinct) {\n      // A precinct is hovered. Dynamically set paint properties.\n\n      // 1. Create a dynamic 'case' expression for the FILL COLOR.\n      // This sets the hovered precinct to its specific color and others to the default.\n      const fillColorExpression = [\n        'case',\n        ['==', ['get', 'name'], textHoveredPrecinct],\n        PRECINCT_COLORS[textHoveredPrecinct], // Use the specific color for the hovered precinct\n        '#0868ac' // Fallback to the default color for all others\n      ];\n\n      // 2. Create a dynamic 'case' expression for the FILL OPACITY.\n      // This makes the hovered precinct more prominent.\n      const fillOpacityExpression = [\n        'case',\n        ['==', ['get', 'name'], textHoveredPrecinct],\n        0.6, // Higher opacity for the hovered precinct\n        0.15 // Default opacity for all others\n      ];\n\n      // 3. Create a dynamic 'case' expression for the OUTLINE COLOR.\n      // This also highlights the border with the specific color.\n       const outlineColorExpression = [\n        'case',\n        ['==', ['get', 'name'], textHoveredPrecinct],\n        PRECINCT_COLORS[textHoveredPrecinct], // Use the specific color for the hovered precinct\n        '#0868ac' // Fallback to the default color for all others\n      ];\n\n      // 4. Apply the new dynamic styles to the map layers.\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', fillColorExpression);\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacityExpression);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', outlineColorExpression);\n\n    } else {\n      // No precinct is hovered. Reset all layers to their default styles.\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', '#0868ac');\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', 0.15);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', '#0868ac');\n    }\n  }, [textHoveredPrecinct, PRECINCT_COLORS]); // Added PRECINCT_COLORS to dependency array\n  // --- CHANGE END ---\n  // --- CHANGE END ---\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {\n    setIndicators(['Employment', 'Education', 'Income', 'Occupation']);\n    setShowIndicators(true);\n  };\n\n  const handleIndicatorSelect = (indicator) => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? { type: 'indicator', name: newIndicator } : null);\n    setTextHoveredPrecinct(null);\n  };\n\n  const handlePrecinctHover = (precinctName) => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return (\n    <div style={{ display: 'flex', width: '100%', height: 'calc(100vh - 78px)' }}>\n      {/* Map container */}\n      <div style={{ position: 'relative', flex: 1 }}>\n        <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n        <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '288px', zIndex: 10 }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', marginBottom: '1rem' }}>I'm interested in ...</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n            <input type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"e.g., 'jobs' or 'housing'\" style={{ padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', outline: 'none' }} />\n            <button onClick={handleSearchClick} style={{ backgroundColor: '#2563EB', color: 'white', fontWeight: 600, padding: '0.5rem 1rem', borderRadius: '0.375rem', border: 'none', cursor: 'pointer' }}>Search</button>\n          </div>\n          {showIndicators && (\n            <div style={{ marginTop: '1rem', paddingTop: '1rem', borderTop: '1px solid #E5E7EB' }}>\n              <h4 style={{ fontWeight: 600, color: '#1F2937', marginBottom: '0.5rem' }}>Suggested Indicators</h4>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                {indicators.map((indicator) => (\n                  <div key={indicator} style={{ display: 'flex', alignItems: 'center' }}>\n                    <input type=\"radio\" id={indicator} name=\"indicator\" checked={selectedIndicator === indicator} onChange={() => handleIndicatorSelect(indicator)} style={{ height: '1rem', width: '1rem' }} />\n                    <label htmlFor={indicator} style={{ marginLeft: '0.75rem', fontSize: '0.875rem', color: '#374151' }}>{indicator}</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        {selectedIndicator && legendData[selectedIndicator] && <Legend title={legendData[selectedIndicator].title} items={legendData[selectedIndicator].items} />}\n      </div>\n      {/* Text Explorer Panel */}\n      <div style={{ width: '320px', backgroundColor: '#f8f9fa', padding: '1.5rem', borderLeft: '1px solid #dee2e6', overflowY: 'auto' }}>\n        {panelFocus ? (\n          <div>\n            <h4 style={{ fontSize: '1.1rem', fontWeight: 600, color: '#495057', marginBottom: '0.75rem' }}>{panelFocus.name}</h4>\n            {isDescriptionLoading ? (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>🤖 Generating AI description...</p>\n            ) : (\n              <InteractiveDescription\n                text={dynamicDescription}\n                keywords={PRECINCT_NAMES}\n                colors={PRECINCT_COLORS}\n                onKeywordHover={handlePrecinctHover}\n              />\n            )}\n          </div>\n        ) : (\n          <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>Select an indicator from the left panel or click on a precinct on the map to see its description.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n// --- END: MAP COMPONENT ---"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}