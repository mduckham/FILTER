{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// --- LLM API Setup ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- Legend Component (Unchanged) ---\nconst Legend = ({\n  title,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 0.5rem 0',\n        fontWeight: 'bold'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: item.color,\n          width: '18px',\n          height: '18px',\n          display: 'inline-block',\n          marginRight: '0.5rem',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Map Component ---\n_c = Legend;\nexport default function Map() {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // State for search and UI\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n\n  // --- MODIFIED: A new state to control the right-hand panel's content ---\n  const [panelFocus, setPanelFocus] = useState(null); // { type: 'indicator' | 'precinct', name: string }\n\n  // State for the LLM description\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n\n  // Define panel widths\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // Data for the Legends and Indicator Configs (Unchanged)\n  const legendData = {/* ... (no changes) ... */};\n  const indicatorConfig = {/* ... (no changes) ... */};\n\n  // --- Main useEffect for Map Initialization ---\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'employment',\n        path: '/data/employment-fb-sa1.geojson'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson'\n      }, {\n        name: 'pob',\n        path: '/data/POB-fb-sa1.geojson'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson'\n      },\n      // --- MODIFIED: Removed promoteId as it's no longer needed for highlighting ---\n      {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson'\n      }];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, {\n        type: 'geojson',\n        data: s.path\n      }));\n      const layers = [{\n        id: 'employment-layer',\n        indicatorName: 'Employment',\n        source: 'employment-data-source',\n        property: indicatorConfig.Employment.property,\n        colors: legendData.Employment.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'education-layer',\n        indicatorName: 'Education',\n        source: 'education-data-source',\n        property: indicatorConfig.Education.property,\n        colors: legendData.Education.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'income-layer',\n        indicatorName: 'Income',\n        source: 'income-data-source',\n        property: indicatorConfig.Income.property,\n        colors: legendData.Income.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }, {\n        id: 'occupation-layer',\n        indicatorName: 'Occupation',\n        source: 'occupation-data-source',\n        property: indicatorConfig.Occupation.property,\n        colors: legendData.Occupation.items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }];\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        // ... (popup and hover logic for indicator layers is unchanged) ...\n      });\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n\n      // --- MODIFIED: Precincts Layer Styling is now static (no selection highlight) ---\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#0868ac',\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': 'rgba(0, 0, 0, 0.4)',\n          'line-width': 3,\n          'line-translate': [2, 2],\n          'line-blur': 2\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#0868ac',\n          'line-width': 2.5,\n          'line-opacity': 0.9\n        }\n      });\n\n      // --- MODIFIED: Click handler for precincts now only updates the text panel focus ---\n      map.current.on('click', 'precincts-fill-layer', e => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n\n        // Set the focus for the right-hand panel to this precinct\n        setPanelFocus({\n          type: 'precinct',\n          name: precinctName\n        });\n      });\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // --- Unchanged useEffects for map bounds and resize ---\n  const adjustMapBounds = () => {/* ... (no changes) ... */};\n  useEffect(() => {/* ... (no changes for resize) ... */}, []);\n\n  // --- useEffect to Toggle Layer Visibility (Unchanged) ---\n  // This is still only driven by `selectedIndicator`\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['employment-layer', 'education-layer', 'pob-layer', 'income-layer', 'occupation-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '-')}-layer` : null;\n    if (map.current.getLayer('base-outline-layer')) {\n      map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // --- MODIFIED: A single useEffect to generate all LLM descriptions ---\n  // --- MODIFIED: A single, more robust useEffect to generate all LLM descriptions ---\n  useEffect(() => {\n    // Clear description if nothing is in focus\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false); // Ensure loading state is also reset\n      return;\n    }\n    const generateDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      const {\n        type,\n        name\n      } = panelFocus;\n      const cacheKey = `${type}_${name}`;\n\n      // 1. Check cache first\n      if (descriptionCache.current[cacheKey]) {\n        setDynamicDescription(descriptionCache.current[cacheKey]);\n        setIsDescriptionLoading(false);\n        return;\n      }\n      try {\n        let prompt = '';\n        // --- Logic for Indicators ---\n        if (type === 'indicator') {\n          const config = indicatorConfig[name];\n\n          // --- FIX: Add a strong guard here. If config is invalid, stop immediately. ---\n          if (!config || !config.property) {\n            console.error(`Invalid or missing configuration for indicator: ${name}`);\n            throw new Error(`Configuration is missing for the \"${name}\" indicator.`);\n          }\n          const response = await fetch(config.path);\n          const geojsonData = await response.json();\n          let minFeature = null,\n            maxFeature = null,\n            sum = 0,\n            count = 0;\n          geojsonData.features.forEach(feature => {\n            // Add a check to ensure the feature and its properties are valid\n            if (feature && feature.properties && feature.properties.hasOwnProperty(config.property)) {\n              const value = Number(feature.properties[config.property]);\n              if (!isNaN(value)) {\n                if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n                if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n                sum += value;\n                count++;\n              }\n            }\n          });\n\n          // This check prevents accessing .properties of a null object later\n          if (count === 0) {\n            throw new Error(`No valid data found for the \"${name}\" indicator.`);\n          }\n          const average = (sum / count).toFixed(2);\n          const minValue = Number(minFeature.properties[config.property]);\n          const maxValue = Number(maxFeature.properties[config.property]);\n          const minRegion = minFeature.properties['SA1_CODE21'];\n          const maxRegion = maxFeature.properties['SA1_CODE21'];\n          prompt = `You are a concise data analyst for a public-facing dashboard. Based on the following data for the \"${name}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words). Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\"). Key Statistics: - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion}) - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion}) - Average value across all areas: ${Number(average).toLocaleString()}`;\n\n          // --- Logic for Precincts ---\n        } else if (type === 'precinct') {\n          prompt = `You are a concise urban planning analyst for a public-facing dashboard. Write a short, engaging summary (around 50-70 words) about the \"${name}\" urban renewal precinct in Melbourne. Describe its key vision, purpose, or main characteristics (e.g., focus on innovation, residential development, employment hub, etc.).`;\n        }\n        if (prompt) {\n          const model = genAI.getGenerativeModel({\n            model: \"gemini-1.5-flash-latest\"\n          });\n          const result = await model.generateContent(prompt);\n          const text = result.response.text();\n          descriptionCache.current[cacheKey] = text;\n          setDynamicDescription(text);\n        }\n      } catch (error) {\n        console.error(`Error generating description for ${name}:`, error);\n        const errorMessage = error.message.includes('429') ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.' : `An error occurred while generating the description: ${error.message}`;\n        setDynamicDescription(errorMessage);\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generateDescription();\n  }, [panelFocus]); // Dependency array is correct\n\n  // --- MODIFIED: UI Handlers now set both indicator visibility and panel focus ---\n  const handleSearchClick = () => {\n    setIndicators(['Employment', 'Education', 'Income', 'Occupation']);\n    setShowIndicators(true);\n  };\n  const handleIndicatorSelect = indicator => {\n    // This function now controls two separate states:\n    // 1. `selectedIndicator` for the map visualization\n    // 2. `panelFocus` for the right-hand text panel\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? {\n      type: 'indicator',\n      name: newIndicator\n    } : null);\n  };\n\n  // --- MODIFIED: Component Render to use `panelFocus` for the text panel ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem',\n          backgroundColor: 'white',\n          padding: '1rem',\n          borderRadius: '0.5rem',\n          boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n          width: '288px',\n          zIndex: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.125rem',\n            fontWeight: 'bold',\n            marginBottom: '1rem'\n          },\n          children: \"I'm interested in ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value),\n            placeholder: \"e.g., 'jobs' or 'housing'\",\n            style: {\n              padding: '0.5rem',\n              border: '1px solid #D1D5DB',\n              borderRadius: '0.375rem',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearchClick,\n            style: {\n              backgroundColor: '#2563EB',\n              color: 'white',\n              fontWeight: 600,\n              padding: '0.5rem 1rem',\n              borderRadius: '0.375rem',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), showIndicators && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem',\n            paddingTop: '1rem',\n            borderTop: '1px solid #E5E7EB'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 600,\n              color: '#1F2937',\n              marginBottom: '0.5rem'\n            },\n            children: \"Suggested Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '0.5rem'\n            },\n            children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: indicator,\n                name: \"indicator\",\n                checked: selectedIndicator === indicator,\n                onChange: () => handleIndicatorSelect(indicator),\n                style: {\n                  height: '1rem',\n                  width: '1rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: indicator,\n                style: {\n                  marginLeft: '0.75rem',\n                  fontSize: '0.875rem',\n                  color: '#374151'\n                },\n                children: indicator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this)]\n            }, indicator, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), selectedIndicator && legendData[selectedIndicator] && /*#__PURE__*/_jsxDEV(Legend, {\n        title: legendData[selectedIndicator].title,\n        items: legendData[selectedIndicator].items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        backgroundColor: '#f8f9fa',\n        padding: '1.5rem',\n        borderLeft: '1px solid #dee2e6',\n        overflowY: 'auto'\n      },\n      children: panelFocus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: 600,\n            color: '#495057',\n            marginBottom: '0.75rem'\n          },\n          children: panelFocus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), isDescriptionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            fontStyle: 'italic'\n          },\n          children: \"\\uD83E\\uDD16 Generating AI description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            lineHeight: 1.6\n          },\n          children: dynamicDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.95rem',\n          color: '#6c757d',\n          fontStyle: 'italic'\n        },\n        children: \"Select an indicator from the left panel or click on a precinct on the map to see its description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"x7T0fm5os4Cpfpm+o/I+wPlKoms=\");\n_c2 = Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","maplibregl","GoogleGenerativeAI","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","Legend","title","items","style","position","bottom","right","backgroundColor","padding","borderRadius","boxShadow","zIndex","width","children","margin","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","display","alignItems","marginBottom","color","height","marginRight","border","label","_c","Map","_s","mapContainer","descriptionCache","searchText","setSearchText","indicators","setIndicators","selectedIndicator","setSelectedIndicator","showIndicators","setShowIndicators","panelFocus","setPanelFocus","dynamicDescription","setDynamicDescription","isDescriptionLoading","setIsDescriptionLoading","leftPanelWidth","rightPanelWidth","legendData","indicatorConfig","current","container","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","on","e","console","error","message","adjustMapBounds","sources","name","path","forEach","s","addSource","type","data","layers","id","indicatorName","source","property","Employment","colors","i","stops","Education","Income","Occupation","layer","colorStops","flatMap","stop","length","addLayer","layout","visibility","paint","feature","features","properties","precinctName","getCanvas","cursor","remove","isStyleLoaded","allLayerIds","selectedLayerId","toLowerCase","replace","getLayer","setLayoutProperty","layerId","generateDescription","cacheKey","prompt","config","Error","response","fetch","geojsonData","json","minFeature","maxFeature","sum","count","hasOwnProperty","value","Number","isNaN","average","toFixed","minValue","maxValue","minRegion","maxRegion","toLocaleString","model","getGenerativeModel","result","generateContent","text","errorMessage","includes","handleSearchClick","handleIndicatorSelect","indicator","isCurrentlySelected","newIndicator","flex","ref","top","left","fontSize","flexDirection","gap","onChange","target","placeholder","outline","onClick","marginTop","paddingTop","borderTop","checked","htmlFor","marginLeft","borderLeft","overflowY","fontStyle","lineHeight","_c2","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// --- LLM API Setup ---\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- Legend Component (Unchanged) ---\nconst Legend = ({ title, items }) => {\n  return (\n    <div style={{\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '180px'\n    }}>\n      <h4 style={{ margin: '0 0 0.5rem 0', fontWeight: 'bold' }}>{title}</h4>\n      {items.map((item, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.25rem' }}>\n          <span style={{\n            backgroundColor: item.color,\n            width: '18px',\n            height: '18px',\n            display: 'inline-block',\n            marginRight: '0.5rem',\n            border: '1px solid #ccc'\n          }}></span>\n          <span>{item.label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// --- Map Component ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // State for search and UI\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  \n  // --- MODIFIED: A new state to control the right-hand panel's content ---\n  const [panelFocus, setPanelFocus] = useState(null); // { type: 'indicator' | 'precinct', name: string }\n\n  // State for the LLM description\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n\n  // Define panel widths\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // Data for the Legends and Indicator Configs (Unchanged)\n  const legendData = { /* ... (no changes) ... */ };\n  const indicatorConfig = { /* ... (no changes) ... */ };\n\n  // --- Main useEffect for Map Initialization ---\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'employment', path: '/data/employment-fb-sa1.geojson' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson' },\n        { name: 'pob', path: '/data/POB-fb-sa1.geojson' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson' },\n        // --- MODIFIED: Removed promoteId as it's no longer needed for highlighting ---\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson' },\n      ];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, { type: 'geojson', data: s.path }));\n      \n      const layers = [\n        { id: 'employment-layer', indicatorName: 'Employment', source: 'employment-data-source', property: indicatorConfig.Employment.property, colors: legendData.Employment.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500] },\n        { id: 'education-layer', indicatorName: 'Education', source: 'education-data-source', property: indicatorConfig.Education.property, colors: legendData.Education.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500]  },\n        { id: 'income-layer', indicatorName: 'Income', source: 'income-data-source', property: indicatorConfig.Income.property, colors: legendData.Income.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] },\n        { id: 'occupation-layer', indicatorName: 'Occupation', source: 'occupation-data-source', property: indicatorConfig.Occupation.property, colors: legendData.Occupation.items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] }\n      ];\n\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id, type: 'fill', source: layer.source, layout: { visibility: 'none' },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        // ... (popup and hover logic for indicator layers is unchanged) ...\n      });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      // --- MODIFIED: Precincts Layer Styling is now static (no selection highlight) ---\n      map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: {\n            'fill-color': '#0868ac',\n            'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': 'rgba(0, 0, 0, 0.4)', 'line-width': 3, 'line-translate': [2, 2], 'line-blur': 2 }\n      });\n      map.current.addLayer({\n          id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n          paint: { 'line-color': '#0868ac', 'line-width': 2.5, 'line-opacity': 0.9 }\n      });\n\n      // --- MODIFIED: Click handler for precincts now only updates the text panel focus ---\n      map.current.on('click', 'precincts-fill-layer', (e) => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n\n        const precinctName = feature.properties.name;\n        \n        // Set the focus for the right-hand panel to this precinct\n        setPanelFocus({ type: 'precinct', name: precinctName });\n      });\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  // --- Unchanged useEffects for map bounds and resize ---\n  const adjustMapBounds = () => { /* ... (no changes) ... */ };\n  useEffect(() => { /* ... (no changes for resize) ... */ }, []);\n\n  // --- useEffect to Toggle Layer Visibility (Unchanged) ---\n  // This is still only driven by `selectedIndicator`\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['employment-layer', 'education-layer', 'pob-layer', 'income-layer', 'occupation-layer'];\n    const selectedLayerId = selectedIndicator ? `${selectedIndicator.toLowerCase().replace(/ /g, '-')}-layer` : null;\n    \n    if (map.current.getLayer('base-outline-layer')) {\n        map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n  \n  // --- MODIFIED: A single useEffect to generate all LLM descriptions ---\n// --- MODIFIED: A single, more robust useEffect to generate all LLM descriptions ---\n  useEffect(() => {\n    // Clear description if nothing is in focus\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false); // Ensure loading state is also reset\n      return;\n    }\n\n    const generateDescription = async () => {\n        setIsDescriptionLoading(true);\n        setDynamicDescription('');\n\n        const { type, name } = panelFocus;\n        const cacheKey = `${type}_${name}`;\n\n        // 1. Check cache first\n        if (descriptionCache.current[cacheKey]) {\n            setDynamicDescription(descriptionCache.current[cacheKey]);\n            setIsDescriptionLoading(false);\n            return;\n        }\n        \n        try {\n            let prompt = '';\n            // --- Logic for Indicators ---\n            if (type === 'indicator') {\n                const config = indicatorConfig[name];\n\n                // --- FIX: Add a strong guard here. If config is invalid, stop immediately. ---\n                if (!config || !config.property) {\n                    console.error(`Invalid or missing configuration for indicator: ${name}`);\n                    throw new Error(`Configuration is missing for the \"${name}\" indicator.`);\n                }\n\n                const response = await fetch(config.path);\n                const geojsonData = await response.json();\n                let minFeature = null, maxFeature = null, sum = 0, count = 0;\n\n                geojsonData.features.forEach(feature => {\n                    // Add a check to ensure the feature and its properties are valid\n                    if (feature && feature.properties && feature.properties.hasOwnProperty(config.property)) {\n                        const value = Number(feature.properties[config.property]);\n                        if (!isNaN(value)) {\n                            if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n                            if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n                            sum += value;\n                            count++;\n                        }\n                    }\n                });\n                \n                // This check prevents accessing .properties of a null object later\n                if (count === 0) {\n                    throw new Error(`No valid data found for the \"${name}\" indicator.`);\n                }\n\n                const average = (sum / count).toFixed(2);\n                const minValue = Number(minFeature.properties[config.property]);\n                const maxValue = Number(maxFeature.properties[config.property]);\n                const minRegion = minFeature.properties['SA1_CODE21'];\n                const maxRegion = maxFeature.properties['SA1_CODE21'];\n                prompt = `You are a concise data analyst for a public-facing dashboard. Based on the following data for the \"${name}\" indicator in Melbourne's inner suburbs, write a short, engaging summary (around 50-70 words). Do not just list the numbers; provide a brief insight into what the data shows (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\"). Key Statistics: - Highest value: ${maxValue.toLocaleString()} (in SA1 area ${maxRegion}) - Lowest value: ${minValue.toLocaleString()} (in SA1 area ${minRegion}) - Average value across all areas: ${Number(average).toLocaleString()}`;\n            \n            // --- Logic for Precincts ---\n            } else if (type === 'precinct') {\n                prompt = `You are a concise urban planning analyst for a public-facing dashboard. Write a short, engaging summary (around 50-70 words) about the \"${name}\" urban renewal precinct in Melbourne. Describe its key vision, purpose, or main characteristics (e.g., focus on innovation, residential development, employment hub, etc.).`;\n            }\n\n            if (prompt) {\n                const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n                const result = await model.generateContent(prompt);\n                const text = result.response.text();\n                descriptionCache.current[cacheKey] = text;\n                setDynamicDescription(text);\n            }\n        } catch (error) {\n            console.error(`Error generating description for ${name}:`, error);\n            const errorMessage = error.message.includes('429') \n                ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.'\n                : `An error occurred while generating the description: ${error.message}`;\n            setDynamicDescription(errorMessage);\n        } finally {\n            setIsDescriptionLoading(false);\n        }\n    };\n\n    generateDescription();\n  }, [panelFocus]); // Dependency array is correct\n\n\n  // --- MODIFIED: UI Handlers now set both indicator visibility and panel focus ---\n  const handleSearchClick = () => {\n    setIndicators(['Employment', 'Education', 'Income', 'Occupation']);\n    setShowIndicators(true);\n  };\n\n  const handleIndicatorSelect = (indicator) => {\n    // This function now controls two separate states:\n    // 1. `selectedIndicator` for the map visualization\n    // 2. `panelFocus` for the right-hand text panel\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? { type: 'indicator', name: newIndicator } : null);\n  };\n\n  // --- MODIFIED: Component Render to use `panelFocus` for the text panel ---\n  return (\n    <div style={{ display: 'flex', width: '100%', height: 'calc(100vh - 78px)' }}>\n      {/* Map container */}\n      <div style={{ position: 'relative', flex: 1 }}>\n        <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n        <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '288px', zIndex: 10 }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', marginBottom: '1rem' }}>I'm interested in ...</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n            <input type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"e.g., 'jobs' or 'housing'\" style={{ padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', outline: 'none' }} />\n            <button onClick={handleSearchClick} style={{ backgroundColor: '#2563EB', color: 'white', fontWeight: 600, padding: '0.5rem 1rem', borderRadius: '0.375rem', border: 'none', cursor: 'pointer' }}>Search</button>\n          </div>\n          {showIndicators && (\n            <div style={{ marginTop: '1rem', paddingTop: '1rem', borderTop: '1px solid #E5E7EB' }}>\n              <h4 style={{ fontWeight: 600, color: '#1F2937', marginBottom: '0.5rem' }}>Suggested Indicators</h4>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                {indicators.map((indicator) => (\n                  <div key={indicator} style={{ display: 'flex', alignItems: 'center' }}>\n                    <input type=\"radio\" id={indicator} name=\"indicator\" checked={selectedIndicator === indicator} onChange={() => handleIndicatorSelect(indicator)} style={{ height: '1rem', width: '1rem' }} />\n                    <label htmlFor={indicator} style={{ marginLeft: '0.75rem', fontSize: '0.875rem', color: '#374151' }}>{indicator}</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        {selectedIndicator && legendData[selectedIndicator] && <Legend title={legendData[selectedIndicator].title} items={legendData[selectedIndicator].items} />}\n      </div>\n      {/* Text Explorer Panel */}\n      <div style={{ width: '320px', backgroundColor: '#f8f9fa', padding: '1.5rem', borderLeft: '1px solid #dee2e6', overflowY: 'auto' }}>\n        {panelFocus ? (\n          <div>\n            <h4 style={{ fontSize: '1.1rem', fontWeight: 600, color: '#495057', marginBottom: '0.75rem' }}>{panelFocus.name}</h4>\n            {isDescriptionLoading ? (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>🤖 Generating AI description...</p>\n            ) : (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', lineHeight: 1.6 }}>{dynamicDescription}</p>\n            )}\n          </div>\n        ) : (\n          <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>Select an indicator from the left panel or click on a precinct on the map to see its description.</p>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}