{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport indicatorMetadata from './indicatorMetadata'; // Import the new metadata\n\n// --- LLM API Setup ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- HELPER FUNCTION ---\n// Sanitizes a string to be used as a DOM/Mapbox ID\nconst sanitizeForId = name => {\n  return name.toLowerCase().replace(/[^a-z0-9\\s-]/g, '') // Remove special characters except hyphens\n  .replace(/\\s+/g, '-'); // Replace spaces with hyphens\n};\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component finds and styles specified keywords in a block of text.\nconst InteractiveDescription = ({\n  text,\n  keywords,\n  colors,\n  onKeywordHover\n}) => {\n  _s();\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      fontSize: '0.95rem',\n      color: '#6c757d',\n      lineHeight: 1.6\n    },\n    children: parts.map((part, index) => {\n      const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n      if (originalKeyword) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: colors[originalKeyword] || '#000',\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            padding: '2px 0',\n            borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n          },\n          onMouseEnter: () => onKeywordHover(originalKeyword),\n          onMouseLeave: () => onKeywordHover(null) // Clear hover on exit\n          ,\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\n_s(InteractiveDescription, \"kB+E/0zygT+E0toaiTuITJ43hpU=\");\n_c = InteractiveDescription;\nconst Legend = ({\n  title,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '240px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 0.5rem 0',\n        fontWeight: 'bold'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: item.color,\n          width: '18px',\n          height: '18px',\n          display: 'inline-block',\n          marginRight: '0.5rem',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n// --- END: LEGEND COMPONENT ---\n\n// --- START: MAP COMPONENT ---\n_c2 = Legend;\nexport default function Map() {\n  _s2();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS ---\n  // Updated keys to match indicatorMetadata.js\n  const legendData = {\n    'Diversity of education qualification': {\n      title: 'Diversity of Education Qualification',\n      items: [{\n        color: '#fee5d9',\n        label: '0 - 100'\n      }, {\n        color: '#fcbba1',\n        label: '101 - 200'\n      }, {\n        color: '#fc9272',\n        label: '201 - 300'\n      }, {\n        color: '#fb6a4a',\n        label: '301 - 400'\n      }, {\n        color: '#ef3b2c',\n        label: '401 - 500'\n      }, {\n        color: '#cb181d',\n        label: '> 500'\n      }]\n    },\n    'Diversity of income (residents)': {\n      title: 'Diversity of Income (Residents)',\n      items: [{\n        color: '#fcfbfd',\n        label: '0 - 100'\n      }, {\n        color: '#efedf5',\n        label: '101 - 200'\n      }, {\n        color: '#dadaeb',\n        label: '201 - 300'\n      }, {\n        color: '#bcbddc',\n        label: '301 - 400'\n      }, {\n        color: '#9e9ac8',\n        label: '401 - 500'\n      }, {\n        color: '#807dba',\n        label: '501 - 600'\n      }, {\n        color: '#6a51a3',\n        label: '601 - 700'\n      }, {\n        color: '#54278f',\n        label: '701 - 800'\n      }, {\n        color: '#3f007d',\n        label: '> 800'\n      }]\n    },\n    'Diversity of occupations (residents)': {\n      title: 'Diversity of Occupations (Residents)',\n      items: [{\n        color: '#f7fbff',\n        label: '0 - 100'\n      }, {\n        color: '#deebf7',\n        label: '101 - 200'\n      }, {\n        color: '#c6dbef',\n        label: '201 - 300'\n      }, {\n        color: '#9ecae1',\n        label: '301 - 400'\n      }, {\n        color: '#6baed6',\n        label: '401 - 500'\n      }, {\n        color: '#4292c6',\n        label: '501 - 600'\n      }, {\n        color: '#2171b5',\n        label: '601 - 700'\n      }, {\n        color: '#08519c',\n        label: '701 - 800'\n      }, {\n        color: '#08306b',\n        label: '> 800'\n      }]\n    }\n  };\n  const indicatorConfig = {\n    'Diversity of education qualification': {\n      path: '/data/education-fb-sa1.geojson',\n      property: 'Education-VIC_Total'\n    },\n    'Diversity of income (residents)': {\n      path: '/data/income-fb-sa1.geojson',\n      property: 'Income-VIC1_Total'\n    },\n    'Diversity of occupations (residents)': {\n      path: '/data/occupation-fb-sa1.geojson',\n      property: 'Occupation-VIC_Total'\n    }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson'\n      }, {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson'\n      }];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, {\n        type: 'geojson',\n        data: s.path\n      }));\n      const layers = [{\n        id: `${sanitizeForId('Diversity of education qualification')}-layer`,\n        indicatorName: 'Diversity of education qualification',\n        source: 'education-data-source',\n        property: indicatorConfig['Diversity of education qualification'].property,\n        colors: legendData['Diversity of education qualification'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: `${sanitizeForId('Diversity of income (residents)')}-layer`,\n        indicatorName: 'Diversity of income (residents)',\n        source: 'income-data-source',\n        property: indicatorConfig['Diversity of income (residents)'].property,\n        colors: legendData['Diversity of income (residents)'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }, {\n        id: `${sanitizeForId('Diversity of occupations (residents)')}-layer`,\n        indicatorName: 'Diversity of occupations (residents)',\n        source: 'occupation-data-source',\n        property: indicatorConfig['Diversity of occupations (residents)'].property,\n        colors: legendData['Diversity of occupations (residents)'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }];\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        map.current.on('click', layer.id, e => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => {\n          map.current.getCanvas().style.cursor = 'pointer';\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          map.current.getCanvas().style.cursor = '';\n        });\n      });\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n        precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC');\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#ffffffff',\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': 'rgba(0, 0, 0, 0.4)',\n          'line-width': 7,\n          'line-translate': [2, 2],\n          'line-blur': 4\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#0868ac',\n          'line-width': 2.5,\n          'line-opacity': 0.9\n        }\n      });\n      map.current.on('click', 'precincts-fill-layer', e => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({\n          type: 'precinct',\n          name: precinctName\n        });\n        setTextHoveredPrecinct(null);\n      });\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [[144.890, -37.850], [144.948, -37.816]];\n    map.current.fitBounds(bounds, {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: leftPanelWidth,\n        right: rightPanelWidth\n      },\n      duration: 2000,\n      essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, ms);\n      };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [[144.890, -37.850], [144.948, -37.816]];\n      map.current.fitBounds(bounds, {\n        padding: {\n          top: 20,\n          bottom: 20,\n          left: leftPanelWidth,\n          right: rightPanelWidth\n        },\n        duration: 0\n      });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = Object.keys(indicatorConfig).map(name => `${sanitizeForId(name)}-layer`);\n    const selectedLayerId = selectedIndicator ? `${sanitizeForId(selectedIndicator)}-layer` : null;\n    if (map.current.getLayer('base-outline-layer')) {\n      map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false);\n      return;\n    }\n    const generateDescription = async () => {\n      setIsDescriptionLoading(true);\n      setDynamicDescription('');\n      const {\n        type,\n        name\n      } = panelFocus;\n      const cacheKey = `${type}_${name}`;\n      if (descriptionCache.current[cacheKey]) {\n        setDynamicDescription(descriptionCache.current[cacheKey]);\n        setIsDescriptionLoading(false);\n        return;\n      }\n      try {\n        let prompt = '';\n        if (type === 'indicator') {\n          const config = indicatorConfig[name];\n          const metadata = indicatorMetadata[name];\n          if (!config || !config.property || !metadata) {\n            throw new Error(`Configuration or metadata is missing for the \"${name}\" indicator.`);\n          }\n          const response = await fetch(config.path);\n          const geojsonData = await response.json();\n          let minFeature = null,\n            maxFeature = null,\n            sum = 0,\n            count = 0;\n          geojsonData.features.forEach(feature => {\n            if (feature && feature.properties && feature.properties.hasOwnProperty(config.property)) {\n              const value = Number(feature.properties[config.property]);\n              if (!isNaN(value)) {\n                if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n                if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n                sum += value;\n                count++;\n              }\n            }\n          });\n          if (count === 0) {\n            throw new Error(`No valid data found for \"${name}\".`);\n          }\n          const average = (sum / count).toFixed(2);\n          const minValue = Number(minFeature.properties[config.property]);\n          const maxValue = Number(maxFeature.properties[config.property]);\n          const minRegion = minFeature.properties['SA1_CODE21'];\n          const maxRegion = maxFeature.properties['SA1_CODE21'];\n          prompt = `You are a concise urban data analyst for a public-facing dashboard about Melbourne's Fishermans Bend.\n                Synthesize the following information into an engaging, easy-to-understand summary of 70-100 words.\n                Your goal is to explain what the \"${name}\" indicator means and what the data shows.\n                \n                Indicator Context:\n                - Fishermans Bend Goal: ${metadata[\"FB's goals\"]}\n                - How it's measured: ${metadata[\"Note for measurement\"]}\n\n                Key Statistics for Fishermans Bend:\n                - Highest value: ${maxValue.toLocaleString()} (in area ${maxRegion})\n                - Lowest value: ${minValue.toLocaleString()} (in area ${minRegion})\n                - Average value: ${Number(average).toLocaleString()}\n\n                Combine these points into a short narrative. Start by explaining the indicator's relevance to the area's goals, then describe the observed range and what it implies (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\").`;\n        } else if (type === 'precinct') {\n          prompt = `You are a concise urban planning analyst for a public-facing dashboard about Melbourne's Fishermans Bend. \n                Write an engaging summary of 70-100 words about the \"${name}\" precinct. \n                Describe its key vision, main characteristics, or planned features. \n                If relevant, mention its relationship to the other precincts like Montague, Sandridge, Lorimer, and the Employment Precinct.`;\n        }\n        if (prompt) {\n          const model = genAI.getGenerativeModel({\n            model: \"gemini-1.5-flash-latest\"\n          });\n          const result = await model.generateContent(prompt);\n          const text = result.response.text();\n          descriptionCache.current[cacheKey] = text;\n          setDynamicDescription(text);\n        }\n      } catch (error) {\n        console.error(`Error generating description for ${name}:`, error);\n        const errorMessage = error.message.includes('429') ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.' : `An error occurred while generating the description: ${error.message}`;\n        setDynamicDescription(errorMessage);\n      } finally {\n        setIsDescriptionLoading(false);\n      }\n    };\n    generateDescription();\n  }, [panelFocus]);\n\n  // Update map visual style when a precinct is highlighted from text\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    if (textHoveredPrecinct) {\n      const fillColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#ffffffff'];\n      const fillOpacityExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], 0.6, 0.15];\n      const outlineColorExpression = ['case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#0868ac'];\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', fillColorExpression);\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacityExpression);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', outlineColorExpression);\n    } else {\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', '#ffffffff');\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', 0.15);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', '#0868ac');\n    }\n  }, [textHoveredPrecinct, PRECINCT_COLORS]);\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {\n    setIndicators(Object.keys(indicatorMetadata)); // Use keys from the imported metadata\n    setShowIndicators(true);\n  };\n  const handleIndicatorSelect = indicator => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? {\n      type: 'indicator',\n      name: newIndicator\n    } : null);\n    setTextHoveredPrecinct(null);\n  };\n  const handlePrecinctHover = precinctName => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem',\n          backgroundColor: 'white',\n          padding: '1rem',\n          borderRadius: '0.5rem',\n          boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n          width: '288px',\n          zIndex: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.125rem',\n            fontWeight: 'bold',\n            marginBottom: '1rem'\n          },\n          children: \"I'm interested in ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value),\n            placeholder: \"e.g., 'jobs' or 'housing'\",\n            style: {\n              padding: '0.5rem',\n              border: '1px solid #D1D5DB',\n              borderRadius: '0.375rem',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearchClick,\n            style: {\n              backgroundColor: '#2563EB',\n              color: 'white',\n              fontWeight: 600,\n              padding: '0.5rem 1rem',\n              borderRadius: '0.375rem',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), showIndicators && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem',\n            paddingTop: '1rem',\n            borderTop: '1px solid #E5E7EB'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontWeight: 600,\n              color: '#1F2937',\n              marginBottom: '0.5rem'\n            },\n            children: \"Suggested Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '0.5rem'\n            },\n            children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: sanitizeForId(indicator),\n                name: \"indicator\",\n                checked: selectedIndicator === indicator,\n                onChange: () => handleIndicatorSelect(indicator),\n                style: {\n                  height: '1rem',\n                  width: '1rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: sanitizeForId(indicator),\n                style: {\n                  marginLeft: '0.75rem',\n                  fontSize: '0.875rem',\n                  color: '#374151'\n                },\n                children: indicator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this)]\n            }, indicator, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), selectedIndicator && legendData[selectedIndicator] && /*#__PURE__*/_jsxDEV(Legend, {\n        title: legendData[selectedIndicator].title,\n        items: legendData[selectedIndicator].items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        backgroundColor: '#f8f9fa',\n        padding: '1.5rem',\n        borderLeft: '1px solid #dee2e6',\n        overflowY: 'auto'\n      },\n      children: panelFocus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: 600,\n            color: '#495057',\n            marginBottom: '0.75rem'\n          },\n          children: panelFocus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), isDescriptionLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#6c757d',\n            fontStyle: 'italic'\n          },\n          children: \"\\uD83E\\uDD16 Generating AI description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(InteractiveDescription, {\n          text: dynamicDescription,\n          keywords: PRECINCT_NAMES,\n          colors: PRECINCT_COLORS,\n          onKeywordHover: handlePrecinctHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.95rem',\n          color: '#6c757d',\n          fontStyle: 'italic'\n        },\n        children: \"Select an indicator from the left panel or click on a precinct on the map to see its description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n// --- END: MAP COMPONENT ---\n_s2(Map, \"WkFYB2rKJ4hXCyci5cfQJXiykAY=\");\n_c3 = Map;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InteractiveDescription\");\n$RefreshReg$(_c2, \"Legend\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","maplibregl","GoogleGenerativeAI","indicatorMetadata","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","sanitizeForId","name","toLowerCase","replace","InteractiveDescription","text","keywords","colors","onKeywordHover","_s","parts","length","regex","RegExp","join","split","filter","part","style","fontSize","color","lineHeight","children","map","index","originalKeyword","find","kw","cursor","fontWeight","padding","borderBottom","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","Legend","title","items","position","bottom","right","backgroundColor","borderRadius","boxShadow","zIndex","width","margin","item","display","alignItems","marginBottom","height","marginRight","border","label","_c2","Map","_s2","mapContainer","descriptionCache","PRECINCT_NAMES","PRECINCT_COLORS","searchText","setSearchText","indicators","setIndicators","selectedIndicator","setSelectedIndicator","showIndicators","setShowIndicators","panelFocus","setPanelFocus","dynamicDescription","setDynamicDescription","isDescriptionLoading","setIsDescriptionLoading","textHoveredPrecinct","setTextHoveredPrecinct","leftPanelWidth","rightPanelWidth","legendData","indicatorConfig","path","property","current","container","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","on","e","console","error","message","adjustMapBounds","sources","forEach","s","addSource","type","data","layers","id","indicatorName","source","i","stops","layer","colorStops","flatMap","stop","addLayer","layout","visibility","paint","feature","features","regionName","properties","value","formattedValue","isNaN","Number","toLocaleString","getCanvas","precinctColorExpression","push","precinctName","remove","bounds","fitBounds","top","left","duration","essential","debounce","fn","ms","timer","args","clearTimeout","setTimeout","apply","debouncedAdjustBounds","debouncedResizeListener","window","addEventListener","removeEventListener","isStyleLoaded","allLayerIds","Object","keys","selectedLayerId","getLayer","setLayoutProperty","layerId","generateDescription","cacheKey","prompt","config","metadata","Error","response","fetch","geojsonData","json","minFeature","maxFeature","sum","count","hasOwnProperty","average","toFixed","minValue","maxValue","minRegion","maxRegion","model","getGenerativeModel","result","generateContent","errorMessage","includes","fillColorExpression","fillOpacityExpression","outlineColorExpression","setPaintProperty","handleSearchClick","handleIndicatorSelect","indicator","isCurrentlySelected","newIndicator","handlePrecinctHover","flex","ref","flexDirection","gap","onChange","target","placeholder","outline","onClick","marginTop","paddingTop","borderTop","checked","htmlFor","marginLeft","borderLeft","overflowY","fontStyle","_c3","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport indicatorMetadata from './indicatorMetadata'; // Import the new metadata\n\n// --- LLM API Setup ---\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\n// --- HELPER FUNCTION ---\n// Sanitizes a string to be used as a DOM/Mapbox ID\nconst sanitizeForId = (name) => {\n    return name.toLowerCase()\n               .replace(/[^a-z0-9\\s-]/g, '') // Remove special characters except hyphens\n               .replace(/\\s+/g, '-');        // Replace spaces with hyphens\n};\n\n\n// --- START: INTERACTIVE DESCRIPTION COMPONENT ---\n// This component finds and styles specified keywords in a block of text.\nconst InteractiveDescription = ({ text, keywords, colors, onKeywordHover }) => {\n  const parts = useMemo(() => {\n    if (!text || !keywords.length) {\n      return [text];\n    }\n    const regex = new RegExp(`(${keywords.join('|')})`, 'gi');\n    return text.split(regex).filter(part => part !== '');\n  }, [text, keywords]);\n\n  return (\n    <p style={{ fontSize: '0.95rem', color: '#6c757d', lineHeight: 1.6 }}>\n      {parts.map((part, index) => {\n        const originalKeyword = keywords.find(kw => kw.toLowerCase() === part.toLowerCase());\n        if (originalKeyword) {\n          return (\n            <strong\n              key={index}\n              style={{\n                color: colors[originalKeyword] || '#000',\n                cursor: 'pointer',\n                fontWeight: 'bold',\n                padding: '2px 0',\n                borderBottom: `2px solid ${colors[originalKeyword] || '#000'}`\n              }}\n              onMouseEnter={() => onKeywordHover(originalKeyword)}\n              onMouseLeave={() => onKeywordHover(null)} // Clear hover on exit\n            >\n              {part}\n            </strong>\n          );\n        }\n        return <React.Fragment key={index}>{part}</React.Fragment>;\n      })}\n    </p>\n  );\n};\n// --- END: INTERACTIVE DESCRIPTION COMPONENT ---\n\n// --- START: LEGEND COMPONENT ---\nconst Legend = ({ title, items }) => {\n  return (\n    <div style={{\n      position: 'absolute',\n      bottom: '1rem',\n      right: '0rem',\n      backgroundColor: 'white',\n      padding: '1rem',\n      borderRadius: '0.5rem',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n      zIndex: 10,\n      width: '240px'\n    }}>\n      <h4 style={{ margin: '0 0 0.5rem 0', fontWeight: 'bold' }}>{title}</h4>\n      {items.map((item, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '0.25rem' }}>\n          <span style={{\n            backgroundColor: item.color,\n            width: '18px',\n            height: '18px',\n            display: 'inline-block',\n            marginRight: '0.5rem',\n            border: '1px solid #ccc'\n          }}></span>\n          <span>{item.label}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n// --- END: LEGEND COMPONENT ---\n\n\n// --- START: MAP COMPONENT ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const descriptionCache = useRef({});\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [searchText, setSearchText] = useState('');\n  const [indicators, setIndicators] = useState([]);\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [showIndicators, setShowIndicators] = useState(false);\n  const [panelFocus, setPanelFocus] = useState(null);\n  const [dynamicDescription, setDynamicDescription] = useState('');\n  const [isDescriptionLoading, setIsDescriptionLoading] = useState(false);\n  const [textHoveredPrecinct, setTextHoveredPrecinct] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 288;\n  const rightPanelWidth = 175;\n\n  // --- DATA DEFINITIONS ---\n  // Updated keys to match indicatorMetadata.js\n  const legendData = {\n    'Diversity of education qualification': {\n      title: 'Diversity of Education Qualification',\n      items: [ { color: '#fee5d9', label: '0 - 100' }, { color: '#fcbba1', label: '101 - 200' }, { color: '#fc9272', label: '201 - 300' }, { color: '#fb6a4a', label: '301 - 400' }, { color: '#ef3b2c', label: '401 - 500' }, { color: '#cb181d', label: '> 500' } ]\n    },\n    'Diversity of income (residents)': {\n        title: 'Diversity of Income (Residents)',\n        items: [ { color: '#fcfbfd', label: '0 - 100' }, { color: '#efedf5', label: '101 - 200' }, { color: '#dadaeb', label: '201 - 300' }, { color: '#bcbddc', label: '301 - 400' }, { color: '#9e9ac8', label: '401 - 500' }, { color: '#807dba', label: '501 - 600' }, { color: '#6a51a3', label: '601 - 700' }, { color: '#54278f', label: '701 - 800' }, { color: '#3f007d', label: '> 800' } ]\n    },\n    'Diversity of occupations (residents)': {\n      title: 'Diversity of Occupations (Residents)',\n      items: [ { color: '#f7fbff', label: '0 - 100' }, { color: '#deebf7', label: '101 - 200' }, { color: '#c6dbef', label: '201 - 300' }, { color: '#9ecae1', label: '301 - 400' }, { color: '#6baed6', label: '401 - 500' }, { color: '#4292c6', label: '501 - 600' }, { color: '#2171b5', label: '601 - 700' }, { color: '#08519c', label: '701 - 800' }, { color: '#08306b', label: '> 800' } ]\n    }\n  };\n\n  const indicatorConfig = {\n    'Diversity of education qualification': { path: '/data/education-fb-sa1.geojson', property: 'Education-VIC_Total' },\n    'Diversity of income (residents)': { path: '/data/income-fb-sa1.geojson', property: 'Income-VIC1_Total' },\n    'Diversity of occupations (residents)': { path: '/data/occupation-fb-sa1.geojson', property: 'Occupation-VIC_Total' }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson' },\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson' },\n      ];\n      sources.forEach(s => map.current.addSource(`${s.name}-data-source`, { type: 'geojson', data: s.path }));\n\n      const layers = [\n        { id: `${sanitizeForId('Diversity of education qualification')}-layer`, indicatorName: 'Diversity of education qualification', source: 'education-data-source', property: indicatorConfig['Diversity of education qualification'].property, colors: legendData['Diversity of education qualification'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500]  },\n        { id: `${sanitizeForId('Diversity of income (residents)')}-layer`, indicatorName: 'Diversity of income (residents)', source: 'income-data-source', property: indicatorConfig['Diversity of income (residents)'].property, colors: legendData['Diversity of income (residents)'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] },\n        { id: `${sanitizeForId('Diversity of occupations (residents)')}-layer`, indicatorName: 'Diversity of occupations (residents)', source: 'occupation-data-source', property: indicatorConfig['Diversity of occupations (residents)'].property, colors: legendData['Diversity of occupations (residents)'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] }\n      ];\n\n      layers.forEach(layer => {\n        const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n        map.current.addLayer({\n          id: layer.id, type: 'fill', source: layer.source, layout: { visibility: 'none' },\n          paint: {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          }\n        });\n        map.current.on('click', layer.id, (e) => {\n          const feature = e.features[0];\n          if (feature) {\n            const regionName = feature.properties['SA1_CODE21'];\n            const value = feature.properties[layer.property];\n            const formattedValue = !isNaN(value) ? Number(value).toLocaleString() : 'N/A';\n          }\n        });\n        map.current.on('mouseenter', layer.id, () => { map.current.getCanvas().style.cursor = 'pointer'; });\n        map.current.on('mouseleave', layer.id, () => { map.current.getCanvas().style.cursor = ''; });\n      });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n          precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC'); \n\n     map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: { 'fill-color': '#ffffffff', 'fill-opacity': 0.15 }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': 'rgba(0, 0, 0, 0.4)', 'line-width': 7, 'line-translate': [2, 2], 'line-blur': 4 }\n      });\n      map.current.addLayer({\n          id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n          paint: { 'line-color': '#0868ac', 'line-width': 2.5, 'line-opacity': 0.9 }\n      });\n\n      map.current.on('click', 'precincts-fill-layer', (e) => {\n        const feature = e.features[0];\n        if (!feature || !feature.properties.name) return;\n        const precinctName = feature.properties.name;\n        setPanelFocus({ type: 'precinct', name: precinctName });\n        setTextHoveredPrecinct(null);\n      });\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n    map.current.fitBounds(bounds, {\n      padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth },\n      duration: 2000, essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function(...args) { clearTimeout(timer); timer = setTimeout(() => { fn.apply(this, args); }, ms); };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n      map.current.fitBounds(bounds, { padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth }, duration: 0 });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    \n    const allLayerIds = Object.keys(indicatorConfig).map(name => `${sanitizeForId(name)}-layer`);\n    const selectedLayerId = selectedIndicator ? `${sanitizeForId(selectedIndicator)}-layer` : null;\n\n    if (map.current.getLayer('base-outline-layer')) {\n        map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        map.current.setLayoutProperty(layerId, 'visibility', layerId === selectedLayerId ? 'visible' : 'none');\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Generate LLM description when panel focus changes\n  useEffect(() => {\n    if (!panelFocus) {\n      setDynamicDescription('');\n      setIsDescriptionLoading(false);\n      return;\n    }\n\n    const generateDescription = async () => {\n        setIsDescriptionLoading(true);\n        setDynamicDescription('');\n        const { type, name } = panelFocus;\n        const cacheKey = `${type}_${name}`;\n\n        if (descriptionCache.current[cacheKey]) {\n            setDynamicDescription(descriptionCache.current[cacheKey]);\n            setIsDescriptionLoading(false);\n            return;\n        }\n\n        try {\n            let prompt = '';\n            if (type === 'indicator') {\n                const config = indicatorConfig[name];\n                const metadata = indicatorMetadata[name];\n\n                if (!config || !config.property || !metadata) {\n                    throw new Error(`Configuration or metadata is missing for the \"${name}\" indicator.`);\n                }\n                const response = await fetch(config.path);\n                const geojsonData = await response.json();\n                let minFeature = null, maxFeature = null, sum = 0, count = 0;\n                geojsonData.features.forEach(feature => {\n                    if (feature && feature.properties && feature.properties.hasOwnProperty(config.property)) {\n                        const value = Number(feature.properties[config.property]);\n                        if (!isNaN(value)) {\n                            if (minFeature === null || value < Number(minFeature.properties[config.property])) minFeature = feature;\n                            if (maxFeature === null || value > Number(maxFeature.properties[config.property])) maxFeature = feature;\n                            sum += value;\n                            count++;\n                        }\n                    }\n                });\n                if (count === 0) { throw new Error(`No valid data found for \"${name}\".`); }\n                const average = (sum / count).toFixed(2);\n                const minValue = Number(minFeature.properties[config.property]);\n                const maxValue = Number(maxFeature.properties[config.property]);\n                const minRegion = minFeature.properties['SA1_CODE21'];\n                const maxRegion = maxFeature.properties['SA1_CODE21'];\n                \n                prompt = `You are a concise urban data analyst for a public-facing dashboard about Melbourne's Fishermans Bend.\n                Synthesize the following information into an engaging, easy-to-understand summary of 70-100 words.\n                Your goal is to explain what the \"${name}\" indicator means and what the data shows.\n                \n                Indicator Context:\n                - Fishermans Bend Goal: ${metadata[\"FB's goals\"]}\n                - How it's measured: ${metadata[\"Note for measurement\"]}\n\n                Key Statistics for Fishermans Bend:\n                - Highest value: ${maxValue.toLocaleString()} (in area ${maxRegion})\n                - Lowest value: ${minValue.toLocaleString()} (in area ${minRegion})\n                - Average value: ${Number(average).toLocaleString()}\n\n                Combine these points into a short narrative. Start by explaining the indicator's relevance to the area's goals, then describe the observed range and what it implies (e.g., \"a significant disparity,\" \"a wide range,\" \"a concentration of...\").`;\n\n            } else if (type === 'precinct') {\n                prompt = `You are a concise urban planning analyst for a public-facing dashboard about Melbourne's Fishermans Bend. \n                Write an engaging summary of 70-100 words about the \"${name}\" precinct. \n                Describe its key vision, main characteristics, or planned features. \n                If relevant, mention its relationship to the other precincts like Montague, Sandridge, Lorimer, and the Employment Precinct.`;\n            }\n            if (prompt) {\n                const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash-latest\" });\n                const result = await model.generateContent(prompt);\n                const text = result.response.text();\n                descriptionCache.current[cacheKey] = text;\n                setDynamicDescription(text);\n            }\n        } catch (error) {\n            console.error(`Error generating description for ${name}:`, error);\n            const errorMessage = error.message.includes('429')\n                ? 'Daily free API quota exceeded. Please try again tomorrow or upgrade to a paid plan.'\n                : `An error occurred while generating the description: ${error.message}`;\n            setDynamicDescription(errorMessage);\n        } finally {\n            setIsDescriptionLoading(false);\n        }\n    };\n    generateDescription();\n  }, [panelFocus]);\n\n  // Update map visual style when a precinct is highlighted from text\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n\n    if (textHoveredPrecinct) {\n      const fillColorExpression = [ 'case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#ffffffff' ];\n      const fillOpacityExpression = [ 'case', ['==', ['get', 'name'], textHoveredPrecinct], 0.6, 0.15 ];\n      const outlineColorExpression = [ 'case', ['==', ['get', 'name'], textHoveredPrecinct], PRECINCT_COLORS[textHoveredPrecinct], '#0868ac' ];\n\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', fillColorExpression);\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', fillOpacityExpression);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', outlineColorExpression);\n\n    } else {\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-color', '#ffffffff');\n      map.current.setPaintProperty('precincts-fill-layer', 'fill-opacity', 0.15);\n      map.current.setPaintProperty('precincts-outline-layer', 'line-color', '#0868ac');\n    }\n  }, [textHoveredPrecinct, PRECINCT_COLORS]);\n\n  // --- UI HANDLERS ---\n  const handleSearchClick = () => {\n    setIndicators(Object.keys(indicatorMetadata)); // Use keys from the imported metadata\n    setShowIndicators(true);\n  };\n\n  const handleIndicatorSelect = (indicator) => {\n    const isCurrentlySelected = selectedIndicator === indicator;\n    const newIndicator = isCurrentlySelected ? null : indicator;\n    setSelectedIndicator(newIndicator);\n    setPanelFocus(newIndicator ? { type: 'indicator', name: newIndicator } : null);\n    setTextHoveredPrecinct(null);\n  };\n\n  const handlePrecinctHover = (precinctName) => {\n    setTextHoveredPrecinct(precinctName);\n  };\n\n  // --- RENDER METHOD ---\n  return (\n    <div style={{ display: 'flex', width: '100%', height: 'calc(100vh - 78px)' }}>\n      {/* Map container */}\n      <div style={{ position: 'relative', flex: 1 }}>\n        <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n        <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '288px', zIndex: 10 }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', marginBottom: '1rem' }}>I'm interested in ...</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n            <input type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"e.g., 'jobs' or 'housing'\" style={{ padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', outline: 'none' }} />\n            <button onClick={handleSearchClick} style={{ backgroundColor: '#2563EB', color: 'white', fontWeight: 600, padding: '0.5rem 1rem', borderRadius: '0.375rem', border: 'none', cursor: 'pointer' }}>Search</button>\n          </div>\n          {showIndicators && (\n            <div style={{ marginTop: '1rem', paddingTop: '1rem', borderTop: '1px solid #E5E7EB' }}>\n              <h4 style={{ fontWeight: 600, color: '#1F2937', marginBottom: '0.5rem' }}>Suggested Indicators</h4>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                {indicators.map((indicator) => (\n                  <div key={indicator} style={{ display: 'flex', alignItems: 'center' }}>\n                    <input type=\"radio\" id={sanitizeForId(indicator)} name=\"indicator\" checked={selectedIndicator === indicator} onChange={() => handleIndicatorSelect(indicator)} style={{ height: '1rem', width: '1rem' }} />\n                    <label htmlFor={sanitizeForId(indicator)} style={{ marginLeft: '0.75rem', fontSize: '0.875rem', color: '#374151' }}>{indicator}</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        {selectedIndicator && legendData[selectedIndicator] && <Legend title={legendData[selectedIndicator].title} items={legendData[selectedIndicator].items} />}\n      </div>\n      {/* Text Explorer Panel */}\n      <div style={{ width: '320px', backgroundColor: '#f8f9fa', padding: '1.5rem', borderLeft: '1px solid #dee2e6', overflowY: 'auto' }}>\n        {panelFocus ? (\n          <div>\n            <h4 style={{ fontSize: '1.1rem', fontWeight: 600, color: '#495057', marginBottom: '0.75rem' }}>{panelFocus.name}</h4>\n            {isDescriptionLoading ? (\n              <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>🤖 Generating AI description...</p>\n            ) : (\n              <InteractiveDescription\n                text={dynamicDescription}\n                keywords={PRECINCT_NAMES}\n                colors={PRECINCT_COLORS}\n                onKeywordHover={handlePrecinctHover}\n              />\n            )}\n          </div>\n        ) : (\n          <p style={{ fontSize: '0.95rem', color: '#6c757d', fontStyle: 'italic' }}>Select an indicator from the left panel or click on a precinct on the map to see its description.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n// --- END: MAP COMPONENT ---\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}