{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator_backend/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n\n// (Legend and AI description components removed per requirements)\n\n// --- START: MAP COMPONENT ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const hoverStateBySource = useRef({}); // track hovered feature ids per source for outlines\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadedGeojson, setUploadedGeojson] = useState(null);\n  const [availableColumns, setAvailableColumns] = useState([]);\n  const [columnTypes, setColumnTypes] = useState({}); // { colName: 'number' | 'string' }\n  const [selectedColumn, setSelectedColumn] = useState('');\n\n  // Panel widths for map padding\n  const leftPanelWidth = 200;\n  const rightPanelWidth = 0;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    'Education': {\n      title: 'Education (Total)',\n      items: [{\n        color: '#fee5d9',\n        label: 'low'\n      }, {\n        color: '#fcbba1',\n        label: ''\n      }, {\n        color: '#fc9272',\n        label: ''\n      }, {\n        color: '#fb6a4a',\n        label: ''\n      }, {\n        color: '#ef3b2c',\n        label: ''\n      }, {\n        color: '#cb181d',\n        label: 'high'\n      }]\n    },\n    'Income': {\n      title: 'Income (Total)',\n      items: [{\n        color: '#fcfbfd',\n        label: 'low'\n      }, {\n        color: '#efedf5',\n        label: ''\n      }, {\n        color: '#dadaeb',\n        label: ''\n      }, {\n        color: '#bcbddc',\n        label: ''\n      }, {\n        color: '#9e9ac8',\n        label: ''\n      }, {\n        color: '#807dba',\n        label: ''\n      }, {\n        color: '#6a51a3',\n        label: ''\n      }, {\n        color: '#54278f',\n        label: ''\n      }, {\n        color: '#3f007d',\n        label: 'high'\n      }]\n    },\n    'Occupation': {\n      title: 'Occupation (Total)',\n      items: [{\n        color: '#f7fbff',\n        label: 'low'\n      }, {\n        color: '#deebf7',\n        label: ''\n      }, {\n        color: '#c6dbef',\n        label: ''\n      }, {\n        color: '#9ecae1',\n        label: ''\n      }, {\n        color: '#6baed6',\n        label: ''\n      }, {\n        color: '#4292c6',\n        label: ''\n      }, {\n        color: '#2171b5',\n        label: ''\n      }, {\n        color: '#08519c',\n        label: ''\n      }, {\n        color: '#08306b',\n        label: 'high'\n      }]\n    },\n    'Employment': {\n      title: 'Employment (Total)',\n      items: [{\n        color: '#f1eef6',\n        label: 'low'\n      }, {\n        color: '#d7b5d8',\n        label: ''\n      }, {\n        color: '#c994c7',\n        label: ''\n      }, {\n        color: '#df65b0',\n        label: ''\n      }, {\n        color: '#dd1c77',\n        label: 'high'\n      }]\n    },\n    'POB': {\n      title: 'Place of Birth (Total)',\n      items: [{\n        color: '#edf8e9',\n        label: 'low'\n      }, {\n        color: '#bae4b3',\n        label: ''\n      }, {\n        color: '#74c476',\n        label: ''\n      }, {\n        color: '#31a354',\n        label: ''\n      }, {\n        color: '#006d2c',\n        label: 'high'\n      }]\n    }\n  };\n  const indicatorConfig = {\n    'Education': {\n      path: '/data/education-fb-sa1.geojson',\n      property: 'Education-VIC_Total',\n      source: 'education-data-source'\n    },\n    'Employment': {\n      path: '/data/employment-fb-sa1.geojson',\n      property: 'employment-VIC_Total',\n      source: 'employment-data-source'\n    },\n    'Income': {\n      path: '/data/income-fb-sa1.geojson',\n      property: 'Income-VIC1_Total',\n      source: 'income-data-source'\n    },\n    'POB': {\n      path: '/data/POB-fb-sa1.geojson',\n      property: 'POB-VIC1_Total',\n      source: 'pob-data-source'\n    },\n    'Occupation': {\n      path: '/data/occupation-fb-sa1.geojson',\n      property: 'Occupation-VIC_Total',\n      source: 'occupation-data-source'\n    }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false,\n      preserveDrawingBuffer: true // Required for exporting map canvas\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      // Add sources\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'employment',\n        path: '/data/employment-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'pob',\n        path: '/data/POB-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson'\n      }\n      // jobs layers removed per requirements\n      ];\n      sources.forEach(s => {\n        const spec = {\n          type: 'geojson',\n          data: s.path\n        };\n        if (s.promoteId) spec.promoteId = s.promoteId;\n        map.current.addSource(`${s.name}-data-source`, spec);\n      });\n\n      // Define layers for indicators\n      const layers = [{\n        id: 'education-layer',\n        indicatorName: 'Education',\n        source: 'education-data-source',\n        property: indicatorConfig['Education'].property,\n        colors: legendData['Education'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'employment-layer',\n        indicatorName: 'Employment',\n        source: 'employment-data-source',\n        property: indicatorConfig['Employment'].property,\n        colors: legendData['Employment'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400]\n      }, {\n        id: 'income-layer',\n        indicatorName: 'Income',\n        source: 'income-data-source',\n        property: indicatorConfig['Income'].property,\n        colors: legendData['Income'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }, {\n        id: 'pob-layer',\n        indicatorName: 'POB',\n        source: 'pob-data-source',\n        property: indicatorConfig['POB'].property,\n        colors: legendData['POB'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400]\n      }, {\n        id: 'occupation-layer',\n        indicatorName: 'Occupation',\n        source: 'occupation-data-source',\n        property: indicatorConfig['Occupation'].property,\n        colors: legendData['Occupation'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }];\n      layers.forEach(layer => {\n        // Fill paint\n        let paint;\n        if (layer.type === 'step') {\n          const base = '#ffffff';\n          const stepExpr = ['step', ['to-number', ['get', layer.property]], base];\n          layer.breaks.forEach((b, i) => {\n            stepExpr.push(b, layer.colors[i] || layer.colors[layer.colors.length - 1]);\n          });\n          paint = {\n            'fill-color': stepExpr,\n            'fill-opacity': 0.6\n          };\n        } else {\n          const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n          paint = {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          };\n        }\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint\n        });\n\n        // Base thin boundary for clear geometry edges (always visible with layer)\n        const baseOutlineId = `${layer.id}-base-outline`;\n        map.current.addLayer({\n          id: baseOutlineId,\n          type: 'line',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'line-color': '#666',\n            'line-width': 0.4,\n            'line-opacity': 0.7\n          }\n        });\n\n        // Outline layer that lights up on hover\n        const outlineId = `${layer.id}-hover-outline`;\n        map.current.addLayer({\n          id: outlineId,\n          type: 'line',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'line-color': '#111',\n            'line-width': 2.5,\n            'line-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 1, 0]\n          }\n        });\n\n        // Hover feature-state handlers\n        map.current.on('mousemove', layer.id, e => {\n          if (!e.features || !e.features.length) return;\n          const f = e.features[0];\n          const sourceId = layer.source;\n          const prev = hoverStateBySource.current[sourceId];\n          if (prev !== undefined) {\n            try {\n              map.current.setFeatureState({\n                source: sourceId,\n                id: prev\n              }, {\n                hover: false\n              });\n            } catch (_) {}\n          }\n          hoverStateBySource.current[sourceId] = f.id;\n          try {\n            map.current.setFeatureState({\n              source: sourceId,\n              id: f.id\n            }, {\n              hover: true\n            });\n          } catch (_) {}\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          const sourceId = layer.source;\n          const prev = hoverStateBySource.current[sourceId];\n          if (prev !== undefined) {\n            try {\n              map.current.setFeatureState({\n                source: sourceId,\n                id: prev\n              }, {\n                hover: false\n              });\n            } catch (_) {}\n            hoverStateBySource.current[sourceId] = undefined;\n          }\n        });\n      });\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n        precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC');\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#ffffffff',\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': 'rgba(0, 0, 0, 0.4)',\n          'line-width': 7,\n          'line-translate': [2, 2],\n          'line-blur': 4\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#0868ac',\n          'line-width': 2.5,\n          'line-opacity': 0.9\n        }\n      });\n\n      // Precinct click handlers removed (no narrative panel)\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [[144.890, -37.850], [144.948, -37.816]];\n    map.current.fitBounds(bounds, {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: leftPanelWidth,\n        right: rightPanelWidth\n      },\n      duration: 2000,\n      essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, ms);\n      };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [[144.890, -37.850], [144.948, -37.816]];\n      map.current.fitBounds(bounds, {\n        padding: {\n          top: 20,\n          bottom: 20,\n          left: leftPanelWidth,\n          right: rightPanelWidth\n        },\n        duration: 0\n      });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['education-layer', 'employment-layer', 'income-layer', 'pob-layer', 'occupation-layer'];\n    // Do NOT show preloaded indicator layers when selecting an indicator; we only visualize uploaded CSV output\n    const selectedLayerId = null;\n    if (map.current.getLayer('base-outline-layer')) {\n      map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        const vis = layerId === selectedLayerId ? 'visible' : 'none';\n        map.current.setLayoutProperty(layerId, 'visibility', vis);\n        const outlineId = `${layerId}-hover-outline`;\n        const baseOutlineId = `${layerId}-base-outline`;\n        if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', vis);\n        if (map.current.getLayer(baseOutlineId)) map.current.setLayoutProperty(baseOutlineId, 'visibility', vis);\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Handle uploaded GeoJSON rendering (depends on selectedColumn)\n  useEffect(() => {\n    var _legendData$selectedI;\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const sourceId = 'uploaded-geojson-source';\n    const fillId = 'uploaded-geojson-fill';\n    const outlineId = 'uploaded-geojson-outline';\n    if (!uploadedGeojson || !selectedColumn) {\n      if (map.current.getLayer(fillId)) map.current.setLayoutProperty(fillId, 'visibility', 'none');\n      if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', 'none');\n      return;\n    }\n    const isNumeric = val => {\n      const n = Number(val);\n      return Number.isFinite(n);\n    };\n    const type = columnTypes[selectedColumn] || 'number';\n    const palette = (((_legendData$selectedI = legendData[selectedIndicator]) === null || _legendData$selectedI === void 0 ? void 0 : _legendData$selectedI.items) || [{\n      color: '#fee5d9'\n    }, {\n      color: '#fcae91'\n    }, {\n      color: '#fb6a4a'\n    }, {\n      color: '#de2d26'\n    }, {\n      color: '#a50f15'\n    }]).map(i => i.color);\n    let fillPaint;\n    if (type === 'number') {\n      const values = (uploadedGeojson.features || []).map(f => Number((f.properties || {})[selectedColumn])).filter(v => Number.isFinite(v));\n      const min = values.length ? Math.min(...values) : 0;\n      const max = values.length ? Math.max(...values) : 1;\n      const stopsCount = Math.max(3, Math.min(9, palette.length));\n      const step = (max - min) / (stopsCount - 1 || 1);\n      const colorStops = [];\n      for (let i = 0; i < stopsCount; i++) {\n        colorStops.push(min + i * step, palette[i] || palette[palette.length - 1]);\n      }\n      fillPaint = {\n        'fill-color': ['interpolate', ['linear'], ['to-number', ['get', selectedColumn]], ...colorStops],\n        'fill-opacity': 0.6\n      };\n    } else {\n      // Categorical palette\n      const catColors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf', '#aec7e8', '#ffbb78'];\n      const uniques = Array.from(new Set((uploadedGeojson.features || []).map(f => (f.properties || {})[selectedColumn]).filter(v => v !== undefined && v !== null)));\n      const maxCats = 12;\n      const cats = uniques.slice(0, maxCats);\n      const matchExpr = ['match', ['get', selectedColumn]];\n      cats.forEach((c, i) => {\n        matchExpr.push(c, catColors[i % catColors.length]);\n      });\n      matchExpr.push('#cccccc'); // default color for others\n      fillPaint = {\n        'fill-color': matchExpr,\n        'fill-opacity': 0.6\n      };\n    }\n    if (map.current.getSource(sourceId)) {\n      map.current.getSource(sourceId).setData(uploadedGeojson);\n    } else {\n      map.current.addSource(sourceId, {\n        type: 'geojson',\n        data: uploadedGeojson\n      });\n      map.current.addLayer({\n        id: fillId,\n        type: 'fill',\n        source: sourceId,\n        paint: fillPaint\n      });\n      map.current.addLayer({\n        id: outlineId,\n        type: 'line',\n        source: sourceId,\n        paint: {\n          'line-color': '#cc8800',\n          'line-width': 1.2\n        }\n      });\n    }\n    // Update paint if layer already exists (e.g., new upload with a different key/range)\n    if (map.current.getLayer(fillId)) {\n      map.current.setPaintProperty(fillId, 'fill-color', fillPaint['fill-color']);\n      map.current.setPaintProperty(fillId, 'fill-opacity', fillPaint['fill-opacity']);\n    }\n    if (map.current.getLayer(fillId)) map.current.setLayoutProperty(fillId, 'visibility', 'visible');\n    if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', 'visible');\n  }, [uploadedGeojson, selectedColumn]);\n  const handleFileChange = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file || !selectedIndicator) return;\n    setUploading(true);\n    try {\n      const form = new FormData();\n      form.append('indicator', selectedIndicator.toLowerCase());\n      form.append('file', file);\n      const attempts = [];\n      const base = process.env.REACT_APP_API_URL;\n      if (base) attempts.push(`${base}/generate`);\n      // CRA dev proxy\n      attempts.push('/generate');\n      // Same host on port 8000\n      if (typeof window !== 'undefined') {\n        const proto = window.location.protocol;\n        const host = window.location.hostname;\n        attempts.push(`${proto}//${host}:8000/generate`);\n      }\n      // Explicit localhost\n      attempts.push('http://localhost:8000/generate');\n      let res;\n      let lastErr;\n      for (const url of attempts) {\n        try {\n          res = await fetch(url, {\n            method: 'POST',\n            body: form\n          });\n          if (res.ok) break;\n          lastErr = new Error(`HTTP ${res.status} at ${url}`);\n        } catch (err) {\n          lastErr = err;\n        }\n      }\n      if (!res || !res.ok) throw lastErr || new Error('Upload failed');\n      const geojson = await res.json();\n      setUploadedGeojson(geojson);\n      // Derive columns and types from the first feature\n      const props = geojson.features && geojson.features[0] && geojson.features[0].properties ? geojson.features[0].properties : {};\n      const cols = Object.keys(props).filter(k => k !== 'SA1_CODE');\n      // Infer type per column\n      const inferTypes = {};\n      cols.forEach(col => {\n        const sample = (geojson.features || []).slice(0, 200).map(f => (f.properties || {})[col]).filter(v => v !== undefined && v !== null && `${v}`.trim() !== '');\n        const numericCount = sample.filter(v => Number.isFinite(Number(v))).length;\n        const ratio = sample.length ? numericCount / sample.length : 0;\n        inferTypes[col] = ratio >= 0.6 ? 'number' : 'string';\n      });\n      setAvailableColumns(cols);\n      setColumnTypes(inferTypes);\n      setSelectedColumn('');\n    } catch (err) {\n      console.error(err);\n      alert('Failed to generate GeoJSON from CSV. See console for details.');\n    } finally {\n      setUploading(false);\n      // Reset file input to allow re-upload of same file\n      e.target.value = '';\n    }\n  };\n\n  // (All narrative, search, and export logic removed)\n\n  // --- RENDER METHOD ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      style: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '1rem',\n        left: '1rem',\n        backgroundColor: 'white',\n        padding: '1rem',\n        borderRadius: '0.5rem',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n        width: '288px',\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: '1.125rem',\n          fontWeight: 600,\n          marginBottom: '0.5rem'\n        },\n        children: \"Select Indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedIndicator || '',\n        onChange: e => setSelectedIndicator(e.target.value || null),\n        style: {\n          width: '100%',\n          padding: '0.5rem',\n          border: '1px solid #D1D5DB',\n          borderRadius: '0.375rem',\n          marginBottom: '0.75rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Education\",\n          children: \"Education\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Employment\",\n          children: \"Employment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"POB\",\n          children: \"POB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Occupation\",\n          children: \"Occupation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          fontSize: '0.9rem',\n          marginBottom: '0.5rem'\n        },\n        children: \"Upload CSV for selected indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv,text/csv\",\n        onChange: handleFileChange,\n        disabled: !selectedIndicator || uploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 3\n      }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '0.5rem',\n          fontSize: '0.85rem'\n        },\n        children: \"Processing\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 23\n      }, this), uploadedGeojson && availableColumns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '0.75rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            fontSize: '0.9rem',\n            marginBottom: '0.5rem'\n          },\n          children: \"Select column to visualize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedColumn,\n          onChange: e => setSelectedColumn(e.target.value),\n          style: {\n            width: '100%',\n            padding: '0.5rem',\n            border: '1px solid #D1D5DB',\n            borderRadius: '0.375rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose a column\\u2026\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), availableColumns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: col,\n            children: [col, columnTypes[col] === 'number' ? '' : ' (categorical)']\n          }, col, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 5\n  }, this);\n}\n// --- END: MAP COMPONENT ---\n_s(Map, \"FIur6EUERi7XDr73dbwcZ2sJ8u8=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","maplibregl","jsxDEV","_jsxDEV","Map","_s","mapContainer","map","hoverStateBySource","PRECINCT_NAMES","PRECINCT_COLORS","selectedIndicator","setSelectedIndicator","uploading","setUploading","uploadedGeojson","setUploadedGeojson","availableColumns","setAvailableColumns","columnTypes","setColumnTypes","selectedColumn","setSelectedColumn","leftPanelWidth","rightPanelWidth","legendData","title","items","color","label","indicatorConfig","path","property","source","current","container","style","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","preserveDrawingBuffer","on","e","console","error","message","adjustMapBounds","sources","name","promoteId","forEach","s","spec","type","data","addSource","layers","id","indicatorName","colors","i","stops","layer","paint","base","stepExpr","breaks","b","push","length","colorStops","flatMap","stop","addLayer","layout","visibility","baseOutlineId","outlineId","features","f","sourceId","prev","undefined","setFeatureState","hover","_","precinctColorExpression","getCanvas","cursor","remove","bounds","fitBounds","padding","top","bottom","left","right","duration","essential","debounce","fn","ms","timer","args","clearTimeout","setTimeout","apply","debouncedAdjustBounds","debouncedResizeListener","window","addEventListener","removeEventListener","isStyleLoaded","allLayerIds","selectedLayerId","getLayer","setLayoutProperty","layerId","vis","_legendData$selectedI","fillId","isNumeric","val","n","Number","isFinite","palette","fillPaint","values","properties","filter","v","min","Math","max","stopsCount","step","catColors","uniques","Array","from","Set","maxCats","cats","slice","matchExpr","c","getSource","setData","setPaintProperty","handleFileChange","_e$target$files","file","target","files","form","FormData","append","toLowerCase","attempts","process","env","REACT_APP_API_URL","proto","location","protocol","host","hostname","res","lastErr","url","fetch","method","body","ok","Error","status","err","geojson","json","props","cols","Object","keys","k","inferTypes","col","sample","trim","numericCount","ratio","alert","value","position","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","borderRadius","boxShadow","zIndex","fontSize","fontWeight","marginBottom","onChange","border","display","accept","disabled","marginTop","_c","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator_backend/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n\n// (Legend and AI description components removed per requirements)\n\n\n// --- START: MAP COMPONENT ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const hoverStateBySource = useRef({}); // track hovered feature ids per source for outlines\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadedGeojson, setUploadedGeojson] = useState(null);\n  const [availableColumns, setAvailableColumns] = useState([]);\n  const [columnTypes, setColumnTypes] = useState({}); // { colName: 'number' | 'string' }\n  const [selectedColumn, setSelectedColumn] = useState('');\n\n  // Panel widths for map padding\n  const leftPanelWidth = 200;\n  const rightPanelWidth = 0;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    'Education': {\n      title: 'Education (Total)',\n      items: [ { color: '#fee5d9', label: 'low' }, { color: '#fcbba1', label: '' }, { color: '#fc9272', label: '' }, { color: '#fb6a4a', label: '' }, { color: '#ef3b2c', label: '' }, { color: '#cb181d', label: 'high' } ]\n    },\n    'Income': {\n      title: 'Income (Total)',\n      items: [ { color: '#fcfbfd', label: 'low' }, { color: '#efedf5', label: '' }, { color: '#dadaeb', label: '' }, { color: '#bcbddc', label: '' }, { color: '#9e9ac8', label: '' }, { color: '#807dba', label: '' }, { color: '#6a51a3', label: '' }, { color: '#54278f', label: '' }, { color: '#3f007d', label: 'high' } ]\n    },\n    'Occupation': {\n      title: 'Occupation (Total)',\n      items: [ { color: '#f7fbff', label: 'low' }, { color: '#deebf7', label: '' }, { color: '#c6dbef', label: '' }, { color: '#9ecae1', label: '' }, { color: '#6baed6', label: '' }, { color: '#4292c6', label: '' }, { color: '#2171b5', label: '' }, { color: '#08519c', label: '' }, { color: '#08306b', label: 'high' } ]\n    },\n    'Employment': {\n      title: 'Employment (Total)',\n      items: [ { color: '#f1eef6', label: 'low' }, { color: '#d7b5d8', label: '' }, { color: '#c994c7', label: '' }, { color: '#df65b0', label: '' }, { color: '#dd1c77', label: 'high' } ]\n    },\n    'POB': {\n      title: 'Place of Birth (Total)',\n      items: [ { color: '#edf8e9', label: 'low' }, { color: '#bae4b3', label: '' }, { color: '#74c476', label: '' }, { color: '#31a354', label: '' }, { color: '#006d2c', label: 'high' } ]\n    }\n  };\n\n  const indicatorConfig = {\n    'Education': { path: '/data/education-fb-sa1.geojson', property: 'Education-VIC_Total', source: 'education-data-source' },\n    'Employment': { path: '/data/employment-fb-sa1.geojson', property: 'employment-VIC_Total', source: 'employment-data-source' },\n    'Income': { path: '/data/income-fb-sa1.geojson', property: 'Income-VIC1_Total', source: 'income-data-source' },\n    'POB': { path: '/data/POB-fb-sa1.geojson', property: 'POB-VIC1_Total', source: 'pob-data-source' },\n    'Occupation': { path: '/data/occupation-fb-sa1.geojson', property: 'Occupation-VIC_Total', source: 'occupation-data-source' }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n      preserveDrawingBuffer: true // Required for exporting map canvas\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n      // Add sources\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'employment', path: '/data/employment-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'pob', path: '/data/POB-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson' },\n        // jobs layers removed per requirements\n      ];\n      sources.forEach(s => {\n        const spec = { type: 'geojson', data: s.path };\n        if (s.promoteId) spec.promoteId = s.promoteId;\n        map.current.addSource(`${s.name}-data-source`, spec);\n      });\n\n      // Define layers for indicators\n      const layers = [\n        { id: 'education-layer', indicatorName: 'Education', source: 'education-data-source', property: indicatorConfig['Education'].property, colors: legendData['Education'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500] },\n        { id: 'employment-layer', indicatorName: 'Employment', source: 'employment-data-source', property: indicatorConfig['Employment'].property, colors: legendData['Employment'].items.map(i => i.color), stops: [0, 100, 200, 300, 400] },\n        { id: 'income-layer', indicatorName: 'Income', source: 'income-data-source', property: indicatorConfig['Income'].property, colors: legendData['Income'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] },\n        { id: 'pob-layer', indicatorName: 'POB', source: 'pob-data-source', property: indicatorConfig['POB'].property, colors: legendData['POB'].items.map(i => i.color), stops: [0, 100, 200, 300, 400] },\n        { id: 'occupation-layer', indicatorName: 'Occupation', source: 'occupation-data-source', property: indicatorConfig['Occupation'].property, colors: legendData['Occupation'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] }\n      ];\n\n      layers.forEach(layer => {\n        // Fill paint\n        let paint;\n        if (layer.type === 'step') {\n          const base = '#ffffff';\n          const stepExpr = ['step', ['to-number', ['get', layer.property]], base];\n          layer.breaks.forEach((b, i) => { stepExpr.push(b, layer.colors[i] || layer.colors[layer.colors.length - 1]); });\n          paint = { 'fill-color': stepExpr, 'fill-opacity': 0.6 };\n        } else {\n          const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n          paint = { 'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops], 'fill-opacity': 0.6 };\n        }\n        map.current.addLayer({ id: layer.id, type: 'fill', source: layer.source, layout: { visibility: 'none' }, paint });\n\n        // Base thin boundary for clear geometry edges (always visible with layer)\n        const baseOutlineId = `${layer.id}-base-outline`;\n        map.current.addLayer({\n          id: baseOutlineId,\n          type: 'line',\n          source: layer.source,\n          layout: { visibility: 'none' },\n          paint: { 'line-color': '#666', 'line-width': 0.4, 'line-opacity': 0.7 }\n        });\n\n  // Outline layer that lights up on hover\n  const outlineId = `${layer.id}-hover-outline`;\n        map.current.addLayer({\n          id: outlineId,\n          type: 'line',\n          source: layer.source,\n          layout: { visibility: 'none' },\n          paint: {\n            'line-color': '#111',\n            'line-width': 2.5,\n            'line-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 1, 0]\n          }\n        });\n\n        // Hover feature-state handlers\n        map.current.on('mousemove', layer.id, (e) => {\n          if (!e.features || !e.features.length) return;\n          const f = e.features[0];\n          const sourceId = layer.source;\n          const prev = hoverStateBySource.current[sourceId];\n          if (prev !== undefined) {\n            try { map.current.setFeatureState({ source: sourceId, id: prev }, { hover: false }); } catch (_) {}\n          }\n          hoverStateBySource.current[sourceId] = f.id;\n          try { map.current.setFeatureState({ source: sourceId, id: f.id }, { hover: true }); } catch (_) {}\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          const sourceId = layer.source;\n          const prev = hoverStateBySource.current[sourceId];\n          if (prev !== undefined) {\n            try { map.current.setFeatureState({ source: sourceId, id: prev }, { hover: false }); } catch (_) {}\n            hoverStateBySource.current[sourceId] = undefined;\n          }\n        });\n      });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n          precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC'); \n\n     map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: { 'fill-color': '#ffffffff', 'fill-opacity': 0.15 }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': 'rgba(0, 0, 0, 0.4)', 'line-width': 7, 'line-translate': [2, 2], 'line-blur': 4 }\n      });\n      map.current.addLayer({\n          id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n          paint: { 'line-color': '#0868ac', 'line-width': 2.5, 'line-opacity': 0.9 }\n      });\n\n  // Precinct click handlers removed (no narrative panel)\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n    map.current.fitBounds(bounds, {\n      padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth },\n      duration: 2000, essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function(...args) { clearTimeout(timer); timer = setTimeout(() => { fn.apply(this, args); }, ms); };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n      map.current.fitBounds(bounds, { padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth }, duration: 0 });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = [\n      'education-layer',\n      'employment-layer',\n      'income-layer',\n      'pob-layer',\n      'occupation-layer'\n    ];\n  // Do NOT show preloaded indicator layers when selecting an indicator; we only visualize uploaded CSV output\n  const selectedLayerId = null;\n\n    if (map.current.getLayer('base-outline-layer')) {\n        map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        const vis = layerId === selectedLayerId ? 'visible' : 'none';\n        map.current.setLayoutProperty(layerId, 'visibility', vis);\n  const outlineId = `${layerId}-hover-outline`;\n  const baseOutlineId = `${layerId}-base-outline`;\n  if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', vis);\n  if (map.current.getLayer(baseOutlineId)) map.current.setLayoutProperty(baseOutlineId, 'visibility', vis);\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Handle uploaded GeoJSON rendering (depends on selectedColumn)\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const sourceId = 'uploaded-geojson-source';\n    const fillId = 'uploaded-geojson-fill';\n    const outlineId = 'uploaded-geojson-outline';\n\n    if (!uploadedGeojson || !selectedColumn) {\n      if (map.current.getLayer(fillId)) map.current.setLayoutProperty(fillId, 'visibility', 'none');\n      if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', 'none');\n      return;\n    }\n\n    const isNumeric = (val) => {\n      const n = Number(val);\n      return Number.isFinite(n);\n    };\n\n    const type = columnTypes[selectedColumn] || 'number';\n    const palette = (legendData[selectedIndicator]?.items || [\n      { color: '#fee5d9' }, { color: '#fcae91' }, { color: '#fb6a4a' }, { color: '#de2d26' }, { color: '#a50f15' }\n    ]).map(i => i.color);\n\n    let fillPaint;\n    if (type === 'number') {\n      const values = (uploadedGeojson.features || [])\n        .map(f => Number((f.properties || {})[selectedColumn]))\n        .filter(v => Number.isFinite(v));\n      const min = values.length ? Math.min(...values) : 0;\n      const max = values.length ? Math.max(...values) : 1;\n      const stopsCount = Math.max(3, Math.min(9, palette.length));\n      const step = (max - min) / (stopsCount - 1 || 1);\n      const colorStops = [];\n      for (let i = 0; i < stopsCount; i++) {\n        colorStops.push(min + i * step, palette[i] || palette[palette.length - 1]);\n      }\n      fillPaint = { 'fill-color': ['interpolate', ['linear'], ['to-number', ['get', selectedColumn]], ...colorStops], 'fill-opacity': 0.6 };\n    } else {\n      // Categorical palette\n      const catColors = ['#1f77b4','#ff7f0e','#2ca02c','#d62728','#9467bd','#8c564b','#e377c2','#7f7f7f','#bcbd22','#17becf','#aec7e8','#ffbb78'];\n      const uniques = Array.from(new Set((uploadedGeojson.features || []).map(f => (f.properties || {})[selectedColumn]).filter(v => v !== undefined && v !== null)));\n      const maxCats = 12;\n      const cats = uniques.slice(0, maxCats);\n      const matchExpr = ['match', ['get', selectedColumn]];\n      cats.forEach((c, i) => { matchExpr.push(c, catColors[i % catColors.length]); });\n      matchExpr.push('#cccccc'); // default color for others\n      fillPaint = { 'fill-color': matchExpr, 'fill-opacity': 0.6 };\n    }\n\n    if (map.current.getSource(sourceId)) {\n      map.current.getSource(sourceId).setData(uploadedGeojson);\n    } else {\n      map.current.addSource(sourceId, { type: 'geojson', data: uploadedGeojson });\n      map.current.addLayer({ id: fillId, type: 'fill', source: sourceId, paint: fillPaint });\n      map.current.addLayer({ id: outlineId, type: 'line', source: sourceId, paint: { 'line-color': '#cc8800', 'line-width': 1.2 } });\n    }\n    // Update paint if layer already exists (e.g., new upload with a different key/range)\n    if (map.current.getLayer(fillId)) {\n      map.current.setPaintProperty(fillId, 'fill-color', fillPaint['fill-color']);\n      map.current.setPaintProperty(fillId, 'fill-opacity', fillPaint['fill-opacity']);\n    }\n    if (map.current.getLayer(fillId)) map.current.setLayoutProperty(fillId, 'visibility', 'visible');\n    if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', 'visible');\n  }, [uploadedGeojson, selectedColumn]);\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files?.[0];\n    if (!file || !selectedIndicator) return;\n    setUploading(true);\n    try {\n      const form = new FormData();\n      form.append('indicator', selectedIndicator.toLowerCase());\n      form.append('file', file);\n      const attempts = [];\n      const base = process.env.REACT_APP_API_URL;\n      if (base) attempts.push(`${base}/generate`);\n      // CRA dev proxy\n      attempts.push('/generate');\n      // Same host on port 8000\n      if (typeof window !== 'undefined') {\n        const proto = window.location.protocol;\n        const host = window.location.hostname;\n        attempts.push(`${proto}//${host}:8000/generate`);\n      }\n      // Explicit localhost\n      attempts.push('http://localhost:8000/generate');\n\n      let res;\n      let lastErr;\n      for (const url of attempts) {\n        try {\n          res = await fetch(url, { method: 'POST', body: form });\n          if (res.ok) break;\n          lastErr = new Error(`HTTP ${res.status} at ${url}`);\n        } catch (err) {\n          lastErr = err;\n        }\n      }\n      if (!res || !res.ok) throw lastErr || new Error('Upload failed');\n      const geojson = await res.json();\n      setUploadedGeojson(geojson);\n      // Derive columns and types from the first feature\n      const props = (geojson.features && geojson.features[0] && geojson.features[0].properties) ? geojson.features[0].properties : {};\n      const cols = Object.keys(props).filter(k => k !== 'SA1_CODE');\n      // Infer type per column\n      const inferTypes = {};\n      cols.forEach(col => {\n        const sample = (geojson.features || []).slice(0, 200).map(f => (f.properties || {})[col]).filter(v => v !== undefined && v !== null && `${v}`.trim() !== '');\n        const numericCount = sample.filter(v => Number.isFinite(Number(v))).length;\n        const ratio = sample.length ? (numericCount / sample.length) : 0;\n        inferTypes[col] = ratio >= 0.6 ? 'number' : 'string';\n      });\n      setAvailableColumns(cols);\n      setColumnTypes(inferTypes);\n      setSelectedColumn('');\n    } catch (err) {\n      console.error(err);\n      alert('Failed to generate GeoJSON from CSV. See console for details.');\n    } finally {\n      setUploading(false);\n      // Reset file input to allow re-upload of same file\n      e.target.value = '';\n    }\n  };\n\n  // (All narrative, search, and export logic removed)\n\n  // --- RENDER METHOD ---\n  return (\n    <div style={{ position: 'relative', width: '100%', height: 'calc(100vh - 78px)' }}>\n      <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n      {/* Left overlay with dropdown, file upload, and column selector */}\n      <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '288px', zIndex: 10 }}>\n        <h3 style={{ fontSize: '1.125rem', fontWeight: 600, marginBottom: '0.5rem' }}>Select Indicator</h3>\n        <select\n          value={selectedIndicator || ''}\n          onChange={(e) => setSelectedIndicator(e.target.value || null)}\n          style={{ width: '100%', padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', marginBottom: '0.75rem' }}\n        >\n          <option value=\"\">Select…</option>\n          <option value=\"Education\">Education</option>\n          <option value=\"Employment\">Employment</option>\n          <option value=\"Income\">Income</option>\n          <option value=\"POB\">POB</option>\n          <option value=\"Occupation\">Occupation</option>\n        </select>\n  <label style={{ display: 'block', fontSize: '0.9rem', marginBottom: '0.5rem' }}>Upload CSV for selected indicator</label>\n  <input type=\"file\" accept=\".csv,text/csv\" onChange={handleFileChange} disabled={!selectedIndicator || uploading} />\n        {uploading && <div style={{ marginTop: '0.5rem', fontSize: '0.85rem' }}>Processing…</div>}\n        {uploadedGeojson && availableColumns.length > 0 && (\n          <div style={{ marginTop: '0.75rem' }}>\n            <label style={{ display: 'block', fontSize: '0.9rem', marginBottom: '0.5rem' }}>Select column to visualize</label>\n            <select\n              value={selectedColumn}\n              onChange={(e) => setSelectedColumn(e.target.value)}\n              style={{ width: '100%', padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem' }}\n            >\n              <option value=\"\">Choose a column…</option>\n              {availableColumns.map((col) => (\n                <option key={col} value={col}>\n                  {col}{columnTypes[col] === 'number' ? '' : ' (categorical)'}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n// --- END: MAP COMPONENT ---"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}