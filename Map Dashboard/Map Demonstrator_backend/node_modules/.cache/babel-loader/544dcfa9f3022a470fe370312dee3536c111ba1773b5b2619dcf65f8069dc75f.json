{"ast":null,"code":"var _jsxFileName = \"/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator_backend/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n\n// (Legend and AI description components removed per requirements)\n\n// --- START: MAP COMPONENT ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const hoverStateBySource = useRef({}); // track hovered feature ids per source for outlines\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadedGeojson, setUploadedGeojson] = useState(null);\n  const [selectedProperty, setSelectedProperty] = useState(null);\n  const [propertyOptions, setPropertyOptions] = useState([]);\n  const popupPropRef = useRef(null);\n  const [legendInfo, setLegendInfo] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 200;\n  const rightPanelWidth = 0;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    'Education': {\n      title: 'Education (Total)',\n      items: [{\n        color: '#fee5d9',\n        label: 'low'\n      }, {\n        color: '#fcbba1',\n        label: ''\n      }, {\n        color: '#fc9272',\n        label: ''\n      }, {\n        color: '#fb6a4a',\n        label: ''\n      }, {\n        color: '#ef3b2c',\n        label: ''\n      }, {\n        color: '#cb181d',\n        label: 'high'\n      }]\n    },\n    'Income': {\n      title: 'Income (Total)',\n      items: [{\n        color: '#fcfbfd',\n        label: 'low'\n      }, {\n        color: '#efedf5',\n        label: ''\n      }, {\n        color: '#dadaeb',\n        label: ''\n      }, {\n        color: '#bcbddc',\n        label: ''\n      }, {\n        color: '#9e9ac8',\n        label: ''\n      }, {\n        color: '#807dba',\n        label: ''\n      }, {\n        color: '#6a51a3',\n        label: ''\n      }, {\n        color: '#54278f',\n        label: ''\n      }, {\n        color: '#3f007d',\n        label: 'high'\n      }]\n    },\n    'Occupation': {\n      title: 'Occupation (Total)',\n      items: [{\n        color: '#f7fbff',\n        label: 'low'\n      }, {\n        color: '#deebf7',\n        label: ''\n      }, {\n        color: '#c6dbef',\n        label: ''\n      }, {\n        color: '#9ecae1',\n        label: ''\n      }, {\n        color: '#6baed6',\n        label: ''\n      }, {\n        color: '#4292c6',\n        label: ''\n      }, {\n        color: '#2171b5',\n        label: ''\n      }, {\n        color: '#08519c',\n        label: ''\n      }, {\n        color: '#08306b',\n        label: 'high'\n      }]\n    },\n    'Employment': {\n      title: 'Employment (Total)',\n      items: [{\n        color: '#f1eef6',\n        label: 'low'\n      }, {\n        color: '#d7b5d8',\n        label: ''\n      }, {\n        color: '#c994c7',\n        label: ''\n      }, {\n        color: '#df65b0',\n        label: ''\n      }, {\n        color: '#dd1c77',\n        label: 'high'\n      }]\n    },\n    'POB': {\n      title: 'Place of Birth (Total)',\n      items: [{\n        color: '#edf8e9',\n        label: 'low'\n      }, {\n        color: '#bae4b3',\n        label: ''\n      }, {\n        color: '#74c476',\n        label: ''\n      }, {\n        color: '#31a354',\n        label: ''\n      }, {\n        color: '#006d2c',\n        label: 'high'\n      }]\n    }\n  };\n\n  // DZN filter list requested\n  const DZN_FILTER_SET = new Set([215110001, 215110002, 215110003, 215110004, 215110005, 215110006, 215110007, 215110008, 215110009, 215110010, 215110011, 215110012].map(String));\n  const indicatorConfig = {\n    'Education': {\n      path: '/data/education-fb-sa1.geojson',\n      property: 'Education-VIC_Total',\n      source: 'education-data-source'\n    },\n    'Employment': {\n      path: '/data/employment-fb-sa1.geojson',\n      property: 'employment-VIC_Total',\n      source: 'employment-data-source'\n    },\n    'Income': {\n      path: '/data/income-fb-sa1.geojson',\n      property: 'Income-VIC1_Total',\n      source: 'income-data-source'\n    },\n    'POB': {\n      path: '/data/POB-fb-sa1.geojson',\n      property: 'POB-VIC1_Total',\n      source: 'pob-data-source'\n    },\n    'Occupation': {\n      path: '/data/occupation-fb-sa1.geojson',\n      property: 'Occupation-VIC_Total',\n      source: 'occupation-data-source'\n    }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false,\n      boxZoom: false,\n      dragRotate: false,\n      dragPan: false,\n      keyboard: false,\n      doubleClickZoom: false,\n      touchZoomRotate: false,\n      preserveDrawingBuffer: true // Required for exporting map canvas\n    });\n    map.current.on('error', e => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n    map.current.on('load', () => {\n      adjustMapBounds();\n      // Add sources\n      const sources = [{\n        name: 'base-outline',\n        path: '/data/fb-sa1-2021-WGS84-boundary.geojson'\n      }, {\n        name: 'employment',\n        path: '/data/employment-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'education',\n        path: '/data/education-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'pob',\n        path: '/data/POB-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'income',\n        path: '/data/income-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'occupation',\n        path: '/data/occupation-fb-sa1.geojson',\n        promoteId: 'SA1_CODE21'\n      }, {\n        name: 'precincts',\n        path: '/data/fb-precincts-official-boundary.geojson'\n      }\n      // jobs layers removed per requirements\n      ];\n      sources.forEach(s => {\n        const spec = {\n          type: 'geojson',\n          data: s.path\n        };\n        if (s.promoteId) spec.promoteId = s.promoteId;\n        map.current.addSource(`${s.name}-data-source`, spec);\n      });\n\n      // Define layers for indicators\n      const layers = [{\n        id: 'education-layer',\n        indicatorName: 'Education',\n        source: 'education-data-source',\n        property: indicatorConfig['Education'].property,\n        colors: legendData['Education'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500]\n      }, {\n        id: 'employment-layer',\n        indicatorName: 'Employment',\n        source: 'employment-data-source',\n        property: indicatorConfig['Employment'].property,\n        colors: legendData['Employment'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400]\n      }, {\n        id: 'income-layer',\n        indicatorName: 'Income',\n        source: 'income-data-source',\n        property: indicatorConfig['Income'].property,\n        colors: legendData['Income'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }, {\n        id: 'pob-layer',\n        indicatorName: 'POB',\n        source: 'pob-data-source',\n        property: indicatorConfig['POB'].property,\n        colors: legendData['POB'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400]\n      }, {\n        id: 'occupation-layer',\n        indicatorName: 'Occupation',\n        source: 'occupation-data-source',\n        property: indicatorConfig['Occupation'].property,\n        colors: legendData['Occupation'].items.map(i => i.color),\n        stops: [0, 100, 200, 300, 400, 500, 600, 700, 800]\n      }];\n      layers.forEach(layer => {\n        // Fill paint\n        let paint;\n        if (layer.type === 'step') {\n          const base = '#ffffff';\n          const stepExpr = ['step', ['to-number', ['get', layer.property]], base];\n          layer.breaks.forEach((b, i) => {\n            stepExpr.push(b, layer.colors[i] || layer.colors[layer.colors.length - 1]);\n          });\n          paint = {\n            'fill-color': stepExpr,\n            'fill-opacity': 0.6\n          };\n        } else {\n          const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n          paint = {\n            'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops],\n            'fill-opacity': 0.6\n          };\n        }\n        map.current.addLayer({\n          id: layer.id,\n          type: 'fill',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint\n        });\n\n        // Base thin boundary for clear geometry edges (always visible with layer)\n        const baseOutlineId = `${layer.id}-base-outline`;\n        map.current.addLayer({\n          id: baseOutlineId,\n          type: 'line',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'line-color': '#666',\n            'line-width': 0.4,\n            'line-opacity': 0.7\n          }\n        });\n\n        // Outline layer that lights up on hover\n        const outlineId = `${layer.id}-hover-outline`;\n        map.current.addLayer({\n          id: outlineId,\n          type: 'line',\n          source: layer.source,\n          layout: {\n            visibility: 'none'\n          },\n          paint: {\n            'line-color': '#111',\n            'line-width': 2.5,\n            'line-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 1, 0]\n          }\n        });\n\n        // Hover feature-state handlers\n        map.current.on('mousemove', layer.id, e => {\n          if (!e.features || !e.features.length) return;\n          const f = e.features[0];\n          const sourceId = layer.source;\n          const prev = hoverStateBySource.current[sourceId];\n          if (prev !== undefined) {\n            try {\n              map.current.setFeatureState({\n                source: sourceId,\n                id: prev\n              }, {\n                hover: false\n              });\n            } catch (_) {}\n          }\n          hoverStateBySource.current[sourceId] = f.id;\n          try {\n            map.current.setFeatureState({\n              source: sourceId,\n              id: f.id\n            }, {\n              hover: true\n            });\n          } catch (_) {}\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          const sourceId = layer.source;\n          const prev = hoverStateBySource.current[sourceId];\n          if (prev !== undefined) {\n            try {\n              map.current.setFeatureState({\n                source: sourceId,\n                id: prev\n              }, {\n                hover: false\n              });\n            } catch (_) {}\n            hoverStateBySource.current[sourceId] = undefined;\n          }\n        });\n      });\n      map.current.addLayer({\n        id: 'base-outline-layer',\n        type: 'line',\n        source: 'base-outline-data-source',\n        paint: {\n          'line-color': '#444',\n          'line-width': 0.2\n        }\n      });\n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n        precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC');\n      map.current.addLayer({\n        id: 'precincts-fill-layer',\n        type: 'fill',\n        source: 'precincts-data-source',\n        paint: {\n          'fill-color': '#ffffffff',\n          'fill-opacity': 0.15\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': 'rgba(0, 0, 0, 0.4)',\n          'line-width': 7,\n          'line-translate': [2, 2],\n          'line-blur': 4\n        }\n      });\n      map.current.addLayer({\n        id: 'precincts-outline-layer',\n        type: 'line',\n        source: 'precincts-data-source',\n        paint: {\n          'line-color': '#0868ac',\n          'line-width': 2.5,\n          'line-opacity': 0.9\n        }\n      });\n\n      // Precinct click handlers removed (no narrative panel)\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = 'pointer';\n      });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => {\n        map.current.getCanvas().style.cursor = '';\n      });\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [[144.890, -37.850], [144.948, -37.816]];\n    map.current.fitBounds(bounds, {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: leftPanelWidth,\n        right: rightPanelWidth\n      },\n      duration: 2000,\n      essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function (...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, ms);\n      };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [[144.890, -37.850], [144.948, -37.816]];\n      map.current.fitBounds(bounds, {\n        padding: {\n          top: 20,\n          bottom: 20,\n          left: leftPanelWidth,\n          right: rightPanelWidth\n        },\n        duration: 0\n      });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = ['education-layer', 'employment-layer', 'income-layer', 'pob-layer', 'occupation-layer'];\n    // Do NOT show preloaded indicator layers when selecting an indicator; we only visualize uploaded CSV output\n    const selectedLayerId = null;\n    if (map.current.getLayer('base-outline-layer')) {\n      map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        const vis = layerId === selectedLayerId ? 'visible' : 'none';\n        map.current.setLayoutProperty(layerId, 'visibility', vis);\n        const outlineId = `${layerId}-hover-outline`;\n        const baseOutlineId = `${layerId}-base-outline`;\n        if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', vis);\n        if (map.current.getLayer(baseOutlineId)) map.current.setLayoutProperty(baseOutlineId, 'visibility', vis);\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Handle uploaded GeoJSON rendering\n  useEffect(() => {\n    var _dataToRender, _dataToRender$feature, _legendData$selectedI;\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const sourceId = 'uploaded-geojson-source';\n    const fillId = 'uploaded-geojson-fill';\n    const outlineId = 'uploaded-geojson-outline';\n    if (!uploadedGeojson) {\n      if (map.current.getLayer(fillId)) map.current.setLayoutProperty(fillId, 'visibility', 'none');\n      if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', 'none');\n      return;\n    }\n\n    // Determine the property to visualize\n    const detectTotalKey = (fc, indicator) => {\n      if (!fc || !fc.features || !fc.features.length) return null;\n      const props = fc.features[0].properties || {};\n      const keys = Object.keys(props);\n      const indicatorKey = (indicator || '').toLowerCase();\n\n      // Explicit cases for special indicators produced by backend\n      if (indicatorKey.includes('industry')) {\n        const exact = keys.find(k => k.toLowerCase() === 'industry specialisation_21');\n        if (exact) return exact;\n        const fuzzy = keys.find(k => k.toLowerCase().includes('industry') && k.toLowerCase().includes('special'));\n        if (fuzzy) return fuzzy;\n      }\n\n      // Prefer keys containing both indicator name and 'total'\n      let match = keys.find(k => k.toLowerCase().includes('total') && k.toLowerCase().includes(indicatorKey));\n      if (!match) match = keys.find(k => k.toLowerCase().includes('total')) || null;\n      if (match) return match;\n\n      // Fallback: first numeric field that is not an ID\n      const idLike = new Set(['sa1_code', 'sa1_code21', 'dzn_21', 'dzn_code21']);\n      for (const k of keys) {\n        if (idLike.has(k.toLowerCase())) continue;\n        const v = Number(props[k]);\n        if (Number.isFinite(v)) return k;\n      }\n      // Final fallback: first property key\n      return keys[0] || null;\n    };\n\n    // If indicator is DZN-based, filter features to the required DZN list\n    const indLower = (selectedIndicator || '').toLowerCase();\n    const isDznBased = indLower.includes('industry') || indLower.includes('total') && indLower.includes('jobs');\n    let dataToRender = uploadedGeojson;\n    try {\n      var _uploadedGeojson$feat;\n      if (isDznBased && uploadedGeojson !== null && uploadedGeojson !== void 0 && (_uploadedGeojson$feat = uploadedGeojson.features) !== null && _uploadedGeojson$feat !== void 0 && _uploadedGeojson$feat.length) {\n        const idKey = Object.keys(uploadedGeojson.features[0].properties || {}).find(k => k.toLowerCase() === 'dzn_21' || k.toLowerCase() === 'dzn_code21' || k.toLowerCase().includes('dzn')) || 'DZN_21';\n        const filtered = uploadedGeojson.features.filter(f => {\n          const raw = (f.properties || {})[idKey];\n          const idStr = String(raw).replace(/\\D/g, '');\n          return DZN_FILTER_SET.has(idStr);\n        });\n        dataToRender = {\n          type: 'FeatureCollection',\n          features: filtered\n        };\n      }\n    } catch (_) {}\n\n    // Build property options (numeric fields) and choose default\n    if ((_dataToRender = dataToRender) !== null && _dataToRender !== void 0 && (_dataToRender$feature = _dataToRender.features) !== null && _dataToRender$feature !== void 0 && _dataToRender$feature.length) {\n      const sampleProps = dataToRender.features[0].properties || {};\n      const keys = Object.keys(sampleProps).filter(k => {\n        const kl = k.toLowerCase();\n        if (kl.includes('sa1') || kl.includes('dzn') || kl.includes('id') || kl.includes('code')) return false;\n        const v = Number(sampleProps[k]);\n        return Number.isFinite(v);\n      });\n      setPropertyOptions(keys);\n      if (!selectedProperty) {\n        const auto = detectTotalKey(dataToRender, selectedIndicator);\n        setSelectedProperty(auto || keys[0] || null);\n      }\n    }\n    const totalKey = selectedProperty || detectTotalKey(dataToRender, selectedIndicator);\n\n    // Keep popup property in sync\n    popupPropRef.current = totalKey;\n\n    // Compute min/max for the selected key\n    const values = (dataToRender.features || []).map(f => Number((f.properties || {})[totalKey])).filter(v => Number.isFinite(v));\n    const min = values.length ? Math.min(...values) : 0;\n    const max = values.length ? Math.max(...values) : 1;\n    // Build equal-interval classes (5 classes)\n    const palette = (((_legendData$selectedI = legendData[selectedIndicator]) === null || _legendData$selectedI === void 0 ? void 0 : _legendData$selectedI.items) || [{\n      color: '#edf8fb'\n    }, {\n      color: '#b2e2e2'\n    }, {\n      color: '#66c2a4'\n    }, {\n      color: '#2ca25f'\n    }, {\n      color: '#006d2c'\n    }]).map(i => i.color).slice(0, 5);\n    while (palette.length < 5) palette.push(palette[palette.length - 1] || '#888');\n    const n = 5;\n    const width = max - min || 1;\n    const t1 = min + width * (1 / n);\n    const t2 = min + width * (2 / n);\n    const t3 = min + width * (3 / n);\n    const t4 = min + width * (4 / n);\n    const stepExpr = ['step', ['to-number', ['get', totalKey]], palette[0], t1, palette[1], t2, palette[2], t3, palette[3], t4, palette[4]];\n\n    // Prepare legend info ranges\n    const ranges = [{\n      min,\n      max: t1,\n      color: palette[0]\n    }, {\n      min: t1,\n      max: t2,\n      color: palette[1]\n    }, {\n      min: t2,\n      max: t3,\n      color: palette[2]\n    }, {\n      min: t3,\n      max: t4,\n      color: palette[3]\n    }, {\n      min: t4,\n      max,\n      color: palette[4]\n    }];\n    setLegendInfo({\n      title: totalKey,\n      ranges\n    });\n    if (map.current.getSource(sourceId)) {\n      map.current.getSource(sourceId).setData(dataToRender);\n    } else {\n      map.current.addSource(sourceId, {\n        type: 'geojson',\n        data: dataToRender\n      });\n      map.current.addLayer({\n        id: fillId,\n        type: 'fill',\n        source: sourceId,\n        paint: {\n          'fill-color': stepExpr,\n          'fill-opacity': 0.6\n        }\n      });\n      map.current.addLayer({\n        id: outlineId,\n        type: 'line',\n        source: sourceId,\n        paint: {\n          'line-color': '#cc8800',\n          'line-width': 1.2\n        }\n      });\n\n      // Popup on hover/click for uploaded layer\n      const popup = new maplibregl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      const showPopup = e => {\n        if (!e.features || !e.features.length) return;\n        const f = e.features[0];\n        const props = f.properties || {};\n        const idKey = Object.keys(props).find(k => k.toLowerCase() === 'dzn_21' || k.toLowerCase() === 'dzn_code21' || k.toLowerCase() === 'sa1_code' || k.toLowerCase() === 'sa1_code21');\n        const idVal = idKey ? props[idKey] : '';\n        const k = popupPropRef.current || '';\n        const val = k ? props[k] : '';\n        const html = `<div style=\\\"font-size:12px\\\"><div><strong>${idKey || ''}</strong>: ${idVal}</div><div><strong>${k}</strong>: ${val}</div></div>`;\n        popup.setLngLat(e.lngLat).setHTML(html).addTo(map.current);\n      };\n      map.current.on('mousemove', fillId, showPopup);\n      map.current.on('click', fillId, showPopup);\n      map.current.on('mouseleave', fillId, () => popup.remove());\n    }\n    // Update paint if layer already exists (e.g., new upload with a different key/range)\n    if (map.current.getLayer(fillId)) {\n      map.current.setPaintProperty(fillId, 'fill-color', stepExpr);\n      map.current.setPaintProperty(fillId, 'fill-opacity', 0.6);\n    }\n    if (map.current.getLayer(fillId)) map.current.setLayoutProperty(fillId, 'visibility', 'visible');\n    if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', 'visible');\n  }, [uploadedGeojson, selectedIndicator, selectedProperty]);\n  const handleFileChange = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file || !selectedIndicator) return;\n    setUploading(true);\n    try {\n      const form = new FormData();\n      form.append('indicator', selectedIndicator.toLowerCase());\n      form.append('file', file);\n      const attempts = [];\n      const base = process.env.REACT_APP_API_URL;\n      if (base) attempts.push(`${base}/generate`);\n      // CRA dev proxy\n      attempts.push('/generate');\n      // Same host on port 8000\n      if (typeof window !== 'undefined') {\n        const proto = window.location.protocol;\n        const host = window.location.hostname;\n        attempts.push(`${proto}//${host}:8000/generate`);\n      }\n      // Explicit localhost\n      attempts.push('http://localhost:8000/generate');\n      let res;\n      let lastErr;\n      for (const url of attempts) {\n        try {\n          res = await fetch(url, {\n            method: 'POST',\n            body: form\n          });\n          if (res.ok) break;\n          const text = await res.text();\n          lastErr = new Error(`HTTP ${res.status} at ${url}: ${text}`);\n        } catch (err) {\n          lastErr = err;\n        }\n      }\n      if (!res || !res.ok) throw lastErr || new Error('Upload failed');\n      const geojson = await res.json();\n      setUploadedGeojson(geojson);\n      setSelectedProperty(null); // Reset selection on new upload\n    } catch (err) {\n      console.error(err);\n      alert(`Failed to generate GeoJSON from CSV.\\n${(err === null || err === void 0 ? void 0 : err.message) || ''}`);\n    } finally {\n      setUploading(false);\n      // Reset file input to allow re-upload of same file\n      e.target.value = '';\n    }\n  };\n\n  // (All narrative, search, and export logic removed)\n\n  // --- RENDER METHOD ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: 'calc(100vh - 78px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      style: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '1rem',\n        left: '1rem',\n        backgroundColor: 'white',\n        padding: '1rem',\n        borderRadius: '0.5rem',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n        width: '320px',\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: '1.125rem',\n          fontWeight: 600,\n          marginBottom: '0.5rem'\n        },\n        children: \"Select Indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedIndicator || '',\n        onChange: e => setSelectedIndicator(e.target.value || null),\n        style: {\n          width: '100%',\n          padding: '0.5rem',\n          border: '1px solid #D1D5DB',\n          borderRadius: '0.375rem',\n          marginBottom: '0.75rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Education\",\n          children: \"Education\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Employment\",\n          children: \"Employment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"POB\",\n          children: \"POB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Occupation\",\n          children: \"Occupation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Total number of jobs\",\n          children: \"Total number of jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Industry specialisation\",\n          children: \"Industry specialisation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          fontSize: '0.9rem',\n          marginBottom: '0.5rem'\n        },\n        children: \"Upload CSV for selected indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv,text/csv\",\n        onChange: handleFileChange,\n        disabled: !selectedIndicator || uploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 3\n      }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '0.5rem',\n          fontSize: '0.85rem'\n        },\n        children: \"Processing\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 23\n      }, this), uploadedGeojson && propertyOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '0.75rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            fontSize: '0.9rem',\n            marginBottom: '0.25rem'\n          },\n          children: \"Property to visualize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedProperty || '',\n          onChange: e => setSelectedProperty(e.target.value || null),\n          style: {\n            width: '100%',\n            padding: '0.5rem',\n            border: '1px solid #D1D5DB',\n            borderRadius: '0.375rem'\n          },\n          children: propertyOptions.map(k => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: k,\n            children: k\n          }, k, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), legendInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        right: '1rem',\n        bottom: '1rem',\n        backgroundColor: 'white',\n        padding: '0.75rem',\n        borderRadius: '0.5rem',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 600,\n          fontSize: '0.95rem',\n          marginBottom: '0.5rem'\n        },\n        children: legendInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '4px'\n        },\n        children: legendInfo.ranges.map((r, i) => {\n          const fmt = x => {\n            const n = Number(x);\n            if (!Number.isFinite(n)) return String(x);\n            const abs = Math.abs(n);\n            const digits = abs >= 100 ? 0 : abs >= 10 ? 1 : 2;\n            return n.toLocaleString(undefined, {\n              maximumFractionDigits: digits\n            });\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: 18,\n                height: 12,\n                backgroundColor: r.color,\n                border: '1px solid #ccc'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.85rem'\n              },\n              children: [fmt(r.min), \" \\u2013 \", fmt(r.max)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 464,\n    columnNumber: 5\n  }, this);\n}\n// --- END: MAP COMPONENT ---\n_s(Map, \"CCLoCgaLK/V82UgiF4Z27IjLRns=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","maplibregl","jsxDEV","_jsxDEV","Map","_s","mapContainer","map","hoverStateBySource","PRECINCT_NAMES","PRECINCT_COLORS","selectedIndicator","setSelectedIndicator","uploading","setUploading","uploadedGeojson","setUploadedGeojson","selectedProperty","setSelectedProperty","propertyOptions","setPropertyOptions","popupPropRef","legendInfo","setLegendInfo","leftPanelWidth","rightPanelWidth","legendData","title","items","color","label","DZN_FILTER_SET","Set","String","indicatorConfig","path","property","source","current","container","style","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","preserveDrawingBuffer","on","e","console","error","message","adjustMapBounds","sources","name","promoteId","forEach","s","spec","type","data","addSource","layers","id","indicatorName","colors","i","stops","layer","paint","base","stepExpr","breaks","b","push","length","colorStops","flatMap","stop","addLayer","layout","visibility","baseOutlineId","outlineId","features","f","sourceId","prev","undefined","setFeatureState","hover","_","precinctColorExpression","getCanvas","cursor","remove","bounds","fitBounds","padding","top","bottom","left","right","duration","essential","debounce","fn","ms","timer","args","clearTimeout","setTimeout","apply","debouncedAdjustBounds","debouncedResizeListener","window","addEventListener","removeEventListener","isStyleLoaded","allLayerIds","selectedLayerId","getLayer","setLayoutProperty","layerId","vis","_dataToRender","_dataToRender$feature","_legendData$selectedI","fillId","detectTotalKey","fc","indicator","props","properties","keys","Object","indicatorKey","toLowerCase","includes","exact","find","k","fuzzy","match","idLike","has","v","Number","isFinite","indLower","isDznBased","dataToRender","_uploadedGeojson$feat","idKey","filtered","filter","raw","idStr","replace","sampleProps","kl","auto","totalKey","values","min","Math","max","palette","slice","n","width","t1","t2","t3","t4","ranges","getSource","setData","popup","Popup","closeButton","closeOnClick","showPopup","idVal","val","html","setLngLat","lngLat","setHTML","addTo","setPaintProperty","handleFileChange","_e$target$files","file","target","files","form","FormData","append","attempts","process","env","REACT_APP_API_URL","proto","location","protocol","host","hostname","res","lastErr","url","fetch","method","body","ok","text","Error","status","err","geojson","json","alert","value","position","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","borderRadius","boxShadow","zIndex","fontSize","fontWeight","marginBottom","onChange","border","display","accept","disabled","marginTop","flexDirection","gap","r","fmt","x","abs","digits","toLocaleString","maximumFractionDigits","alignItems","_c","$RefreshReg$"],"sources":["/Users/E113938/Library/CloudStorage/OneDrive-RMITUniversity/My Mac Folders/2025/FILTER Project/FILTER/Map Dashboard/Map Demonstrator_backend/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n\n// (Legend and AI description components removed per requirements)\n\n\n// --- START: MAP COMPONENT ---\nexport default function Map() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const hoverStateBySource = useRef({}); // track hovered feature ids per source for outlines\n\n  // Definitions for interactive text highlighting\n  const PRECINCT_NAMES = ['Montague', 'Sandridge', 'Lorimer', 'Wirraway', 'Employment Precinct'];\n  const PRECINCT_COLORS = {\n    'Montague': '#3498db',\n    'Sandridge': '#e74c3c',\n    'Lorimer': '#2ecc71',\n    'Wirraway': '#f39c12',\n    'Employment Precinct': '#9b59b6'\n  };\n\n  // --- STATE MANAGEMENT ---\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadedGeojson, setUploadedGeojson] = useState(null);\n  const [selectedProperty, setSelectedProperty] = useState(null);\n  const [propertyOptions, setPropertyOptions] = useState([]);\n  const popupPropRef = useRef(null);\n  const [legendInfo, setLegendInfo] = useState(null);\n\n  // Panel widths for map padding\n  const leftPanelWidth = 200;\n  const rightPanelWidth = 0;\n\n  // --- DATA DEFINITIONS ---\n  const legendData = {\n    'Education': {\n      title: 'Education (Total)',\n      items: [ { color: '#fee5d9', label: 'low' }, { color: '#fcbba1', label: '' }, { color: '#fc9272', label: '' }, { color: '#fb6a4a', label: '' }, { color: '#ef3b2c', label: '' }, { color: '#cb181d', label: 'high' } ]\n    },\n    'Income': {\n      title: 'Income (Total)',\n      items: [ { color: '#fcfbfd', label: 'low' }, { color: '#efedf5', label: '' }, { color: '#dadaeb', label: '' }, { color: '#bcbddc', label: '' }, { color: '#9e9ac8', label: '' }, { color: '#807dba', label: '' }, { color: '#6a51a3', label: '' }, { color: '#54278f', label: '' }, { color: '#3f007d', label: 'high' } ]\n    },\n    'Occupation': {\n      title: 'Occupation (Total)',\n      items: [ { color: '#f7fbff', label: 'low' }, { color: '#deebf7', label: '' }, { color: '#c6dbef', label: '' }, { color: '#9ecae1', label: '' }, { color: '#6baed6', label: '' }, { color: '#4292c6', label: '' }, { color: '#2171b5', label: '' }, { color: '#08519c', label: '' }, { color: '#08306b', label: 'high' } ]\n    },\n    'Employment': {\n      title: 'Employment (Total)',\n      items: [ { color: '#f1eef6', label: 'low' }, { color: '#d7b5d8', label: '' }, { color: '#c994c7', label: '' }, { color: '#df65b0', label: '' }, { color: '#dd1c77', label: 'high' } ]\n    },\n    'POB': {\n      title: 'Place of Birth (Total)',\n      items: [ { color: '#edf8e9', label: 'low' }, { color: '#bae4b3', label: '' }, { color: '#74c476', label: '' }, { color: '#31a354', label: '' }, { color: '#006d2c', label: 'high' } ]\n    }\n  };\n\n  // DZN filter list requested\n  const DZN_FILTER_SET = new Set([\n    215110001, 215110002, 215110003, 215110004, 215110005, 215110006,\n    215110007, 215110008, 215110009, 215110010, 215110011, 215110012\n  ].map(String));\n\n  const indicatorConfig = {\n    'Education': { path: '/data/education-fb-sa1.geojson', property: 'Education-VIC_Total', source: 'education-data-source' },\n    'Employment': { path: '/data/employment-fb-sa1.geojson', property: 'employment-VIC_Total', source: 'employment-data-source' },\n    'Income': { path: '/data/income-fb-sa1.geojson', property: 'Income-VIC1_Total', source: 'income-data-source' },\n    'POB': { path: '/data/POB-fb-sa1.geojson', property: 'POB-VIC1_Total', source: 'pob-data-source' },\n    'Occupation': { path: '/data/occupation-fb-sa1.geojson', property: 'Occupation-VIC_Total', source: 'occupation-data-source' }\n  };\n\n  // --- HOOKS for Map Lifecycle & Effects ---\n\n  // Main Map Initialization\n  useEffect(() => {\n    if (map.current) return;\n    if (!mapContainer.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n      scrollZoom: false, boxZoom: false, dragRotate: false, dragPan: false,\n      keyboard: false, doubleClickZoom: false, touchZoomRotate: false,\n      preserveDrawingBuffer: true // Required for exporting map canvas\n    });\n\n    map.current.on('error', (e) => console.error('A map error occurred:', e.error ? e.error.message : 'Unknown error'));\n\n    map.current.on('load', () => {\n      adjustMapBounds();\n      // Add sources\n      const sources = [\n        { name: 'base-outline', path: '/data/fb-sa1-2021-WGS84-boundary.geojson' },\n        { name: 'employment', path: '/data/employment-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'education', path: '/data/education-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'pob', path: '/data/POB-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'income', path: '/data/income-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'occupation', path: '/data/occupation-fb-sa1.geojson', promoteId: 'SA1_CODE21' },\n        { name: 'precincts', path: '/data/fb-precincts-official-boundary.geojson' },\n        // jobs layers removed per requirements\n      ];\n      sources.forEach(s => {\n        const spec = { type: 'geojson', data: s.path };\n        if (s.promoteId) spec.promoteId = s.promoteId;\n        map.current.addSource(`${s.name}-data-source`, spec);\n      });\n\n      // Define layers for indicators\n      const layers = [\n        { id: 'education-layer', indicatorName: 'Education', source: 'education-data-source', property: indicatorConfig['Education'].property, colors: legendData['Education'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500] },\n        { id: 'employment-layer', indicatorName: 'Employment', source: 'employment-data-source', property: indicatorConfig['Employment'].property, colors: legendData['Employment'].items.map(i => i.color), stops: [0, 100, 200, 300, 400] },\n        { id: 'income-layer', indicatorName: 'Income', source: 'income-data-source', property: indicatorConfig['Income'].property, colors: legendData['Income'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] },\n        { id: 'pob-layer', indicatorName: 'POB', source: 'pob-data-source', property: indicatorConfig['POB'].property, colors: legendData['POB'].items.map(i => i.color), stops: [0, 100, 200, 300, 400] },\n        { id: 'occupation-layer', indicatorName: 'Occupation', source: 'occupation-data-source', property: indicatorConfig['Occupation'].property, colors: legendData['Occupation'].items.map(i => i.color), stops: [0, 100, 200, 300, 400, 500, 600, 700, 800] }\n      ];\n\n      layers.forEach(layer => {\n        // Fill paint\n        let paint;\n        if (layer.type === 'step') {\n          const base = '#ffffff';\n          const stepExpr = ['step', ['to-number', ['get', layer.property]], base];\n          layer.breaks.forEach((b, i) => { stepExpr.push(b, layer.colors[i] || layer.colors[layer.colors.length - 1]); });\n          paint = { 'fill-color': stepExpr, 'fill-opacity': 0.6 };\n        } else {\n          const colorStops = layer.stops.flatMap((stop, i) => [stop, layer.colors[i] || layer.colors[layer.colors.length - 1]]);\n          paint = { 'fill-color': ['interpolate', ['linear'], ['to-number', ['get', layer.property]], ...colorStops], 'fill-opacity': 0.6 };\n        }\n        map.current.addLayer({ id: layer.id, type: 'fill', source: layer.source, layout: { visibility: 'none' }, paint });\n\n        // Base thin boundary for clear geometry edges (always visible with layer)\n        const baseOutlineId = `${layer.id}-base-outline`;\n        map.current.addLayer({\n          id: baseOutlineId,\n          type: 'line',\n          source: layer.source,\n          layout: { visibility: 'none' },\n          paint: { 'line-color': '#666', 'line-width': 0.4, 'line-opacity': 0.7 }\n        });\n\n  // Outline layer that lights up on hover\n  const outlineId = `${layer.id}-hover-outline`;\n        map.current.addLayer({\n          id: outlineId,\n          type: 'line',\n          source: layer.source,\n          layout: { visibility: 'none' },\n          paint: {\n            'line-color': '#111',\n            'line-width': 2.5,\n            'line-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 1, 0]\n          }\n        });\n\n        // Hover feature-state handlers\n        map.current.on('mousemove', layer.id, (e) => {\n          if (!e.features || !e.features.length) return;\n          const f = e.features[0];\n          const sourceId = layer.source;\n          const prev = hoverStateBySource.current[sourceId];\n          if (prev !== undefined) {\n            try { map.current.setFeatureState({ source: sourceId, id: prev }, { hover: false }); } catch (_) {}\n          }\n          hoverStateBySource.current[sourceId] = f.id;\n          try { map.current.setFeatureState({ source: sourceId, id: f.id }, { hover: true }); } catch (_) {}\n        });\n        map.current.on('mouseleave', layer.id, () => {\n          const sourceId = layer.source;\n          const prev = hoverStateBySource.current[sourceId];\n          if (prev !== undefined) {\n            try { map.current.setFeatureState({ source: sourceId, id: prev }, { hover: false }); } catch (_) {}\n            hoverStateBySource.current[sourceId] = undefined;\n          }\n        });\n      });\n\n      map.current.addLayer({\n        id: 'base-outline-layer', type: 'line', source: 'base-outline-data-source',\n        paint: { 'line-color': '#444', 'line-width': 0.2 }\n      });\n      \n      const precinctColorExpression = ['case'];\n      PRECINCT_NAMES.forEach(name => {\n          precinctColorExpression.push(['==', ['get', 'name'], name], PRECINCT_COLORS[name]);\n      });\n      precinctColorExpression.push('#CCC'); \n\n     map.current.addLayer({\n        id: 'precincts-fill-layer', type: 'fill', source: 'precincts-data-source',\n        paint: { 'fill-color': '#ffffffff', 'fill-opacity': 0.15 }\n      });\n      map.current.addLayer({\n        id: 'precincts-shadow-layer', type: 'line', source: 'precincts-data-source',\n        paint: { 'line-color': 'rgba(0, 0, 0, 0.4)', 'line-width': 7, 'line-translate': [2, 2], 'line-blur': 4 }\n      });\n      map.current.addLayer({\n          id: 'precincts-outline-layer', type: 'line', source: 'precincts-data-source',\n          paint: { 'line-color': '#0868ac', 'line-width': 2.5, 'line-opacity': 0.9 }\n      });\n\n  // Precinct click handlers removed (no narrative panel)\n\n      map.current.on('mouseenter', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = 'pointer'; });\n      map.current.on('mouseleave', 'precincts-fill-layer', () => { map.current.getCanvas().style.cursor = ''; });\n    });\n\n    return () => { if (map.current) { map.current.remove(); map.current = null; } };\n  }, []);\n\n  // Adjust map bounds on load\n  const adjustMapBounds = () => {\n    if (!map.current) return;\n    const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n    map.current.fitBounds(bounds, {\n      padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth },\n      duration: 2000, essential: true\n    });\n  };\n\n  // Adjust map bounds on window resize\n  useEffect(() => {\n    function debounce(fn, ms) {\n      let timer;\n      return function(...args) { clearTimeout(timer); timer = setTimeout(() => { fn.apply(this, args); }, ms); };\n    }\n    const debouncedAdjustBounds = () => {\n      if (!map.current) return;\n      const bounds = [ [144.890, -37.850], [144.948, -37.816] ];\n      map.current.fitBounds(bounds, { padding: { top: 20, bottom: 20, left: leftPanelWidth, right: rightPanelWidth }, duration: 0 });\n    };\n    const debouncedResizeListener = debounce(debouncedAdjustBounds, 150);\n    window.addEventListener('resize', debouncedResizeListener);\n    return () => window.removeEventListener('resize', debouncedResizeListener);\n  }, []);\n\n  // Toggle visibility of indicator layers\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const allLayerIds = [\n      'education-layer',\n      'employment-layer',\n      'income-layer',\n      'pob-layer',\n      'occupation-layer'\n    ];\n  // Do NOT show preloaded indicator layers when selecting an indicator; we only visualize uploaded CSV output\n  const selectedLayerId = null;\n\n    if (map.current.getLayer('base-outline-layer')) {\n        map.current.setLayoutProperty('base-outline-layer', 'visibility', selectedIndicator ? 'visible' : 'none');\n    }\n\n    allLayerIds.forEach(layerId => {\n      if (map.current.getLayer(layerId)) {\n        const vis = layerId === selectedLayerId ? 'visible' : 'none';\n        map.current.setLayoutProperty(layerId, 'visibility', vis);\n  const outlineId = `${layerId}-hover-outline`;\n  const baseOutlineId = `${layerId}-base-outline`;\n  if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', vis);\n  if (map.current.getLayer(baseOutlineId)) map.current.setLayoutProperty(baseOutlineId, 'visibility', vis);\n      }\n    });\n  }, [selectedIndicator]);\n\n  // Handle uploaded GeoJSON rendering\n  useEffect(() => {\n    if (!map.current || !map.current.isStyleLoaded()) return;\n    const sourceId = 'uploaded-geojson-source';\n    const fillId = 'uploaded-geojson-fill';\n    const outlineId = 'uploaded-geojson-outline';\n\n    if (!uploadedGeojson) {\n      if (map.current.getLayer(fillId)) map.current.setLayoutProperty(fillId, 'visibility', 'none');\n      if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', 'none');\n      return;\n    }\n\n    // Determine the property to visualize\n    const detectTotalKey = (fc, indicator) => {\n      if (!fc || !fc.features || !fc.features.length) return null;\n      const props = fc.features[0].properties || {};\n      const keys = Object.keys(props);\n      const indicatorKey = (indicator || '').toLowerCase();\n\n      // Explicit cases for special indicators produced by backend\n      if (indicatorKey.includes('industry')) {\n        const exact = keys.find(k => k.toLowerCase() === 'industry specialisation_21');\n        if (exact) return exact;\n        const fuzzy = keys.find(k => k.toLowerCase().includes('industry') && k.toLowerCase().includes('special'));\n        if (fuzzy) return fuzzy;\n      }\n\n      // Prefer keys containing both indicator name and 'total'\n      let match = keys.find(k => k.toLowerCase().includes('total') && k.toLowerCase().includes(indicatorKey));\n      if (!match) match = keys.find(k => k.toLowerCase().includes('total')) || null;\n\n      if (match) return match;\n\n      // Fallback: first numeric field that is not an ID\n      const idLike = new Set(['sa1_code', 'sa1_code21', 'dzn_21', 'dzn_code21']);\n      for (const k of keys) {\n        if (idLike.has(k.toLowerCase())) continue;\n        const v = Number(props[k]);\n        if (Number.isFinite(v)) return k;\n      }\n      // Final fallback: first property key\n      return keys[0] || null;\n    };\n\n    // If indicator is DZN-based, filter features to the required DZN list\n  const indLower = (selectedIndicator || '').toLowerCase();\n  const isDznBased = indLower.includes('industry') || (indLower.includes('total') && indLower.includes('jobs'));\n    let dataToRender = uploadedGeojson;\n    try {\n      if (isDznBased && uploadedGeojson?.features?.length) {\n        const idKey = Object.keys(uploadedGeojson.features[0].properties || {}).find(k => k.toLowerCase() === 'dzn_21' || k.toLowerCase() === 'dzn_code21' || k.toLowerCase().includes('dzn')) || 'DZN_21';\n        const filtered = uploadedGeojson.features.filter(f => {\n          const raw = (f.properties || {})[idKey];\n          const idStr = String(raw).replace(/\\D/g, '');\n          return DZN_FILTER_SET.has(idStr);\n        });\n        dataToRender = { type: 'FeatureCollection', features: filtered };\n      }\n    } catch (_) {}\n\n    // Build property options (numeric fields) and choose default\n    if (dataToRender?.features?.length) {\n      const sampleProps = dataToRender.features[0].properties || {};\n      const keys = Object.keys(sampleProps).filter(k => {\n        const kl = k.toLowerCase();\n        if (kl.includes('sa1') || kl.includes('dzn') || kl.includes('id') || kl.includes('code')) return false;\n        const v = Number(sampleProps[k]);\n        return Number.isFinite(v);\n      });\n      setPropertyOptions(keys);\n      if (!selectedProperty) {\n        const auto = detectTotalKey(dataToRender, selectedIndicator);\n        setSelectedProperty(auto || keys[0] || null);\n      }\n    }\n\n    const totalKey = selectedProperty || detectTotalKey(dataToRender, selectedIndicator);\n\n    // Keep popup property in sync\n    popupPropRef.current = totalKey;\n\n    // Compute min/max for the selected key\n    const values = (dataToRender.features || [])\n      .map(f => Number((f.properties || {})[totalKey]))\n      .filter(v => Number.isFinite(v));\n    const min = values.length ? Math.min(...values) : 0;\n    const max = values.length ? Math.max(...values) : 1;\n    // Build equal-interval classes (5 classes)\n    const palette = (legendData[selectedIndicator]?.items || [\n      { color: '#edf8fb' }, { color: '#b2e2e2' }, { color: '#66c2a4' }, { color: '#2ca25f' }, { color: '#006d2c' }\n    ]).map(i => i.color).slice(0, 5);\n    while (palette.length < 5) palette.push(palette[palette.length - 1] || '#888');\n    const n = 5;\n    const width = (max - min) || 1;\n    const t1 = min + width * (1 / n);\n    const t2 = min + width * (2 / n);\n    const t3 = min + width * (3 / n);\n    const t4 = min + width * (4 / n);\n    const stepExpr = ['step', ['to-number', ['get', totalKey]], palette[0], t1, palette[1], t2, palette[2], t3, palette[3], t4, palette[4]];\n\n    // Prepare legend info ranges\n    const ranges = [\n      { min, max: t1, color: palette[0] },\n      { min: t1, max: t2, color: palette[1] },\n      { min: t2, max: t3, color: palette[2] },\n      { min: t3, max: t4, color: palette[3] },\n      { min: t4, max, color: palette[4] },\n    ];\n    setLegendInfo({ title: totalKey, ranges });\n\n    if (map.current.getSource(sourceId)) {\n      map.current.getSource(sourceId).setData(dataToRender);\n    } else {\n  map.current.addSource(sourceId, { type: 'geojson', data: dataToRender });\n  map.current.addLayer({ id: fillId, type: 'fill', source: sourceId, paint: { 'fill-color': stepExpr, 'fill-opacity': 0.6 } });\n      map.current.addLayer({ id: outlineId, type: 'line', source: sourceId, paint: { 'line-color': '#cc8800', 'line-width': 1.2 } });\n\n      // Popup on hover/click for uploaded layer\n      const popup = new maplibregl.Popup({ closeButton: false, closeOnClick: false });\n      const showPopup = (e) => {\n        if (!e.features || !e.features.length) return;\n        const f = e.features[0];\n        const props = f.properties || {};\n        const idKey = Object.keys(props).find(k => k.toLowerCase() === 'dzn_21' || k.toLowerCase() === 'dzn_code21' || k.toLowerCase() === 'sa1_code' || k.toLowerCase() === 'sa1_code21');\n        const idVal = idKey ? props[idKey] : '';\n        const k = popupPropRef.current || '';\n        const val = k ? props[k] : '';\n        const html = `<div style=\\\"font-size:12px\\\"><div><strong>${idKey || ''}</strong>: ${idVal}</div><div><strong>${k}</strong>: ${val}</div></div>`;\n        popup.setLngLat(e.lngLat).setHTML(html).addTo(map.current);\n      };\n      map.current.on('mousemove', fillId, showPopup);\n      map.current.on('click', fillId, showPopup);\n      map.current.on('mouseleave', fillId, () => popup.remove());\n    }\n    // Update paint if layer already exists (e.g., new upload with a different key/range)\n    if (map.current.getLayer(fillId)) {\n      map.current.setPaintProperty(fillId, 'fill-color', stepExpr);\n      map.current.setPaintProperty(fillId, 'fill-opacity', 0.6);\n    }\n    if (map.current.getLayer(fillId)) map.current.setLayoutProperty(fillId, 'visibility', 'visible');\n    if (map.current.getLayer(outlineId)) map.current.setLayoutProperty(outlineId, 'visibility', 'visible');\n  }, [uploadedGeojson, selectedIndicator, selectedProperty]);\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files?.[0];\n    if (!file || !selectedIndicator) return;\n    setUploading(true);\n    try {\n      const form = new FormData();\n      form.append('indicator', selectedIndicator.toLowerCase());\n      form.append('file', file);\n      const attempts = [];\n      const base = process.env.REACT_APP_API_URL;\n      if (base) attempts.push(`${base}/generate`);\n      // CRA dev proxy\n      attempts.push('/generate');\n      // Same host on port 8000\n      if (typeof window !== 'undefined') {\n        const proto = window.location.protocol;\n        const host = window.location.hostname;\n        attempts.push(`${proto}//${host}:8000/generate`);\n      }\n      // Explicit localhost\n      attempts.push('http://localhost:8000/generate');\n\n      let res;\n      let lastErr;\n      for (const url of attempts) {\n        try {\n          res = await fetch(url, { method: 'POST', body: form });\n          if (res.ok) break;\n          const text = await res.text();\n          lastErr = new Error(`HTTP ${res.status} at ${url}: ${text}`);\n        } catch (err) {\n          lastErr = err;\n        }\n      }\n      if (!res || !res.ok) throw lastErr || new Error('Upload failed');\n      const geojson = await res.json();\n      setUploadedGeojson(geojson);\n      setSelectedProperty(null); // Reset selection on new upload\n    } catch (err) {\n      console.error(err);\n  alert(`Failed to generate GeoJSON from CSV.\\n${err?.message || ''}`);\n    } finally {\n      setUploading(false);\n      // Reset file input to allow re-upload of same file\n      e.target.value = '';\n    }\n  };\n\n  // (All narrative, search, and export logic removed)\n\n  // --- RENDER METHOD ---\n  return (\n    <div style={{ position: 'relative', width: '100%', height: 'calc(100vh - 78px)' }}>\n      <div ref={mapContainer} style={{ position: 'absolute', width: '100%', height: '100%' }} />\n      {/* Left overlay with dropdown and file upload */}\n      <div style={{ position: 'absolute', top: '1rem', left: '1rem', backgroundColor: 'white', padding: '1rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', width: '320px', zIndex: 10 }}>\n        <h3 style={{ fontSize: '1.125rem', fontWeight: 600, marginBottom: '0.5rem' }}>Select Indicator</h3>\n        <select\n          value={selectedIndicator || ''}\n          onChange={(e) => setSelectedIndicator(e.target.value || null)}\n          style={{ width: '100%', padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem', marginBottom: '0.75rem' }}\n        >\n          <option value=\"\">Select…</option>\n          <option value=\"Education\">Education</option>\n          <option value=\"Employment\">Employment</option>\n          <option value=\"Income\">Income</option>\n          <option value=\"POB\">POB</option>\n          <option value=\"Occupation\">Occupation</option>\n          <option value=\"Total number of jobs\">Total number of jobs</option>\n          <option value=\"Industry specialisation\">Industry specialisation</option>\n        </select>\n  <label style={{ display: 'block', fontSize: '0.9rem', marginBottom: '0.5rem' }}>Upload CSV for selected indicator</label>\n  <input type=\"file\" accept=\".csv,text/csv\" onChange={handleFileChange} disabled={!selectedIndicator || uploading} />\n        {uploading && <div style={{ marginTop: '0.5rem', fontSize: '0.85rem' }}>Processing…</div>}\n\n        {/* Property selector for uploaded GeoJSON */}\n        {uploadedGeojson && propertyOptions.length > 0 && (\n          <div style={{ marginTop: '0.75rem' }}>\n            <label style={{ display: 'block', fontSize: '0.9rem', marginBottom: '0.25rem' }}>Property to visualize</label>\n            <select\n              value={selectedProperty || ''}\n              onChange={(e) => setSelectedProperty(e.target.value || null)}\n              style={{ width: '100%', padding: '0.5rem', border: '1px solid #D1D5DB', borderRadius: '0.375rem' }}\n            >\n              {propertyOptions.map(k => (\n                <option key={k} value={k}>{k}</option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n\n      {/* Bottom-right dynamic legend tied to selectedProperty */}\n      {legendInfo && (\n        <div style={{ position: 'absolute', right: '1rem', bottom: '1rem', backgroundColor: 'white', padding: '0.75rem', borderRadius: '0.5rem', boxShadow: '0 4px 6px rgba(0,0,0,0.1)', zIndex: 10 }}>\n          <div style={{ fontWeight: 600, fontSize: '0.95rem', marginBottom: '0.5rem' }}>{legendInfo.title}</div>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n            {legendInfo.ranges.map((r, i) => {\n              const fmt = (x) => {\n                const n = Number(x);\n                if (!Number.isFinite(n)) return String(x);\n                const abs = Math.abs(n);\n                const digits = abs >= 100 ? 0 : abs >= 10 ? 1 : 2;\n                return n.toLocaleString(undefined, { maximumFractionDigits: digits });\n              };\n              return (\n                <div key={i} style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n                  <div style={{ width: 18, height: 12, backgroundColor: r.color, border: '1px solid #ccc' }} />\n                  <div style={{ fontSize: '0.85rem' }}>{fmt(r.min)} – {fmt(r.max)}</div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n// --- END: MAP COMPONENT ---"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}